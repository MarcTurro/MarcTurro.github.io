{"config": {"indexing": "full", "lang": ["en"], "min_search_length": 3, "prebuild_index": false, "separator": "[\\s\\-]+"}, "docs": [{"location": "index.html", "text": "Num\u00e9riques et Sciences Informatiques", "title": "Accueil"}, {"location": "exempleCode.html", "text": "Premi\u00e8re NSI \u00b6 Programme de la classe \u00b6 Project layout \u00b6 Normalement \u00e7a marche! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Est-ce aussi simple que cela? Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Code pour faire des annotations, (1) consectetur adipiscing elit. 1. :man_raising_hand: I'm an annotation! I can contain `code`, __formatted text__, images, ... basically anything that can be expressed in Markdown. Tab 1 Tab 2 C'est trop cool, (1) consectetur adipiscing elit. I'm an annotation! J'ai compris! (1){.annotate } 1. :woman_raising_hand: I'm an annotation as well! bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ] terminale NSI \u00b6 Note Information the user should notice even if skimming. Tip Optional information to help a user be more successful. Important Essential information required for user success. Caution Negative potential consequences of an action. Warning Dangerous certain consequences of an action. Programme de la classe \u00b6 import tensorflow as tf The range () function is used to generate a sequence of numbers. Project layout \u00b6", "title": "Premi\u00e8re NSI"}, {"location": "exempleCode.html#premiere-nsi", "text": "", "title": "Premi\u00e8re NSI"}, {"location": "exempleCode.html#programme-de-la-classe", "text": "", "title": "Programme de la classe"}, {"location": "exempleCode.html#project-layout", "text": "Normalement \u00e7a marche! Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Est-ce aussi simple que cela? Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod nulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor massa, nec semper lorem quam in massa. Code pour faire des annotations, (1) consectetur adipiscing elit. 1. :man_raising_hand: I'm an annotation! I can contain `code`, __formatted text__, images, ... basically anything that can be expressed in Markdown. Tab 1 Tab 2 C'est trop cool, (1) consectetur adipiscing elit. I'm an annotation! J'ai compris! (1){.annotate } 1. :woman_raising_hand: I'm an annotation as well! bubble_sort.py def bubble_sort ( items ): for i in range ( len ( items )): for j in range ( len ( items ) - 1 - i ): if items [ j ] > items [ j + 1 ]: items [ j ], items [ j + 1 ] = items [ j + 1 ], items [ j ]", "title": "Project layout"}, {"location": "exempleCode.html#terminale-nsi", "text": "Note Information the user should notice even if skimming. Tip Optional information to help a user be more successful. Important Essential information required for user success. Caution Negative potential consequences of an action. Warning Dangerous certain consequences of an action.", "title": "terminale NSI"}, {"location": "exempleCode.html#programme-de-la-classe_1", "text": "import tensorflow as tf The range () function is used to generate a sequence of numbers.", "title": "Programme de la classe"}, {"location": "exempleCode.html#project-layout_1", "text": "", "title": "Project layout"}, {"location": "res_prem.html", "text": "1. Ressources int\u00e9ressantes...: \u00b6 Site pour apprendre \u00e0 faire du python futurecoder Site pour apprendre \u00e0 faire du mkdocs Site sympa pour apprendre l'algorithme et python pyrates Site pour utiliser les commandes bash de linux terminus Site pour utiliser une version ant\u00e9rieure de ChatPGT: chatGPT3 Site pour r\u00e9cup\u00e9rer les donn\u00e9es que les g\u00e9ants du web ont sur vous: chatGPT3", "title": "Ressources pour la classe de premi\u00e8re"}, {"location": "res_prem.html#1-ressources-interessantes", "text": "Site pour apprendre \u00e0 faire du python futurecoder Site pour apprendre \u00e0 faire du mkdocs Site sympa pour apprendre l'algorithme et python pyrates Site pour utiliser les commandes bash de linux terminus Site pour utiliser une version ant\u00e9rieure de ChatPGT: chatGPT3 Site pour r\u00e9cup\u00e9rer les donn\u00e9es que les g\u00e9ants du web ont sur vous: chatGPT3", "title": "1. Ressources int\u00e9ressantes...:"}, {"location": "res_term.html", "text": "Ressources de la classe de Terminale \u00b6", "title": "Ressources pour la classe de terminale"}, {"location": "res_term.html#ressources-de-la-classe-de-terminale", "text": "", "title": "Ressources de la classe de Terminale"}, {"location": "ecolo/ecologie.html", "text": "Le saviez-vous? Aujourd'hui Internet pollue plus que l'aviation et bient\u00f4t que l'automobile! Cette page propose des contenus qui nous interrogent sur nos pratiques num\u00e9riques. Il y a des pollutions qui se voient et d'autres dont on ne soup\u00e7onnerait m\u00eame pas l'existence... Le streaming \u00b6 Quatre vid\u00e9os d'une courte dur\u00e9e sur l'origine du streaming, son d\u00e9ploiement et son impact \u00e9cologique, direct ou indirect... Voici le lien Arte TV La face cach\u00e9e du num\u00e9rique \u00b6 ...ou comment r\u00e9duire les impacts du num\u00e9riques sur l'environnement. Un document graphique propos\u00e9 par l'ADEME( Agence De l'Environnement et de la Ma\u00eetrise de l'Energie) ici Le collectif greenIT \u00b6 Le collectif Green IT est un lieu de r\u00e9flexion sur les enjeux de la rencontre entre num\u00e9rique et d\u00e9veloppement durable, ce que l\u2019on appelle couramment le num\u00e9rique responsable ( site ).", "title": "Impact environnemental"}, {"location": "ecolo/ecologie.html#le-streaming", "text": "Quatre vid\u00e9os d'une courte dur\u00e9e sur l'origine du streaming, son d\u00e9ploiement et son impact \u00e9cologique, direct ou indirect... Voici le lien Arte TV", "title": "Le streaming"}, {"location": "ecolo/ecologie.html#la-face-cachee-du-numerique", "text": "...ou comment r\u00e9duire les impacts du num\u00e9riques sur l'environnement. Un document graphique propos\u00e9 par l'ADEME( Agence De l'Environnement et de la Ma\u00eetrise de l'Energie) ici", "title": "La face cach\u00e9e du num\u00e9rique"}, {"location": "ecolo/ecologie.html#le-collectif-greenit", "text": "Le collectif Green IT est un lieu de r\u00e9flexion sur les enjeux de la rencontre entre num\u00e9rique et d\u00e9veloppement durable, ce que l\u2019on appelle couramment le num\u00e9rique responsable ( site ).", "title": "Le collectif greenIT"}, {"location": "maths/index.html", "text": "Disons-le! Faire du python c'est un m\u00e9tier!!! Comme une langue \u00e9trang\u00e8re, c'est en pratiquant qu'on augmente ces comp\u00e9tences et souvent cela passe par de grosses prises de t\u00eates! Alors soyez patients et indulgents!", "title": "Accueil"}, {"location": "maths/boucles.html", "text": "Bient\u00f4t...", "title": "Les boucles"}, {"location": "maths/exercice_python.html", "text": "Une s\u00e9rie d'exercices \u00e0 r\u00e9aliser. R\u00e9flechissez \u00e0 la structure algorithmique avant de passer au codage \u00e0 proprement dit: de combien de variables ai-je besoin? de quel type de variable ai-je besoin? dois-je faire une boucle? y a t-il des conditions? \u00c0 faire: Manipuler des listes On consid\u00e8re une liste quelconque L . Donner l'instruction qui permet d'afficher le premier \u00e9l\u00e9ment de la liste, le deuxi\u00e8me, le dernier. Donner les instructions qui permettent d'ajouter 1 \u00e0 tous les \u00e9l\u00e9ments de la liste. Donner les instructions qui permettent de d\u00e9caler d'un rang tous les \u00e9l\u00e9ments de la liste (le dernier revenant alors \u00e0 la premi\u00e8re position) \u00c0 faire: Manipulation de listes bis Construire un programme qui calcule la somme des \u00e9l\u00e9ments d'une liste. Par exemple: >>> ma_liste1 = [ 1 , 5 , 6 ] # la somme vaut 1+5+6=12 >>> ma_liste2 = [ i for i in range ( 100 )] # la somme vaut 0+1+2+...+98+100=5050 Construire un programme qui calcule la somme des nombres pairs d'une liste d'entiers. Par exemple: >>> ma_liste1 = [ 1 , 5 , 6 ] # la somme vaut 6 >>> ma_liste2 = [ 1 , 2 , 3 , 4 , 5 , 6 , 7 , 8 ] # la somme vaut 2+4+6+8=20 \u00c0 faire: Simuler le nacer d'un d\u00e9 On souhaite simuler plusieurs lancers d'un m\u00eame d\u00e9. Donner l'instruction qui permet d'affecter \u00e0 une variable n , un entier saisi au clavier. Donner l'instruction qui permet d'affecter \u00e0 une variable de un nombre entier al\u00e9atoire entre 1 et 6. Donner les instructions python qui permettent de simuler n lancers d'un d\u00e9 \u00e0 six faces et de stocker les r\u00e9sultats dans une liste resultat . Plus dur! Donner les instructions python qui permettent de calculer la fr\u00e9quence de sortie de chaque face lorsque on jette n fois un d\u00e9. \u00c0 faire: Course en folie! L\u00e9on et Peppa font une dr\u00f4le de course qui consiste \u00e0 parcourir six cases cons\u00e9cutives. Il lance un d\u00e9: si le d\u00e9 affiche 6, L\u00e9on avance de 6 cases et gagne la course sinon Peppa avance d'une case. Le gagnant est celui qui arrive le premier sur la derni\u00e8re case. Cr\u00e9er une s\u00e9rie d'instructions qui permet de simuler cette course. Utiliser ces instructions pour d\u00e9terminer la probabilit\u00e9 de gagner de chaque individu. \u00c0 faire: descente dichotomique Tout le monde conna\u00eet le jeu du juste prix qui consiste \u00e0 trouver le bon prix par le jeu des questions r\u00e9ponses, c'est plus! , c'est moins! . Cr\u00e9er les instructions qui permettent: de choisir un entier alea entre 1 et n . de proposer un entier choix . d'afficher la comparaison de ces deux entiers et de recommencer jusqu'\u00e0 la bonne r\u00e9ponse. Cr\u00e9er les m\u00eames instructions mais cette fois-ci, l'ordinateur joue tout seul (c'est lui qui propose un nouveau nombre \u00e0 chaque fois !) Cr\u00e9er une nouvelle instruction qui compte le nombre de questions pos\u00e9es avant de trouver la bonne r\u00e9ponse Cr\u00e9er un graphique qui prend en abscisse le nombre n (choix maxi de alea ) et le nombre minimum de questions pos\u00e9es pour retrouver l'entier alea (comme pr\u00e9c\u00e9demment...) \u00c0 faire: redescente dichotomique On consid\u00e8re la fonction \\(f\\) d\u00e9finie pour tout \\(x\\) dans \\(I = [0, 2]\\) par \\(f(x)=x^2-2\\) . Justifier qu'il existe une valeur \\(\\alpha\\) dans \\(I\\) telle que \\(f(\\alpha) = 0\\) Proposer une suite d'instructions qui permet de donner une valeur approch\u00e9e \u00e0 \\(10^{-8}\\) de \\(\\alpha\\) .", "title": "S\u00e9rie d'exercices"}, {"location": "maths/fonctions.html", "text": "Il y a divers paradigmes de programmation. Dans les premi\u00e8res manipulations, on fait du code imp\u00e9ratif qui consiste \u00e0 donner des ordres \u00e0 l'ordinateur qui les ex\u00e9cute alors... Par exemple, le code suivant: L = [ 8 , 5 , 6 , - 1 , 45 , 0 , 20 ] som = 0 for i in range ( len ( L )): som = som + L [ i ] donne les instructions qui permettent de calculer la somme des \u00e9l\u00e9ments d'une liste L quelconque. Mais finalement ce code ne change pas si on change la liste L : il aura toujours la vocation de calculer la somme des \u00e9l\u00e9ments de la liste propos\u00e9e en pr\u00e9ambule.... Des exemples: On visualise le c\u00f4t\u00e9 transformation des fonctions math\u00e9matiques On a donc : en entr\u00e9e une liste Python en sortie un nombre (entier ou d\u00e9cimal...) L'id\u00e9e qui nous int\u00e9resse est de reprendre le mod\u00e8le math\u00e9matique des fonctions qui transforment une donn\u00e9e en une autre. Un programme \\(f\\) qui ferait ceci: \\(f(Liste) = Somme\\) La syntaxe Python qui cr\u00e9e une fonction est donn\u00e9e par le code ci-contre: def somme_de_liste ( une_liste ): n = len ( une_liste ) som = 0 for i in range ( n ): som = som + une_liste [ i ] return som Cette fonction Python : est une fonction Python car est d\u00e9clar\u00e9e avec la particule def ; porte le nom implicite de somme_de_liste ( en snake case ); prend en param\u00e8tre la variable une_liste qui doit \u00eatre bien entendu une liste! retourne une valeur \u00e9gale \u00e0 la somme attendue. Comment on utilise cette fonction? C'est simple! On ex\u00e9cute le script qui contient cette fonction: elle est alors ajout\u00e9e aux outils disponibles. On peut l'utiliser dans le script ou dans la console... >>> l1 = [ 1 , 2 , 3 ] >>> somme_de_liste ( l1 ) >>> 6 #1 + 2 + 3 Dans la console, l'appel de la fonction sur la liste l1 retourne la valeur 6! Toute votre attention Il ne faut pas confondre le param\u00e8tre une_liste de la fonction qui est une variable locale \u00e0 la fonction et la variable globale l1 qui est une liste : lorsqu'on applique la fonction somme_de_liste \u00e0 la liste l1 , le param\u00e8tre une_liste pointe alors vers l'objet l1 et prend donc sa valeur! Le site Python Tutor permet de visualiser ce pointage. Visualisation sur Python Tutor La notion de variable locale ou globale n'est pas indispensable ici. Mais elle permet de comprendre certaines erreurs. Explorons le code (stupide...) suivant: a = 3 def f ( x ): #stupide car on le nom de la fonction est trop g\u00e9n\u00e9rique... a = x ** 2 return a f ( 5 ) print ( a ) D'apr\u00e8s vous que vaut la variable a apr\u00e8s l'ex\u00e9cution de ce code? \u00c0 savoir pour comprendre Il y a deux variables a : la premi\u00e8re est d\u00e9clar\u00e9e en dehors du corps de la fonction: elle est donc globale et vaut 3 la deuxi\u00e8me est d\u00e9clar\u00e9e dans la fonction: elle est locale et vaut le carr\u00e9 de la valeur prise par le param\u00e8tre x lors de l'appel de la fonction. L'affectation locale de a n'a pas d'effet sur la valeur globale a . Apr\u00e8s son ex\u00e9cution, ce code donne a=3 .... On dit que les variables n'ont pas la m\u00eame port\u00e9e... Dernier exemple rigolo avant de passer \u00e0 autre chose... Anticipez ce que va faire ce programme. Code R\u00e9ponse def multiplie_par_2 ( nombre ): i = 2 return nombre * 2 print ( i ) La variable i est locale \u00e0 la fonction et le programme principale n'a qu'une vision globale des variables et ne peut pas visualiser i dans le corps de la fonction : il ne peut donc pas savoir ce que vaut i et encore moins l'afficher. Python va donc lever une exception! Lorsqu'on programme avec des fonctions Python, on utilise un paradigme fonctionnel mais le d\u00e9veloppement de cette notion est r\u00e9serv\u00e9e aux experts... Une fonction, c'est quoi alors? Une fonction au sens informatique , est un ensemble d'instructions regroup\u00e9es en un seul nom qui prend en entr\u00e9e un ou plusieurs param\u00e8tres et qui retourne une valeur (ou autre chose...) L'avantage d'utiliser des fonctions est la factorisation des programmes! On encha\u00eene les fonctions sur une entr\u00e9e pour obtenir le r\u00e9sultat attendu. Un exemple! Extrait d'un cours de NSI Supposons coder un message \u00e0 la mani\u00e8re des soldats de Jules C\u00e9sar (ancien Empereur romain assez connu). Le principe est assez simple: un d\u00e9cale de trois rangs dans l'alphabet latin les lettres. A devient alors D , B devient C ,... puis X devient A , Y devient B et enfin Z pour C ! Les fonctions python suivante permettent ce codage: def carac_en_nombre ( carac ): \"\"\" donne le code num\u00e9rique du caract\u00e8re carac de la table ASCII a:97,b:98,... \"\"\" return ord ( carac ) def nombre_en_carac ( nbre ): \"\"\" donne le caract\u00e8re correspondant au nombre nbre de la table ASCII 97:a,98:b,... \"\"\" return chr ( nbre ) def decalage ( nbre , cle ): \"\"\" ajoute la valeur de cle au nombre nbr on travaille modulo 26 pour que les sommes restent dans l'intervalle [0; 25] les translations de 97 permettent de travailler dans l'intervalle [0,25] \"\"\" return ( nbre + cle - 97 ) % 26 + 97 def codage_cesar ( texte_origine ): texte_final = '' #chaine de caractere vide for elt in texte_origine : #on parcourt le message elt par elt texte_final = texte_final + nombre_en_carac ( decalage ( carac_en_nombre ( elt ), 3 )) return texte_final message = \"vous ne trouverez jamais la solution\" MESSAGE = codage_cesar ( message ) Quelques exercices \u00e0 faire sans mod\u00e9ration! \u00c0 faire Recopier les fonctions suivantes: a = 10 b = - 6 def somme ( x , y ): return x + y def prod ( x , y ): return x * y def puissance ( x , n ): return x ** n Avec ces fonctions, calculer: le produit de a par b la somme de a et 3 le produit de 15 par 148 \\(16^5\\) le produit de la somme de a et b avec a la puissance 4 de la somme du produit de b par 3 avec a. \u00c0 faire On consid\u00e8re la fonction mystere suivante: from random import randint def mystere ( nbre ): L = [] for i in range ( nbre ) L . append ( randint ( 0 , 6 )) return L Que fait cette fonction? Testez-l\u00e0. Modifiez cette fonction pour que les nombres obtenus soient compris entre 0 et 20. Modifiez cette fonction pour que les nombres al\u00e9atoires soient compris entre 0 et N , o\u00f9 N est pass\u00e9 en param\u00e8tre de la fonction. Cr\u00e9er une fonction moyenne_liste qui prend en param\u00e8tre une liste L et renvoie la moyenne des \u00e9l\u00e9ments de L . Que donnera alors l'instruction moyenne_liste(mystere(10)) ? et l'instruction mystere(moyenne_liste([1, 10])) ? \u00c0 faire \u00c9crire une fonction extreme qui prend en param\u00e8tre une liste et qui retourne la somme du premier et dernier \u00e9l\u00e9ment de la liste \u00c9crire une fonction deplace qui prend en param\u00e8tres une liste et un entier n plus petit que la longueur de la liste: cette fonction \u00e9change le premier \u00e9l\u00e9ment de la liste avec celui situ\u00e9 au rang n .", "title": "Les fonctions"}, {"location": "maths/graphique.html", "text": "Faire des graphiques avec Python \u00b6 Pourquoi faire des graphiques? C'est une habitude pour visualiser une quantit\u00e9 de donn\u00e9es: en physique, on r\u00e9alise une exp\u00e9rience et on obtient des donn\u00e9es dans un tableau que l'on exploite pour faire un graphique. en maths, pour d\u00e9terminer la courbe repr\u00e9sentative d'une fonction \\(f\\) . en informatique, pour observer par exemple la r\u00e9partition des niveaux de gris dans une image en noir et blanc. ... Dans tous les cas, on utilisera la biblioth\u00e8que matplotlib qui offre tout un tas de possibilit\u00e9s pour faire un graphique. Niveau d'intensit\u00e9 Exp\u00e9rience faite en premi\u00e8re NSI. On prend une photo en noir et blanc (plus pr\u00e9cis\u00e9ment en niveau de gris...), celle pr\u00e9sent\u00e9e ci-dessous( puppy.png ), et on compte les pixels d'intensit\u00e9 0(noir), d'intensit\u00e9 1,... et d'intensit\u00e9 255. On stocke les r\u00e9sultats dans une liste. Le code suivant g\u00e9n\u00e8re l'histogramme. # import des biblioth\u00e8ques n\u00e9cessaires import matplotlib.pyplot as plt # pour les graphiques import numpy as np # pour g\u00e9n\u00e9rer des listes (np.arange) #liste L obtenue en parcourant tous les pixels de l'image puppy.png # il y a 1 pixel d'intensit\u00e9 0(totalement noir), il y a 1 pixel d'intensit\u00e9 1 # il y a 4 pixel d'intensit\u00e9 2, il y a 12 pixel d'intensit\u00e9 3, ... et 366 pixels d'intensit\u00e9 255(totalement blanc) L = [ 1 , 1 , 4 , 12 , 13 , 25 , 44 , 48 , 65 , 60 , 82 , 111 , 121 , 137 , 155 , 148 , 162 , 220 , 228 , 264 , 275 , 290 , 213 , 283 , 351 , 343 , 363 , 394 , 381 , 333 , 323 , 394 , 453 , 422 , 424 , 397 , 404 , 390 , 368 , 451 , 369 , 453 , 469 , 457 , 454 , 434 , 428 , 449 , 447 , 449 , 433 , 489 , 449 , 495 , 467 , 455 , 501 , 462 , 499 , 453 , 480 , 494 , 547 , 550 , 662 , 749 , 930 , 1119 , 1453 , 1281 , 1079 , 952 , 978 , 869 , 943 , 770 , 740 , 674 , 668 , 667 , 682 , 734 , 741 , 753 , 772 , 783 , 781 , 858 , 838 , 843 , 890 , 840 , 860 , 915 , 898 , 937 , 879 , 892 , 862 , 921 , 883 , 931 , 895 , 944 , 993 , 996 , 1006 , 1013 , 1071 , 1077 , 1105 , 1056 , 995 , 961 , 948 , 958 , 953 , 930 , 920 , 950 , 1034 , 1023 , 1108 , 1036 , 944 , 940 , 875 , 836 , 746 , 729 , 787 , 668 , 733 , 737 , 718 , 721 , 681 , 644 , 676 , 642 , 656 , 589 , 540 , 596 , 583 , 596 , 562 , 532 , 536 , 560 , 536 , 505 , 484 , 465 , 500 , 469 , 529 , 602 , 621 , 675 , 755 , 789 , 801 , 1104 , 1307 , 1299 , 1054 , 987 , 1086 , 1188 , 1239 , 1320 , 1533 , 1670 , 1679 , 1925 , 1646 , 1444 , 1310 , 1032 , 868 , 686 , 615 , 517 , 501 , 550 , 549 , 533 , 518 , 532 , 446 , 397 , 391 , 310 , 269 , 253 , 244 , 233 , 198 , 205 , 222 , 209 , 210 , 308 , 382 , 336 , 295 , 264 , 225 , 215 , 193 , 177 , 207 , 198 , 205 , 222 , 206 , 261 , 193 , 224 , 213 , 238 , 219 , 219 , 229 , 251 , 210 , 181 , 176 , 207 , 202 , 260 , 258 , 284 , 403 , 431 , 401 , 435 , 451 , 443 , 406 , 425 , 265 , 221 , 224 , 216 , 174 , 107 , 114 , 130 , 129 , 128 , 156 , 202 , 383 , 366 ] fig , ax = plt . subplots () #une figure et des axes x = [ i for i in range ( 256 )] #g\u00e9n\u00e9ration par compr\u00e9hension de la liste x = [0,1,2,...,254,255] y = L #liste ci-dessus ax . bar ( x , y , width = 1 , color = 'magenta' , edgecolor = \"red\" , linewidth = 0.7 ) # fait un histogramme avec en abscisse les valeurs de x et en ordonn\u00e9e les valeurs de y #x et y doivent \u00eatre de m\u00eame dimension!!!! ax . set ( xlim = ( 0 , 255 ), xticks = np . arange ( 0 , 255 , 50 ), ylim = ( 0 , 2000 ), yticks = np . arange ( 0 , 2000 , 200 )) # options qui d\u00e9finissent les graduations des axes ax . set_ylabel ( 'Nombre de pixels' ) ax . set_title ( f \"Histogramme de l'image puppy.png\" ) ax . set_xlabel ( 'Intensit\u00e9 de gris' ) plt . show () img . close () On obtient le joli graphique: \u00c0 retenir Pour tracer un graphique quelconque, il faut en g\u00e9n\u00e9ral une liste pour les abscisses et une pour les ordonn\u00e9es. Attention, ces deux listes doivent avoir le m\u00eame nombre d'\u00e9l\u00e9ments! La courbe repr\u00e9sentative d'une fonction math\u00e9matique Rien de plus simple! Il faut: une fonction \\(f\\) d\u00e9finie sur un intervalle \\(I\\) une liste en abscisse une liste en ordonn\u00e9e Puis on utilisera la m\u00e9thode .plot \u00e0 la place de .bar pour obtenir une courbe au lieu d'un histogramme... Par exemple voici le code python pour construire la courbe repr\u00e9sentative des fonctions \\(\\cos\\) et \\(\\sin\\) sur l'intervalle \\(I=[0, 2\\pi]\\) . Fonctions trigonom\u00e9triques ####### import biblioth\u00e8ques ############### import numpy as np import math import matplotlib.pyplot as plt ####### une figure et des axes ############ fig , ax = plt . subplots () ###### valeurs extr\u00eames en X et Y ######### x_min = 0 x_max = 2 * np . pi y_min = - 1 #valeur minimale du cos et sin y_max = 1 #valeur maximale du cos et sin ##### fonction cos et sin ################# def lesinus ( x ): return np . sin ( x ) def lecosinus ( x ): return np . cos ( x ) ##### g\u00e9n\u00e9ration de la liste des abscisses X = np . arange ( start = x_min , stop = x_max , step = 0.25 ) #### limite horizontale du graphique ###### plt . xlim ( x_min , x_max ) #### limite verticale du graphique ######## plt . ylim ( y_min , y_max ) ###### pour les grilles ################### grid_x_ticks = np . arange ( x_min , x_max , 0.5 ) grid_y_ticks = np . arange ( y_min , y_max , 0.25 ) ###### pour les graduations ax . set_xticks ( grid_x_ticks , minor = False ) ax . set_yticks ( grid_y_ticks , minor = False ) #### pour l'affichage de la grille ######## ax . grid ( which = 'both' ) ### construction des deux courbes # X est la premi\u00e8re liste et lesinus(X) est la deuxi\u00e8me plt . plot ( X , lesinus ( X ), color = 'red' , label = 'cos' ) plt . plot ( X , lecosinus ( X ), color = 'green' , label = 'sin' ) ##### pour la l\u00e9gende ##################### plt . xlabel ( r \"$x$ \" ) #syntaxe latex plt . ylabel ( r \" $\\sin(x)$ et $\\cos(x)$\" ) #syntaxe latex plt . legend () plt . title ( r \"Fonctions trigonom\u00e9triques \" ) plt . show () On obtient le graphique suivant:", "title": "Les graphiques"}, {"location": "maths/graphique.html#faire-des-graphiques-avec-python", "text": "Pourquoi faire des graphiques? C'est une habitude pour visualiser une quantit\u00e9 de donn\u00e9es: en physique, on r\u00e9alise une exp\u00e9rience et on obtient des donn\u00e9es dans un tableau que l'on exploite pour faire un graphique. en maths, pour d\u00e9terminer la courbe repr\u00e9sentative d'une fonction \\(f\\) . en informatique, pour observer par exemple la r\u00e9partition des niveaux de gris dans une image en noir et blanc. ... Dans tous les cas, on utilisera la biblioth\u00e8que matplotlib qui offre tout un tas de possibilit\u00e9s pour faire un graphique. Niveau d'intensit\u00e9 Exp\u00e9rience faite en premi\u00e8re NSI. On prend une photo en noir et blanc (plus pr\u00e9cis\u00e9ment en niveau de gris...), celle pr\u00e9sent\u00e9e ci-dessous( puppy.png ), et on compte les pixels d'intensit\u00e9 0(noir), d'intensit\u00e9 1,... et d'intensit\u00e9 255. On stocke les r\u00e9sultats dans une liste. Le code suivant g\u00e9n\u00e8re l'histogramme. # import des biblioth\u00e8ques n\u00e9cessaires import matplotlib.pyplot as plt # pour les graphiques import numpy as np # pour g\u00e9n\u00e9rer des listes (np.arange) #liste L obtenue en parcourant tous les pixels de l'image puppy.png # il y a 1 pixel d'intensit\u00e9 0(totalement noir), il y a 1 pixel d'intensit\u00e9 1 # il y a 4 pixel d'intensit\u00e9 2, il y a 12 pixel d'intensit\u00e9 3, ... et 366 pixels d'intensit\u00e9 255(totalement blanc) L = [ 1 , 1 , 4 , 12 , 13 , 25 , 44 , 48 , 65 , 60 , 82 , 111 , 121 , 137 , 155 , 148 , 162 , 220 , 228 , 264 , 275 , 290 , 213 , 283 , 351 , 343 , 363 , 394 , 381 , 333 , 323 , 394 , 453 , 422 , 424 , 397 , 404 , 390 , 368 , 451 , 369 , 453 , 469 , 457 , 454 , 434 , 428 , 449 , 447 , 449 , 433 , 489 , 449 , 495 , 467 , 455 , 501 , 462 , 499 , 453 , 480 , 494 , 547 , 550 , 662 , 749 , 930 , 1119 , 1453 , 1281 , 1079 , 952 , 978 , 869 , 943 , 770 , 740 , 674 , 668 , 667 , 682 , 734 , 741 , 753 , 772 , 783 , 781 , 858 , 838 , 843 , 890 , 840 , 860 , 915 , 898 , 937 , 879 , 892 , 862 , 921 , 883 , 931 , 895 , 944 , 993 , 996 , 1006 , 1013 , 1071 , 1077 , 1105 , 1056 , 995 , 961 , 948 , 958 , 953 , 930 , 920 , 950 , 1034 , 1023 , 1108 , 1036 , 944 , 940 , 875 , 836 , 746 , 729 , 787 , 668 , 733 , 737 , 718 , 721 , 681 , 644 , 676 , 642 , 656 , 589 , 540 , 596 , 583 , 596 , 562 , 532 , 536 , 560 , 536 , 505 , 484 , 465 , 500 , 469 , 529 , 602 , 621 , 675 , 755 , 789 , 801 , 1104 , 1307 , 1299 , 1054 , 987 , 1086 , 1188 , 1239 , 1320 , 1533 , 1670 , 1679 , 1925 , 1646 , 1444 , 1310 , 1032 , 868 , 686 , 615 , 517 , 501 , 550 , 549 , 533 , 518 , 532 , 446 , 397 , 391 , 310 , 269 , 253 , 244 , 233 , 198 , 205 , 222 , 209 , 210 , 308 , 382 , 336 , 295 , 264 , 225 , 215 , 193 , 177 , 207 , 198 , 205 , 222 , 206 , 261 , 193 , 224 , 213 , 238 , 219 , 219 , 229 , 251 , 210 , 181 , 176 , 207 , 202 , 260 , 258 , 284 , 403 , 431 , 401 , 435 , 451 , 443 , 406 , 425 , 265 , 221 , 224 , 216 , 174 , 107 , 114 , 130 , 129 , 128 , 156 , 202 , 383 , 366 ] fig , ax = plt . subplots () #une figure et des axes x = [ i for i in range ( 256 )] #g\u00e9n\u00e9ration par compr\u00e9hension de la liste x = [0,1,2,...,254,255] y = L #liste ci-dessus ax . bar ( x , y , width = 1 , color = 'magenta' , edgecolor = \"red\" , linewidth = 0.7 ) # fait un histogramme avec en abscisse les valeurs de x et en ordonn\u00e9e les valeurs de y #x et y doivent \u00eatre de m\u00eame dimension!!!! ax . set ( xlim = ( 0 , 255 ), xticks = np . arange ( 0 , 255 , 50 ), ylim = ( 0 , 2000 ), yticks = np . arange ( 0 , 2000 , 200 )) # options qui d\u00e9finissent les graduations des axes ax . set_ylabel ( 'Nombre de pixels' ) ax . set_title ( f \"Histogramme de l'image puppy.png\" ) ax . set_xlabel ( 'Intensit\u00e9 de gris' ) plt . show () img . close () On obtient le joli graphique: \u00c0 retenir Pour tracer un graphique quelconque, il faut en g\u00e9n\u00e9ral une liste pour les abscisses et une pour les ordonn\u00e9es. Attention, ces deux listes doivent avoir le m\u00eame nombre d'\u00e9l\u00e9ments! La courbe repr\u00e9sentative d'une fonction math\u00e9matique Rien de plus simple! Il faut: une fonction \\(f\\) d\u00e9finie sur un intervalle \\(I\\) une liste en abscisse une liste en ordonn\u00e9e Puis on utilisera la m\u00e9thode .plot \u00e0 la place de .bar pour obtenir une courbe au lieu d'un histogramme... Par exemple voici le code python pour construire la courbe repr\u00e9sentative des fonctions \\(\\cos\\) et \\(\\sin\\) sur l'intervalle \\(I=[0, 2\\pi]\\) . Fonctions trigonom\u00e9triques ####### import biblioth\u00e8ques ############### import numpy as np import math import matplotlib.pyplot as plt ####### une figure et des axes ############ fig , ax = plt . subplots () ###### valeurs extr\u00eames en X et Y ######### x_min = 0 x_max = 2 * np . pi y_min = - 1 #valeur minimale du cos et sin y_max = 1 #valeur maximale du cos et sin ##### fonction cos et sin ################# def lesinus ( x ): return np . sin ( x ) def lecosinus ( x ): return np . cos ( x ) ##### g\u00e9n\u00e9ration de la liste des abscisses X = np . arange ( start = x_min , stop = x_max , step = 0.25 ) #### limite horizontale du graphique ###### plt . xlim ( x_min , x_max ) #### limite verticale du graphique ######## plt . ylim ( y_min , y_max ) ###### pour les grilles ################### grid_x_ticks = np . arange ( x_min , x_max , 0.5 ) grid_y_ticks = np . arange ( y_min , y_max , 0.25 ) ###### pour les graduations ax . set_xticks ( grid_x_ticks , minor = False ) ax . set_yticks ( grid_y_ticks , minor = False ) #### pour l'affichage de la grille ######## ax . grid ( which = 'both' ) ### construction des deux courbes # X est la premi\u00e8re liste et lesinus(X) est la deuxi\u00e8me plt . plot ( X , lesinus ( X ), color = 'red' , label = 'cos' ) plt . plot ( X , lecosinus ( X ), color = 'green' , label = 'sin' ) ##### pour la l\u00e9gende ##################### plt . xlabel ( r \"$x$ \" ) #syntaxe latex plt . ylabel ( r \" $\\sin(x)$ et $\\cos(x)$\" ) #syntaxe latex plt . legend () plt . title ( r \"Fonctions trigonom\u00e9triques \" ) plt . show () On obtient le graphique suivant:", "title": "Faire des graphiques avec Python"}, {"location": "maths/intro.html", "text": "De bonnes pratiques \u00b6 Il existe de nombreux langages informatiques dont le r\u00f4le est de proposer une interface de communication entre l'homme et la machine. Python est un langage de haut niveau (c'est-\u00e0-dire que sa syntaxe est proche du langage humain \ud83d\ude00) qui poss\u00e8de ses r\u00e9gles d'\u00e9criture d\u00e9crites dans la PEP-8 . En particulier, on respectera les r\u00e8gles suivantes: On entoure d'espaces le signe = lors de l'affectation de variables On entoure d'espaces tous les signes d'op\u00e9rations +,-,*,... \u00c0 faire ou ne pas faire BIEN PAS BIEN a = 1 b = 2 nom = \"Hector\" if x > 2 : x = x + 2 a = 1 b = 2 nom = \"Hector\" if x > 2 : x = x + 2 Le langage python poss\u00e8de sa syntaxe propre mais n'est finalement qu'une traduction des id\u00e9es qui font de l'\u00eatre humain, un individu qui r\u00e9fl\u00e9chit! Avant tout, il est donc n\u00e9cessaire de r\u00e9fl\u00e9chir \u00e0 la fa\u00e7on dont un programme va nous permettre de r\u00e9soudre un probl\u00e8me : sa structure algorithmique est prioritaire sur l'\u00e9criture \u00e0 proprement dit du code. Pour \u00e9crire du code python , le bloc-note( \u00e9diteur de texte \u00e9l\u00e9mentaire de Windows...) suffirait. Il faudrait alors sauvegarder son code dans un fichier dont l'extension serait .py et utiliser l'ex\u00e9cutable de python (s'il est install\u00e9 ) pour lancer le script ainsi cr\u00e9\u00e9! Comme l'op\u00e9ration n'est pas \u00e9vidente, on pr\u00e9f\u00e9rera utiliser un logiciel d\u00e9di\u00e9 qui permet de tout faire en cachant la complexit\u00e9 des op\u00e9rations d'ex\u00e9cution \u00e0 l'utilisateur... Principalement, et quelque soit le logiciel utilis\u00e9, il existe: la zone d'\u00e9dition ou de script qui permet d'\u00e9crire et de l'\u00e9xecuter par la suite. Avantage: on peut conserver son code dans un fichier dont l'extension sera .py . la console ou le terminal qui permet de donner directement des ordres Ci-dessous, l'environnement propos\u00e9 par le logiciel Thonny : Tous les environnements pr\u00e9sentent les m\u00eames zones", "title": "Pour d\u00e9buter"}, {"location": "maths/intro.html#de-bonnes-pratiques", "text": "Il existe de nombreux langages informatiques dont le r\u00f4le est de proposer une interface de communication entre l'homme et la machine. Python est un langage de haut niveau (c'est-\u00e0-dire que sa syntaxe est proche du langage humain \ud83d\ude00) qui poss\u00e8de ses r\u00e9gles d'\u00e9criture d\u00e9crites dans la PEP-8 . En particulier, on respectera les r\u00e8gles suivantes: On entoure d'espaces le signe = lors de l'affectation de variables On entoure d'espaces tous les signes d'op\u00e9rations +,-,*,... \u00c0 faire ou ne pas faire BIEN PAS BIEN a = 1 b = 2 nom = \"Hector\" if x > 2 : x = x + 2 a = 1 b = 2 nom = \"Hector\" if x > 2 : x = x + 2 Le langage python poss\u00e8de sa syntaxe propre mais n'est finalement qu'une traduction des id\u00e9es qui font de l'\u00eatre humain, un individu qui r\u00e9fl\u00e9chit! Avant tout, il est donc n\u00e9cessaire de r\u00e9fl\u00e9chir \u00e0 la fa\u00e7on dont un programme va nous permettre de r\u00e9soudre un probl\u00e8me : sa structure algorithmique est prioritaire sur l'\u00e9criture \u00e0 proprement dit du code. Pour \u00e9crire du code python , le bloc-note( \u00e9diteur de texte \u00e9l\u00e9mentaire de Windows...) suffirait. Il faudrait alors sauvegarder son code dans un fichier dont l'extension serait .py et utiliser l'ex\u00e9cutable de python (s'il est install\u00e9 ) pour lancer le script ainsi cr\u00e9\u00e9! Comme l'op\u00e9ration n'est pas \u00e9vidente, on pr\u00e9f\u00e9rera utiliser un logiciel d\u00e9di\u00e9 qui permet de tout faire en cachant la complexit\u00e9 des op\u00e9rations d'ex\u00e9cution \u00e0 l'utilisateur... Principalement, et quelque soit le logiciel utilis\u00e9, il existe: la zone d'\u00e9dition ou de script qui permet d'\u00e9crire et de l'\u00e9xecuter par la suite. Avantage: on peut conserver son code dans un fichier dont l'extension sera .py . la console ou le terminal qui permet de donner directement des ordres Ci-dessous, l'environnement propos\u00e9 par le logiciel Thonny : Tous les environnements pr\u00e9sentent les m\u00eames zones", "title": "De bonnes pratiques"}, {"location": "maths/intro_python.html", "text": "Je fais du python et j'aime \u00e7a! \u00b6 Pour faire du python... il faut faire du python! Pour progresser il faut manipuler! Dans ce chapitre, vous trouverez des codes python que je vous demande de : manipuler et analyser modifier pour r\u00e9pondre \u00e0 nos besoins Python est un langage de haut niveau, proche du langage humain. Sans \u00eatre un expert, on peut facilement comprendre et analyser un programme python . La cr\u00e9ation de code vient en dernier lieu, lorsque on s'est bien impr\u00e9gn\u00e9 des routines pythonesque (grosso modo boucles et affectation...). La notion de fonction n'est pas aussi simple qu'on pourrait le croire et n\u00e9cessite une \u00e9tude particuli\u00e8re \u00e0 voir ici Un premier test \u00b6 \u00c0 faire 1 Ouvrez un IDLE comme Edupython ou Thonny et saisissez le code suivant dans la zone script: test = 10 # affectation de la variable \u00e0 10 for i in range ( 5 ): #une boucle permet de r\u00e9p\u00e9ter une m\u00eame (ou plusieurs) instruction: ici 5 fois test = test + 2 #incrementation de la variable test. print ( test ) #affichage dans la console Le r\u00e9sultat devrait s'afficher dans la console . Quelle diff\u00e9rence avec le programme suivant? test = 10 # affectation de la variable \u00e0 10 for i in range ( 5 ): #une boucle permet de r\u00e9p\u00e9ter une m\u00eame (ou plusieurs) instruction: ici 5 fois test = test + 2 #incrementation de la variable test. print ( test ) #affichage dans la console \u00c0 retenir! Le code s'\u00e9crit dans la zone script ou en console. Vous remarquerez dans les exemples pr\u00e9c\u00e9dents, la pr\u00e9sence d' espace avant et apr\u00e8s les signes d'op\u00e9rations: il faudra respecter cette r\u00e8gle dor\u00e9navant. L' indentation permet de d\u00e9finir les blocs d'instructions dans les boucles ou les conditions. G\u00e9n\u00e9rer du hasard \u00b6 Dans de nombreux cas, nous aurons besoin de simuler le hasard: plus pr\u00e9cis\u00e9ment, certaines variables devront \u00eatre affect\u00e9es avec une valeur al\u00e9atoire. On distingue en g\u00e9n\u00e9ral, les valeurs enti\u00e8res des valeurs d\u00e9cimales . Pour cela, il faut importer la biblioth\u00e8que qui g\u00e9n\u00e9re les nombres al\u00e9atoires: from random import randint Cette instruction n'importe que la m\u00e9thode randint : la biblioth\u00e8que random en contient d'autres que nous n'utiliserons pas ici! On consid\u00e8re le programme suivant: n = randint ( 0 , 100 ) mon_choix = int ( input ( \"proposez un nombre\" )) if n == mon_choix : print ( \"C'est gagn\u00e9\" ) else : if n > mon_choix print ( \"C'est plus\" ) else : print ( \"C'est moins\" ) \u00c0 faire 2 : Utiliser le hasard Que fait l'instruction randint(0, 100) ? Quelle est la diff\u00e9rence entre les instructions n = mon_choix et n == mon_choix ? \u00c0 quoi sert le int devant le input ? Commenter chaque instruction de ce code comme dans l'exemple test. Manipulations \u00b6 On donne le code suivant: #affecter des entiers a = 15 #affecter des flottants b = 10.8 #affecter des cha\u00eenes de caract\u00e8res c = \"c'est cool\" d = \"c'est g\u00e9nial\" e = \"c'est nul\" f = \"maths\" #affecter des listes g = [ \"HG\" , \"EPS\" , \"LV1\" , \"Philo\" ] #je suis une liste de cha\u00eenes de caract\u00e8res , des string! #affecter des autres trucs, inutiles dans notre contexte \u00c0 faire 3 Quels sont les types de variables utilis\u00e9es ou d\u00e9clar\u00e9es dans le code pr\u00e9c\u00e9dent? En g\u00e9n\u00e9ral, on donne des noms explicites aux variables: ces noms d\u00e9pendent bien entendu du contexte dans lequel elles sont utilis\u00e9es. Par exemple, on appelle jamais f une variable de type list mais plut\u00f4t l . Aussi, pourrait-on proc\u00e9der ainsi: note = 15 moyenne = 10.8 discipline_majeure = \"maths\" autres_disciplines = [ \"HG\" , \"EPS\" , \"LV1\" , \"Philo\" , \"Musique\" , \"Physique\" ] commentaires = [ \"c'est cool\" , \"c'est g\u00e9nial\" , \"c'est nul\" , \"c'est marrant\" ] note = note + 2 print ( note ) print ( discipline_majeure [ 2 ]) print ( autres_disciplines [ 3 ]) print ( autres_disciplines [ 6 ]) \u00c0 faire 4 Copiez et ex\u00e9cutez le code suivant. Un probl\u00e8me appara\u00eet: pourquoi? R\u00e9glez le probl\u00e8me. On peut am\u00e9liorer l'affichage dans la console par des affichages dynamiques. Nous utilisons par exemple des f-strings : \u00c0 faire 5 Ajouter un code pr\u00e9c\u00e9dent, les instructions suivantes: print ( f \"J'ai eu { note } en { discipline_majeure } \" ) listes_notes = [ randint ( 0 , 20 ) for i in range ( 10 )] print ( f \" J'ai eu { listes_notes [ randint ( 0 , 9 )] } en { autres_disciplines [ randint ( 0 , 3 )] } et { commentaires [ randint ( 0 , 3 )] } \" ) Ex\u00e9cutez plusieurs fois le code pour comprendre comment il fonctionne. Construire une f-string , qui donnerait par exemple: J'aime la Philo parce que c'est marrant R\u00e9p\u00e9ter des instructions: \u00b6 Il y a en g\u00e9n\u00e9ral deux fa\u00e7ons de r\u00e9p\u00e9ter des instructions. La boucle born\u00e9e for . \u00b6 Avec la boucle for , on peut choisir le nombre de fois o\u00f9 on r\u00e9p\u00e8te l'instruction. \u00c0 faire 6 Ajoutez au code pr\u00e9c\u00e9dent les instructions suivantes et ex\u00e9cutez ce programme: autant_de_fois_que_tu_veux = 10 for i in range ( autant_de_fois_que_tu_veux ): print ( f \" J'ai eu { listes_notes [ randint ( 0 , 9 )] } en { autres_disciplines [ randint ( 0 , 3 )] } \" ) La variable i est appel\u00e9e variable de boucle . L'instruction for i in range(10) affecte \u00e0 i les valeurs 0 puis 1 puis 2,... jusqu'\u00e0 9: il y a bien alors 10 affectations, donc 10 r\u00e9p\u00e9titions. En fait \u00e0 chaque que fois que la variable i prend une valeur, l'instruction de la boucle est ex\u00e9cut\u00e9e... \u00c0 faire 7 Pour visualiser comme \u00e9volue la variable i , compl\u00e9ter le code pr\u00e9c\u00e9dent comme indiqu\u00e9 ci-apr\u00e8s: autant_de_fois_que_tu_veux = 10 for i in range ( autant_de_fois_que_tu_veux ): print ( f \"Note { i + 1 } : J'ai eu { listes_notes [ randint ( 0 , 9 )] } en { autres_disciplines [ randint ( 0 , 3 )] } \" ) La boucle non born\u00e9e while . \u00b6 Souvent, on ne sait pas a priori combien de boucles sont n\u00e9cessaires pour obtenir un r\u00e9sultat. On utilise alors une boucle while qui permet de r\u00e9p\u00e9ter des instructions tant que une condition est v\u00e9rifi\u00e9e. Un exemple s = 0 cpt = 0 #pour compter le nombre d'actions while s < 100 : # la condition s < 100 est vrai au d\u00e9part: on rentre alors dans la boucle. s = s + 6 # s est incr\u00e9ment\u00e9 de 6 cpt = cpt + 1 #incr\u00e9mentation de la variable cpt Boucle infinie! Une erreur classique consiste \u00e0 cr\u00e9er des boucles infinies. Si la condition du while ne devient pas fausse dans l'ex\u00e9cution du programme, la boucle tourne \u00e0 l'infini! Les listes ou les tableaux... \u00b6 Les variables de type int servent \u00e0 conserver en m\u00e9moire des entiers alors que les flottants sont utilis\u00e9s pour les nombres d\u00e9cimaux. Mais parfois, il faut garder en m\u00e9moire toute une s\u00e9rie de valeur. On utilise pour cela des listes . G\u00e9n\u00e9rer des listes \u00b6 Pour construire des listes, on peut proc\u00e9der de plusieurs fa\u00e7ons, d\u00e9crites dans l'exercice suivant. \u00c0 faire 8 Copiez le code suivant et ex\u00e9cutez-le: ma_liste_1 = [] # creation d'une liste vide for i in range ( 10 ): ma_liste_1 . append ( i ** 2 ) # \u00e0 chaque tour de boucle on ajoute \u00e0 la fin de la liste le carr\u00e9 de i Faites affichez la liste obtenue dans la console. Copiez et ex\u00e9cutez le code suivant: from random import randint ma_liste_2 = [ randint ( 0 , 100 ) for i range ( 500 )] # construction par compr\u00e9hension de 500 entiers al\u00e9atoires entre 0 et 100 Bien entendu, on peut construire une liste \u00e0 la main mais c'est plus long et... peu coh\u00e9rent avec les pratiques scientifiques et informatiques! ma_liste_3 = [ 5 , 89 , 21 , - 1 , 0 ] Faites affichez la liste dans la console. Acc\u00e9der aux \u00e9l\u00e9ments d'une liste \u00b6 Une liste \u00e9tant d\u00e9finie, on acc\u00e8de \u00e0 ces \u00e9l\u00e9ments gr\u00e2ce \u00e0 son indice : le premier est d'indice 0 et le dernier d'indice len(ma_liste_1) - 1 o\u00f9 l'instruction len(ma_liste_1) retourne le nombre d'\u00e9l\u00e9ments de la liste. Le d\u00e9calage entre le nombre d'\u00e9l\u00e9ments d'une liste et l'indice d'un \u00e9l\u00e9ment est courant en math\u00e9matique et d\u00fb au fait que les indices commen\u00e7ent \u00e0 0! Routines habituelles ma_liste_3 = [ 5 , 89 , 21 , - 1 , 0 ] print ( ma_liste_3 [ 0 ]) # affiche le premier \u00e9l\u00e9ment de la liste (5 ici) print ( ma_liste_3 [ 3 ]) # affiche l'\u00e9l\u00e9ment situ\u00e9 au rang 3 soit -1 print ( ma_liste_3 [ 5 ]) # erreur! il n'y a pas d'\u00e9l\u00e9ment au rang 5. Ces routines permettent l'acc\u00e8s \u00e0 un \u00e9l\u00e9ment de la liste. Mais on peut aussi utiliser une boucle pour afficher les \u00e9l\u00e9ments un par un... for i in range ( len ( ma_liste_3 )): print ( ma_liste_3 [ i ]) Une liste est un objet mutable : on peut modifier son contenu. Modification d'un \u00e9l\u00e9ment ma_liste_2 [ 10 ] = 56 #re-affectation de l'\u00e9l\u00e9ment d'indice 10 de la liste ma_liste_2 Mieux encore! On peut modifier tous les \u00e9l\u00e9ments d'une liste en combinant les routines pr\u00e9c\u00e9dentes. Modifier tous les \u00e9l\u00e9ments d'une liste ma_liste = [ randint ( 0 , 10 ) for i in range ( 50 )] # liste de 50 entiers choisis au hasard for i in range ( len ( ma_liste )): ma_liste [ i ] = 2 * ma_liste [ i ] - 1 # re-affectation de tous les \u00e9l\u00e9ments de la liste Conclusion \u00b6 \u00c0 retenir Un langage informatique manipule des variables qui ont des types diff\u00e9rents et des valeurs correspondantes : int , float , str , list sont les types que nous avons d\u00e9couverts dans ce travail. Sachez qu'il en existe bien d'autres. \u00c0 chaque type correspond une fa\u00e7on (parfois plusieurs...) de les cr\u00e9er, les modifier ou les afficher. Il faut conna\u00eetre ses routines dont les principales ont \u00e9t\u00e9 pr\u00e9sent\u00e9es ci-dessus!", "title": "Prise en main"}, {"location": "maths/intro_python.html#je-fais-du-python-et-jaime-ca", "text": "Pour faire du python... il faut faire du python! Pour progresser il faut manipuler! Dans ce chapitre, vous trouverez des codes python que je vous demande de : manipuler et analyser modifier pour r\u00e9pondre \u00e0 nos besoins Python est un langage de haut niveau, proche du langage humain. Sans \u00eatre un expert, on peut facilement comprendre et analyser un programme python . La cr\u00e9ation de code vient en dernier lieu, lorsque on s'est bien impr\u00e9gn\u00e9 des routines pythonesque (grosso modo boucles et affectation...). La notion de fonction n'est pas aussi simple qu'on pourrait le croire et n\u00e9cessite une \u00e9tude particuli\u00e8re \u00e0 voir ici", "title": "Je fais du python et j'aime \u00e7a!"}, {"location": "maths/intro_python.html#un-premier-test", "text": "\u00c0 faire 1 Ouvrez un IDLE comme Edupython ou Thonny et saisissez le code suivant dans la zone script: test = 10 # affectation de la variable \u00e0 10 for i in range ( 5 ): #une boucle permet de r\u00e9p\u00e9ter une m\u00eame (ou plusieurs) instruction: ici 5 fois test = test + 2 #incrementation de la variable test. print ( test ) #affichage dans la console Le r\u00e9sultat devrait s'afficher dans la console . Quelle diff\u00e9rence avec le programme suivant? test = 10 # affectation de la variable \u00e0 10 for i in range ( 5 ): #une boucle permet de r\u00e9p\u00e9ter une m\u00eame (ou plusieurs) instruction: ici 5 fois test = test + 2 #incrementation de la variable test. print ( test ) #affichage dans la console \u00c0 retenir! Le code s'\u00e9crit dans la zone script ou en console. Vous remarquerez dans les exemples pr\u00e9c\u00e9dents, la pr\u00e9sence d' espace avant et apr\u00e8s les signes d'op\u00e9rations: il faudra respecter cette r\u00e8gle dor\u00e9navant. L' indentation permet de d\u00e9finir les blocs d'instructions dans les boucles ou les conditions.", "title": "Un premier test"}, {"location": "maths/intro_python.html#generer-du-hasard", "text": "Dans de nombreux cas, nous aurons besoin de simuler le hasard: plus pr\u00e9cis\u00e9ment, certaines variables devront \u00eatre affect\u00e9es avec une valeur al\u00e9atoire. On distingue en g\u00e9n\u00e9ral, les valeurs enti\u00e8res des valeurs d\u00e9cimales . Pour cela, il faut importer la biblioth\u00e8que qui g\u00e9n\u00e9re les nombres al\u00e9atoires: from random import randint Cette instruction n'importe que la m\u00e9thode randint : la biblioth\u00e8que random en contient d'autres que nous n'utiliserons pas ici! On consid\u00e8re le programme suivant: n = randint ( 0 , 100 ) mon_choix = int ( input ( \"proposez un nombre\" )) if n == mon_choix : print ( \"C'est gagn\u00e9\" ) else : if n > mon_choix print ( \"C'est plus\" ) else : print ( \"C'est moins\" ) \u00c0 faire 2 : Utiliser le hasard Que fait l'instruction randint(0, 100) ? Quelle est la diff\u00e9rence entre les instructions n = mon_choix et n == mon_choix ? \u00c0 quoi sert le int devant le input ? Commenter chaque instruction de ce code comme dans l'exemple test.", "title": "G\u00e9n\u00e9rer du hasard"}, {"location": "maths/intro_python.html#manipulations", "text": "On donne le code suivant: #affecter des entiers a = 15 #affecter des flottants b = 10.8 #affecter des cha\u00eenes de caract\u00e8res c = \"c'est cool\" d = \"c'est g\u00e9nial\" e = \"c'est nul\" f = \"maths\" #affecter des listes g = [ \"HG\" , \"EPS\" , \"LV1\" , \"Philo\" ] #je suis une liste de cha\u00eenes de caract\u00e8res , des string! #affecter des autres trucs, inutiles dans notre contexte \u00c0 faire 3 Quels sont les types de variables utilis\u00e9es ou d\u00e9clar\u00e9es dans le code pr\u00e9c\u00e9dent? En g\u00e9n\u00e9ral, on donne des noms explicites aux variables: ces noms d\u00e9pendent bien entendu du contexte dans lequel elles sont utilis\u00e9es. Par exemple, on appelle jamais f une variable de type list mais plut\u00f4t l . Aussi, pourrait-on proc\u00e9der ainsi: note = 15 moyenne = 10.8 discipline_majeure = \"maths\" autres_disciplines = [ \"HG\" , \"EPS\" , \"LV1\" , \"Philo\" , \"Musique\" , \"Physique\" ] commentaires = [ \"c'est cool\" , \"c'est g\u00e9nial\" , \"c'est nul\" , \"c'est marrant\" ] note = note + 2 print ( note ) print ( discipline_majeure [ 2 ]) print ( autres_disciplines [ 3 ]) print ( autres_disciplines [ 6 ]) \u00c0 faire 4 Copiez et ex\u00e9cutez le code suivant. Un probl\u00e8me appara\u00eet: pourquoi? R\u00e9glez le probl\u00e8me. On peut am\u00e9liorer l'affichage dans la console par des affichages dynamiques. Nous utilisons par exemple des f-strings : \u00c0 faire 5 Ajouter un code pr\u00e9c\u00e9dent, les instructions suivantes: print ( f \"J'ai eu { note } en { discipline_majeure } \" ) listes_notes = [ randint ( 0 , 20 ) for i in range ( 10 )] print ( f \" J'ai eu { listes_notes [ randint ( 0 , 9 )] } en { autres_disciplines [ randint ( 0 , 3 )] } et { commentaires [ randint ( 0 , 3 )] } \" ) Ex\u00e9cutez plusieurs fois le code pour comprendre comment il fonctionne. Construire une f-string , qui donnerait par exemple: J'aime la Philo parce que c'est marrant", "title": "Manipulations"}, {"location": "maths/intro_python.html#repeter-des-instructions", "text": "Il y a en g\u00e9n\u00e9ral deux fa\u00e7ons de r\u00e9p\u00e9ter des instructions.", "title": "R\u00e9p\u00e9ter des instructions:"}, {"location": "maths/intro_python.html#la-boucle-bornee-for", "text": "Avec la boucle for , on peut choisir le nombre de fois o\u00f9 on r\u00e9p\u00e8te l'instruction. \u00c0 faire 6 Ajoutez au code pr\u00e9c\u00e9dent les instructions suivantes et ex\u00e9cutez ce programme: autant_de_fois_que_tu_veux = 10 for i in range ( autant_de_fois_que_tu_veux ): print ( f \" J'ai eu { listes_notes [ randint ( 0 , 9 )] } en { autres_disciplines [ randint ( 0 , 3 )] } \" ) La variable i est appel\u00e9e variable de boucle . L'instruction for i in range(10) affecte \u00e0 i les valeurs 0 puis 1 puis 2,... jusqu'\u00e0 9: il y a bien alors 10 affectations, donc 10 r\u00e9p\u00e9titions. En fait \u00e0 chaque que fois que la variable i prend une valeur, l'instruction de la boucle est ex\u00e9cut\u00e9e... \u00c0 faire 7 Pour visualiser comme \u00e9volue la variable i , compl\u00e9ter le code pr\u00e9c\u00e9dent comme indiqu\u00e9 ci-apr\u00e8s: autant_de_fois_que_tu_veux = 10 for i in range ( autant_de_fois_que_tu_veux ): print ( f \"Note { i + 1 } : J'ai eu { listes_notes [ randint ( 0 , 9 )] } en { autres_disciplines [ randint ( 0 , 3 )] } \" )", "title": "La boucle born\u00e9e for."}, {"location": "maths/intro_python.html#la-boucle-non-bornee-while", "text": "Souvent, on ne sait pas a priori combien de boucles sont n\u00e9cessaires pour obtenir un r\u00e9sultat. On utilise alors une boucle while qui permet de r\u00e9p\u00e9ter des instructions tant que une condition est v\u00e9rifi\u00e9e. Un exemple s = 0 cpt = 0 #pour compter le nombre d'actions while s < 100 : # la condition s < 100 est vrai au d\u00e9part: on rentre alors dans la boucle. s = s + 6 # s est incr\u00e9ment\u00e9 de 6 cpt = cpt + 1 #incr\u00e9mentation de la variable cpt Boucle infinie! Une erreur classique consiste \u00e0 cr\u00e9er des boucles infinies. Si la condition du while ne devient pas fausse dans l'ex\u00e9cution du programme, la boucle tourne \u00e0 l'infini!", "title": "La boucle non born\u00e9e while."}, {"location": "maths/intro_python.html#les-listes-ou-les-tableaux", "text": "Les variables de type int servent \u00e0 conserver en m\u00e9moire des entiers alors que les flottants sont utilis\u00e9s pour les nombres d\u00e9cimaux. Mais parfois, il faut garder en m\u00e9moire toute une s\u00e9rie de valeur. On utilise pour cela des listes .", "title": "Les listes ou les tableaux..."}, {"location": "maths/intro_python.html#generer-des-listes", "text": "Pour construire des listes, on peut proc\u00e9der de plusieurs fa\u00e7ons, d\u00e9crites dans l'exercice suivant. \u00c0 faire 8 Copiez le code suivant et ex\u00e9cutez-le: ma_liste_1 = [] # creation d'une liste vide for i in range ( 10 ): ma_liste_1 . append ( i ** 2 ) # \u00e0 chaque tour de boucle on ajoute \u00e0 la fin de la liste le carr\u00e9 de i Faites affichez la liste obtenue dans la console. Copiez et ex\u00e9cutez le code suivant: from random import randint ma_liste_2 = [ randint ( 0 , 100 ) for i range ( 500 )] # construction par compr\u00e9hension de 500 entiers al\u00e9atoires entre 0 et 100 Bien entendu, on peut construire une liste \u00e0 la main mais c'est plus long et... peu coh\u00e9rent avec les pratiques scientifiques et informatiques! ma_liste_3 = [ 5 , 89 , 21 , - 1 , 0 ] Faites affichez la liste dans la console.", "title": "G\u00e9n\u00e9rer des listes"}, {"location": "maths/intro_python.html#acceder-aux-elements-dune-liste", "text": "Une liste \u00e9tant d\u00e9finie, on acc\u00e8de \u00e0 ces \u00e9l\u00e9ments gr\u00e2ce \u00e0 son indice : le premier est d'indice 0 et le dernier d'indice len(ma_liste_1) - 1 o\u00f9 l'instruction len(ma_liste_1) retourne le nombre d'\u00e9l\u00e9ments de la liste. Le d\u00e9calage entre le nombre d'\u00e9l\u00e9ments d'une liste et l'indice d'un \u00e9l\u00e9ment est courant en math\u00e9matique et d\u00fb au fait que les indices commen\u00e7ent \u00e0 0! Routines habituelles ma_liste_3 = [ 5 , 89 , 21 , - 1 , 0 ] print ( ma_liste_3 [ 0 ]) # affiche le premier \u00e9l\u00e9ment de la liste (5 ici) print ( ma_liste_3 [ 3 ]) # affiche l'\u00e9l\u00e9ment situ\u00e9 au rang 3 soit -1 print ( ma_liste_3 [ 5 ]) # erreur! il n'y a pas d'\u00e9l\u00e9ment au rang 5. Ces routines permettent l'acc\u00e8s \u00e0 un \u00e9l\u00e9ment de la liste. Mais on peut aussi utiliser une boucle pour afficher les \u00e9l\u00e9ments un par un... for i in range ( len ( ma_liste_3 )): print ( ma_liste_3 [ i ]) Une liste est un objet mutable : on peut modifier son contenu. Modification d'un \u00e9l\u00e9ment ma_liste_2 [ 10 ] = 56 #re-affectation de l'\u00e9l\u00e9ment d'indice 10 de la liste ma_liste_2 Mieux encore! On peut modifier tous les \u00e9l\u00e9ments d'une liste en combinant les routines pr\u00e9c\u00e9dentes. Modifier tous les \u00e9l\u00e9ments d'une liste ma_liste = [ randint ( 0 , 10 ) for i in range ( 50 )] # liste de 50 entiers choisis au hasard for i in range ( len ( ma_liste )): ma_liste [ i ] = 2 * ma_liste [ i ] - 1 # re-affectation de tous les \u00e9l\u00e9ments de la liste", "title": "Acc\u00e9der aux \u00e9l\u00e9ments d'une liste"}, {"location": "maths/intro_python.html#conclusion", "text": "\u00c0 retenir Un langage informatique manipule des variables qui ont des types diff\u00e9rents et des valeurs correspondantes : int , float , str , list sont les types que nous avons d\u00e9couverts dans ce travail. Sachez qu'il en existe bien d'autres. \u00c0 chaque type correspond une fa\u00e7on (parfois plusieurs...) de les cr\u00e9er, les modifier ou les afficher. Il faut conna\u00eetre ses routines dont les principales ont \u00e9t\u00e9 pr\u00e9sent\u00e9es ci-dessus!", "title": "Conclusion"}, {"location": "maths/jefaisdupython.html", "text": "Je fais du python et j'aime \u00e7a! \u00b6 Pour faire du python... il faut faire du python! Inutile de potasser tous les bons cours trouv\u00e9s sur le web , pour progresser il faut manipuler! Dans ce chapitre, vous trouverez des codes python que je vous demande de : manipuler et analyser modifier pour r\u00e9pondre \u00e0 nos besoins La cr\u00e9ation de code vient en dernier lieu, lorsque on s'est bien impr\u00e9gn\u00e9 des routines pythonesque (grosso modo boucles et affectation...). La notion de fonction n'est pas aussi simple qu'on pourrait le croire et n\u00e9cessite une \u00e9tude particuli\u00e8re \u00e0 voir ici G\u00e9n\u00e9rer du hasard \u00b6 Dans de nombreux cas, nous aurons besoin de simuler le hasard:plus pr\u00e9cis\u00e9ment, certaines variables devront \u00eatre affect\u00e9es avec une valeur al\u00e9atoire. On distingue en g\u00e9n\u00e9ral, les valeurs enti\u00e8res des valeurs d\u00e9cimales . Pour cela, il faut importer la biblioth\u00e8que qui g\u00e9n\u00e9re les nombres al\u00e9atoires: from random import randint Cette instruction n'importe que la m\u00e9thode randint : la biblioth\u00e8que random en contient d'autres que nous n'utiliserons pas ici! On consid\u00e8re le programme suivant: n = randint ( 0 , 100 ) mon_choix = int ( input ( \"proposez un nombre\" )) if n == mon_choix : print ( \"C'est gagn\u00e9\" ) else : if n > mon_choix print ( \"C'est plus\" ) else : print ( \"C'est moins\" ) \u00c0 faire : Utiliser le hasard Quelle est la diff\u00e9rence entre les instructions n = mon_choix et n == mon_choix ? \u00c0 quoi sert le int devant le imput ? 3.", "title": "Je fais du python et j'aime \u00e7a!"}, {"location": "maths/jefaisdupython.html#je-fais-du-python-et-jaime-ca", "text": "Pour faire du python... il faut faire du python! Inutile de potasser tous les bons cours trouv\u00e9s sur le web , pour progresser il faut manipuler! Dans ce chapitre, vous trouverez des codes python que je vous demande de : manipuler et analyser modifier pour r\u00e9pondre \u00e0 nos besoins La cr\u00e9ation de code vient en dernier lieu, lorsque on s'est bien impr\u00e9gn\u00e9 des routines pythonesque (grosso modo boucles et affectation...). La notion de fonction n'est pas aussi simple qu'on pourrait le croire et n\u00e9cessite une \u00e9tude particuli\u00e8re \u00e0 voir ici", "title": "Je fais du python et j'aime \u00e7a!"}, {"location": "maths/jefaisdupython.html#generer-du-hasard", "text": "Dans de nombreux cas, nous aurons besoin de simuler le hasard:plus pr\u00e9cis\u00e9ment, certaines variables devront \u00eatre affect\u00e9es avec une valeur al\u00e9atoire. On distingue en g\u00e9n\u00e9ral, les valeurs enti\u00e8res des valeurs d\u00e9cimales . Pour cela, il faut importer la biblioth\u00e8que qui g\u00e9n\u00e9re les nombres al\u00e9atoires: from random import randint Cette instruction n'importe que la m\u00e9thode randint : la biblioth\u00e8que random en contient d'autres que nous n'utiliserons pas ici! On consid\u00e8re le programme suivant: n = randint ( 0 , 100 ) mon_choix = int ( input ( \"proposez un nombre\" )) if n == mon_choix : print ( \"C'est gagn\u00e9\" ) else : if n > mon_choix print ( \"C'est plus\" ) else : print ( \"C'est moins\" ) \u00c0 faire : Utiliser le hasard Quelle est la diff\u00e9rence entre les instructions n = mon_choix et n == mon_choix ? \u00c0 quoi sert le int devant le imput ? 3.", "title": "G\u00e9n\u00e9rer du hasard"}, {"location": "maths/listes.html", "text": "Bient\u00f4t...", "title": "Les listes"}, {"location": "maths/problemes.html", "text": "Des varaibles pour comprendre \u00b6 Lyc\u00e9e Jean Baptiste de baudre 47000 AGEN \u00b6", "title": "Des varaibles pour comprendre"}, {"location": "maths/problemes.html#des-varaibles-pour-comprendre", "text": "", "title": "Des varaibles pour comprendre"}, {"location": "maths/problemes.html#lycee-jean-baptiste-de-baudre-47000-agen", "text": "", "title": "Lyc\u00e9e Jean Baptiste de baudre 47000 AGEN"}, {"location": "maths/variables.html", "text": "Des variables pour comprendre \u00b6 De quoi s'agit-il? Un ordinateur est une grande commode compos\u00e9e de millions de tiroirs dans lesquels on peut stocker des chaussettes... ou plut\u00f4t des donn\u00e9es! Je fais r\u00e9f\u00e9rence aux espaces de stockages des ordinateurs de la plus grande (le disque dur) \u00e0 la plus petite (le registre), en passant par les m\u00e9moires vives par lesquelles transitent les informations. En informatique , tout est donn\u00e9e num\u00e9rique : les pages web, les images, les sons, les mels ,... et m\u00eame les programmes sont des donn\u00e9es stock\u00e9es dans des variables contenant des valeurs de diff\u00e9rents types. D'o\u00f9 notre obsession sur les variables ... On verra comment des algorithmes puis des programmes peuvent changer l'\u00e9tat de ces variables... En informatique, tout est nombre!! Affectation de variables \u00b6 Python est un langage informatique qui permet de donner des instructions. Par exemple, le code suivant: a = 2 b = 10 c = a + b cr\u00e9e de fa\u00e7on manuelle (puisqu'on a les tap\u00e9es...), trois variables a,b et c . Sans trop de d\u00e9tails, vous venez simplement de r\u00e9server trois tiroirs de votre gigantesque commode, en leur donnant des noms et des valeurs. Vocabulaire Lorsqu'on cr\u00e9e des variables et qu'on leur attribue des valeurs, on dit qu'on affecte une variable ou simplement que l'on a fait une affectation de variables. On peut aussi parler d' initialisation de la variable quand pour la premi\u00e8re fois, on affecte une valeur \u00e0 une variable. En Python , chaque variable a un type qui peut-\u00eatre, un nombre entier ou \u00e0 virgule (en python , on dit un int ou un float ), un texte (en python , on dit un string ) , une liste (en python , on dit une ... list ) ou tout autre chose dont on ne parlera pas pour le moment... Pourquoi stocker dans des variables??? Tout simplement pour garder en m\u00e9moire(celle de l'ordi), les r\u00e9sultats obtenus ou calcul\u00e9s par un programme. Il suffit d'invoquer le nom de la variable pour retourver son contenu! Un exemple! Le programme suivant calcule le prix TTC d'un article \u00e0 partir du prix HT et de la valeur du taux d'imposition li\u00e9 \u00e0 la TVA . Vous remarquerez que les variables utilis\u00e9es sont implicites : une variable qui d\u00e9signe un prix sera appel\u00e9e prix ou p , mais pas x !! prix_HT = 200 taux = 1.196 #pour une TVA a 19.6% print ( prix_HT * taux ) Le programme calcule puis affiche le prix TTC dans la console python . Mais le r\u00e9sultat ne sera pas conserv\u00e9 en m\u00e9moire! On peut (doit?) rem\u00e9dier \u00e0 cela en cr\u00e9ant la variable prix_TTC et l'affecter comme suit: prix_TTC = prix_HT * taux et faire ensuite afficher le contenu de cette varaible: print ( prix_TTC ) Les op\u00e9rateurs sur les diff\u00e9rentes variables \u00b6 Il existe des op\u00e9rateurs qui peuvent modifier l'\u00e9tat de ces variables. Outre les op\u00e9rations math\u00e9matiques usuelles \\((+, -, \\times, \\div)\\) , on aura l'occasion d'en d\u00e9couvrir d'autres. Exercice n\u00b01: Donner la valeur des variables a,b et c \u00e0 la suite de ces affectations. Code Solution a = 2 b = 10 c = a + b b = b + 1 a = a - 2 c = c ** 2 a = 2 b = 10 c = a + b # c vaut alors 12 b = b + 1 # b vaut 11 a = a - 2 # a vaut 0 c = c ** 2 # c vaut le carr\u00e9 de 12 soit 144 Il faut lire l'instruction b = b + 1 ainsi : la nouvelle valeur de la variable b est \u00e9gale \u00e0 la valeur de l'ancienne \u00e0 laquelle j'ajoute 1. Cette op\u00e9ration porte m\u00eame un joli nom: Vocabulaire L' op\u00e9ration qui consiste \u00e0 faire \u00e9voluer une variable en lui ajoutant 1 s'appelle une incr\u00e9mentation . Cette op\u00e9ration d'incr\u00e9mentation est tr\u00e8s utilis\u00e9e en info . Exercice n\u00b02: Questions R\u00e9ponses Quelle instruction Python fait diminuer de 1 une variable a ? Cherchez le nom de cette instruction. Donnez le code qui incr\u00e9mente une variable compteur de 5. a = a - 1 #attention dans ce cas il faut que a est \u00e9t\u00e9 initialis\u00e9e! C'est la d\u00e9cr\u00e9mentation ! compteur = compteur + 5 Il existe d'autres op\u00e9rations que nous ne citerons pas pour le moment sauf celle du modulo car elle est tr\u00e8s utilis\u00e9e en informatique et est nouvelle pour la plupart des personnes qui lisent ces quelques lignes! le modulo ... Nous vivons tous les jours modulo 24 : toutes les 24 heures, nous remettons les compteurs \u00e0 z\u00e9ro! Travaillez avec des entiers modulo n o\u00f9 n est aussi un entier, consiste \u00e0 compter \u00e0 partir de z\u00e9ro en remettant le compteur \u00e0 z\u00e9ro \u00e0 partir du rang n . Par exemple, en modulo 5: 0,1,2,3,4,0,1,2,3,... en modulo 2: 0,1,0,1,0,1,0,1,.... Dans la premi\u00e8re liste, \u00e0 l'entier 7 correspond l'entier 2 lorsqu'on compte modulo 5 : on dit alors que 7 est \u00e9gal \u00e0 2 si on compte modulo 5 et on \u00e9crit: en maths : 7 = 2 modulo 5 ou mieux , \\(7 \\equiv 2 \\pmod 5\\) en python : 7%5 qui donne comme valeur 2 On peut alors \u00e9crire les r\u00e9sultats suivants: des exemples de modulo... 7%5 = 2, 10%3 = 1, 100%20 = 0, 17%3 = 2 Remarquez enfin qu'on nombre entier est pair si son modulo 2 est... (\u00e0 vous de finir la phrase!) On peut aussi jouer avec des lettres ou du texte, ce que nous appelons des variables de type cha\u00eenes de caract\u00e8res ou simplement string en python. nom = \"Alfred\" club = \"Madrid\" age = \"30\" but = 26 Les variables de type string se d\u00e9clare avec des quotes , doubles \" \" ou simples ' ' (la tradition veut que l'on utilise les simples pour un seul caract\u00e8re...): les variables nom, club et age sont ainsi des cha\u00eenes de caract\u00e8res. La variable but est en revanche un entier de type int . Attention! Une variable a un type , d\u00e9fini dans la fa\u00e7on dont la variable a \u00e9t\u00e9 d\u00e9clar\u00e9e! Des op\u00e9rations existent selon le type de la variable. On peut pour illustrer mes propos, utiliser les op\u00e9rations math\u00e9matiques classiques sur les variables de type nombres ( int ou float ) mais pas sur les cha\u00eenes de caract\u00e8res! La variable age n'est donc pas une variable de type int mais bien string car d\u00e9clar\u00e9e avec des quotes ! Que peut-on faire avec des cha\u00eenes de caract\u00e8res? Les op\u00e9rateurs sur ces objets sont des op\u00e9rateurs de lecture et de concat\u00e9nation . Mais il n'existe pas d'op\u00e9rateur d'\u00e9criture qui modifierait la cha\u00eene de caract\u00e8res. Cela signifie qu'une fois d\u00e9clar\u00e9e, une variable de type string ne peut plus \u00eatre modifi\u00e9e . nom = \"Alfred\" club = \"Madrid\" age = \"30\" but = 26 print ( nom [ 0 ]) #affiche le premier caract\u00e8re de la variable nom print ( club [ 2 ]) #affiche le caract\u00e8re situ\u00e9 au rang 2 de la variable club phrase_du_jour = nom + \" a marqu\u00e9 \" + str ( but ) + \" buts avec le club de \" + club + \" \u00e0 l \u00e2ge de \" + age + \"ans.\" L'instruction print affiche la valeur de la variable. La variable phrase_du_jour est obtenue par la concat\u00e9nation de plusieurs cha\u00eenes de caract\u00e8tes. L'op\u00e9rateur de concat\u00e9nation est aussi le \\(+\\) mais ne s'applique qu'aux cha\u00eenes de caract\u00e8res! La variable but est transtyp\u00e9e pour passer d'un int \u00e0 un string ! On obtient alors: >>> print ( phrase_du_jour ) Alfred a marqu\u00e9 26 buts avec le club de Madrid \u00e0 l \u00e2ge de 30 ans . Attention en revanche, on ne peut pas concat\u00e9ner une cha\u00eene de caract\u00e8res et un entier: >>> print ( \"buts marqu\u00e9s\" + but ) TypeError : unsupported operand type ( s ) for + : 'int' and 'str' Le coin des exercices \u00b6 \u00c0 faire Donner les instructions python qui permettent: de cr\u00e9er une variable h et de lui affecter la valeur 10 . de cr\u00e9er une variable p et de lui affecter le texte bonjour . de cr\u00e9er une variable prix et de lui affecter la valeur 12.5 Tapez ces instructions dans la console ci-dessous puis pour chaque variable faites affichez son type par l'instruction print(type(var)) o\u00f9 var doit \u00eatre remplac\u00e9 par les noms des variables cr\u00e9\u00e9s pr\u00e9c\u00e9demment. Donner les instructions python qui: ajoute 10 \u00e0 la variable h et socke le r\u00e9sultat dans h . concat\u00e8ne la variable p avec votre pr\u00e9nom stocke le r\u00e9sultat dans la variable phrase . multiplie la variable prix par 1.1 et stocke le r\u00e9sultat dans prix >>>", "title": "Les variables"}, {"location": "maths/variables.html#des-variables-pour-comprendre", "text": "De quoi s'agit-il? Un ordinateur est une grande commode compos\u00e9e de millions de tiroirs dans lesquels on peut stocker des chaussettes... ou plut\u00f4t des donn\u00e9es! Je fais r\u00e9f\u00e9rence aux espaces de stockages des ordinateurs de la plus grande (le disque dur) \u00e0 la plus petite (le registre), en passant par les m\u00e9moires vives par lesquelles transitent les informations. En informatique , tout est donn\u00e9e num\u00e9rique : les pages web, les images, les sons, les mels ,... et m\u00eame les programmes sont des donn\u00e9es stock\u00e9es dans des variables contenant des valeurs de diff\u00e9rents types. D'o\u00f9 notre obsession sur les variables ... On verra comment des algorithmes puis des programmes peuvent changer l'\u00e9tat de ces variables... En informatique, tout est nombre!!", "title": "Des variables pour comprendre"}, {"location": "maths/variables.html#affectation-de-variables", "text": "Python est un langage informatique qui permet de donner des instructions. Par exemple, le code suivant: a = 2 b = 10 c = a + b cr\u00e9e de fa\u00e7on manuelle (puisqu'on a les tap\u00e9es...), trois variables a,b et c . Sans trop de d\u00e9tails, vous venez simplement de r\u00e9server trois tiroirs de votre gigantesque commode, en leur donnant des noms et des valeurs. Vocabulaire Lorsqu'on cr\u00e9e des variables et qu'on leur attribue des valeurs, on dit qu'on affecte une variable ou simplement que l'on a fait une affectation de variables. On peut aussi parler d' initialisation de la variable quand pour la premi\u00e8re fois, on affecte une valeur \u00e0 une variable. En Python , chaque variable a un type qui peut-\u00eatre, un nombre entier ou \u00e0 virgule (en python , on dit un int ou un float ), un texte (en python , on dit un string ) , une liste (en python , on dit une ... list ) ou tout autre chose dont on ne parlera pas pour le moment... Pourquoi stocker dans des variables??? Tout simplement pour garder en m\u00e9moire(celle de l'ordi), les r\u00e9sultats obtenus ou calcul\u00e9s par un programme. Il suffit d'invoquer le nom de la variable pour retourver son contenu! Un exemple! Le programme suivant calcule le prix TTC d'un article \u00e0 partir du prix HT et de la valeur du taux d'imposition li\u00e9 \u00e0 la TVA . Vous remarquerez que les variables utilis\u00e9es sont implicites : une variable qui d\u00e9signe un prix sera appel\u00e9e prix ou p , mais pas x !! prix_HT = 200 taux = 1.196 #pour une TVA a 19.6% print ( prix_HT * taux ) Le programme calcule puis affiche le prix TTC dans la console python . Mais le r\u00e9sultat ne sera pas conserv\u00e9 en m\u00e9moire! On peut (doit?) rem\u00e9dier \u00e0 cela en cr\u00e9ant la variable prix_TTC et l'affecter comme suit: prix_TTC = prix_HT * taux et faire ensuite afficher le contenu de cette varaible: print ( prix_TTC )", "title": "Affectation de variables"}, {"location": "maths/variables.html#les-operateurs-sur-les-differentes-variables", "text": "Il existe des op\u00e9rateurs qui peuvent modifier l'\u00e9tat de ces variables. Outre les op\u00e9rations math\u00e9matiques usuelles \\((+, -, \\times, \\div)\\) , on aura l'occasion d'en d\u00e9couvrir d'autres. Exercice n\u00b01: Donner la valeur des variables a,b et c \u00e0 la suite de ces affectations. Code Solution a = 2 b = 10 c = a + b b = b + 1 a = a - 2 c = c ** 2 a = 2 b = 10 c = a + b # c vaut alors 12 b = b + 1 # b vaut 11 a = a - 2 # a vaut 0 c = c ** 2 # c vaut le carr\u00e9 de 12 soit 144 Il faut lire l'instruction b = b + 1 ainsi : la nouvelle valeur de la variable b est \u00e9gale \u00e0 la valeur de l'ancienne \u00e0 laquelle j'ajoute 1. Cette op\u00e9ration porte m\u00eame un joli nom: Vocabulaire L' op\u00e9ration qui consiste \u00e0 faire \u00e9voluer une variable en lui ajoutant 1 s'appelle une incr\u00e9mentation . Cette op\u00e9ration d'incr\u00e9mentation est tr\u00e8s utilis\u00e9e en info . Exercice n\u00b02: Questions R\u00e9ponses Quelle instruction Python fait diminuer de 1 une variable a ? Cherchez le nom de cette instruction. Donnez le code qui incr\u00e9mente une variable compteur de 5. a = a - 1 #attention dans ce cas il faut que a est \u00e9t\u00e9 initialis\u00e9e! C'est la d\u00e9cr\u00e9mentation ! compteur = compteur + 5 Il existe d'autres op\u00e9rations que nous ne citerons pas pour le moment sauf celle du modulo car elle est tr\u00e8s utilis\u00e9e en informatique et est nouvelle pour la plupart des personnes qui lisent ces quelques lignes! le modulo ... Nous vivons tous les jours modulo 24 : toutes les 24 heures, nous remettons les compteurs \u00e0 z\u00e9ro! Travaillez avec des entiers modulo n o\u00f9 n est aussi un entier, consiste \u00e0 compter \u00e0 partir de z\u00e9ro en remettant le compteur \u00e0 z\u00e9ro \u00e0 partir du rang n . Par exemple, en modulo 5: 0,1,2,3,4,0,1,2,3,... en modulo 2: 0,1,0,1,0,1,0,1,.... Dans la premi\u00e8re liste, \u00e0 l'entier 7 correspond l'entier 2 lorsqu'on compte modulo 5 : on dit alors que 7 est \u00e9gal \u00e0 2 si on compte modulo 5 et on \u00e9crit: en maths : 7 = 2 modulo 5 ou mieux , \\(7 \\equiv 2 \\pmod 5\\) en python : 7%5 qui donne comme valeur 2 On peut alors \u00e9crire les r\u00e9sultats suivants: des exemples de modulo... 7%5 = 2, 10%3 = 1, 100%20 = 0, 17%3 = 2 Remarquez enfin qu'on nombre entier est pair si son modulo 2 est... (\u00e0 vous de finir la phrase!) On peut aussi jouer avec des lettres ou du texte, ce que nous appelons des variables de type cha\u00eenes de caract\u00e8res ou simplement string en python. nom = \"Alfred\" club = \"Madrid\" age = \"30\" but = 26 Les variables de type string se d\u00e9clare avec des quotes , doubles \" \" ou simples ' ' (la tradition veut que l'on utilise les simples pour un seul caract\u00e8re...): les variables nom, club et age sont ainsi des cha\u00eenes de caract\u00e8res. La variable but est en revanche un entier de type int . Attention! Une variable a un type , d\u00e9fini dans la fa\u00e7on dont la variable a \u00e9t\u00e9 d\u00e9clar\u00e9e! Des op\u00e9rations existent selon le type de la variable. On peut pour illustrer mes propos, utiliser les op\u00e9rations math\u00e9matiques classiques sur les variables de type nombres ( int ou float ) mais pas sur les cha\u00eenes de caract\u00e8res! La variable age n'est donc pas une variable de type int mais bien string car d\u00e9clar\u00e9e avec des quotes ! Que peut-on faire avec des cha\u00eenes de caract\u00e8res? Les op\u00e9rateurs sur ces objets sont des op\u00e9rateurs de lecture et de concat\u00e9nation . Mais il n'existe pas d'op\u00e9rateur d'\u00e9criture qui modifierait la cha\u00eene de caract\u00e8res. Cela signifie qu'une fois d\u00e9clar\u00e9e, une variable de type string ne peut plus \u00eatre modifi\u00e9e . nom = \"Alfred\" club = \"Madrid\" age = \"30\" but = 26 print ( nom [ 0 ]) #affiche le premier caract\u00e8re de la variable nom print ( club [ 2 ]) #affiche le caract\u00e8re situ\u00e9 au rang 2 de la variable club phrase_du_jour = nom + \" a marqu\u00e9 \" + str ( but ) + \" buts avec le club de \" + club + \" \u00e0 l \u00e2ge de \" + age + \"ans.\" L'instruction print affiche la valeur de la variable. La variable phrase_du_jour est obtenue par la concat\u00e9nation de plusieurs cha\u00eenes de caract\u00e8tes. L'op\u00e9rateur de concat\u00e9nation est aussi le \\(+\\) mais ne s'applique qu'aux cha\u00eenes de caract\u00e8res! La variable but est transtyp\u00e9e pour passer d'un int \u00e0 un string ! On obtient alors: >>> print ( phrase_du_jour ) Alfred a marqu\u00e9 26 buts avec le club de Madrid \u00e0 l \u00e2ge de 30 ans . Attention en revanche, on ne peut pas concat\u00e9ner une cha\u00eene de caract\u00e8res et un entier: >>> print ( \"buts marqu\u00e9s\" + but ) TypeError : unsupported operand type ( s ) for + : 'int' and 'str'", "title": "Les op\u00e9rateurs sur les diff\u00e9rentes variables"}, {"location": "maths/variables.html#le-coin-des-exercices", "text": "\u00c0 faire Donner les instructions python qui permettent: de cr\u00e9er une variable h et de lui affecter la valeur 10 . de cr\u00e9er une variable p et de lui affecter le texte bonjour . de cr\u00e9er une variable prix et de lui affecter la valeur 12.5 Tapez ces instructions dans la console ci-dessous puis pour chaque variable faites affichez son type par l'instruction print(type(var)) o\u00f9 var doit \u00eatre remplac\u00e9 par les noms des variables cr\u00e9\u00e9s pr\u00e9c\u00e9demment. Donner les instructions python qui: ajoute 10 \u00e0 la variable h et socke le r\u00e9sultat dans h . concat\u00e8ne la variable p avec votre pr\u00e9nom stocke le r\u00e9sultat dans la variable phrase . multiplie la variable prix par 1.1 et stocke le r\u00e9sultat dans prix >>>", "title": "Le coin des exercices"}, {"location": "prem/cours_de_reseaux.html", "text": "Travail sur les r\u00e9seaux informatiques \u00b6 Notre monde est hyper-connect\u00e9! Connect\u00e9 par des interfaces simples(web /appli.) mais surtout connect\u00e9 au sens physique du terme. Dans une architecture classique de r\u00e9seau, un ordinateur(le client) est reli\u00e9 par un c\u00e2ble, une fibre, une onde \u00e9lectromagn\u00e9tique,... \u00e0 un autre ordinateur(le serveur) qui lui fournit des services (pages web, messagerie, base de donn\u00e9es,...) quasiment en continu. Objectifs Ce cours pr\u00e9cise sans trop de d\u00e9tails, le vocabulaire usuel des r\u00e9seaux et les principes g\u00e9n\u00e9raux de leur fonctionnement. Le travail se terminera par la simulation d'un r\u00e9seau informatique et l'utilisation de biblioth\u00e8ques Python pour communiquer entre deux ordinateurs d'une m\u00eame salle. D'abord , un r\u00e9seau physique... \u00b6 Avant tout, pour que deux ordinateurs puissent communiquer entre eux, il faut qu'ils soient reli\u00e9s l'un \u00e0 l'autre . Ce lien physique est essentiellement: un fil (fils de cuivre, fibre optique,...) une onde \u00e9lectromagn\u00e9tique(wifi, bluetooth) Chez vous, la box est physiquement reli\u00e9e au r\u00e9seau t\u00e9l\u00e9phonique (ou fibre) par un c\u00e2ble: le reste du r\u00e9seau y est souvent connect\u00e9 en WIFI... Dans nos salles de NSI, les ordinateurs sont reli\u00e9s gr\u00e2ce des c\u00e2bles RJ45 droits aux prises r\u00e9seaux ,elles-m\u00eames reli\u00e9es \u00e0 une baie de brassage , puis \u00e0 un switch et enfin au serveur de l'\u00e9tablissement...seul \u00e9l\u00e9ment du r\u00e9seau reli\u00e9 \u00e0 internet! \u00c0 une autre \u00e9chelle, des c\u00e2bles sous-marins ont m\u00eame \u00e9t\u00e9 d\u00e9pos\u00e9s au fond des oc\u00e9ans pour relier les continents europ\u00e9ens et am\u00e9ricains: . Le r\u00e9seau internet \u00b6 Il y a de nombreuses confusions: les gens emploient indiff\u00e9remment les mots WEB et Internet alors qu'ils ne d\u00e9signent pas la m\u00eame chose. Internet , c'est un immense regroupement de diff\u00e9rents r\u00e9seaux qui ont en commun des protocoles de communication: c'est donc un r\u00e9seau physique , mat\u00e9riel . Un \u00e9l\u00e8ve de NSI ne doit pas faire cette confusion! Le WEB est un service propos\u00e9 sur ce r\u00e9seau comme la messagerie ou le streaming: c'est une couche logicielle, immat\u00e9rielle! Historique \u00b6 \u00c0 la fin des ann\u00e9es 1950, en pleine guerre froide, le DoD (Departement Of Defense (US)) souhaitait disposer d'un r\u00e9seau de communication capable de r\u00e9sister \u00e0 une attaque nucl\u00e9aire. Le r\u00e9seau t\u00e9l\u00e9phonique, vuln\u00e9rable ne suffirait pas. En 1957, alors que les russes lancaient le premier satellite spoutnik , les Am\u00e9ricains cr\u00e9ent une section de recherche militaire appel\u00e9e ARPA . Elle donna naissance en 1969 un r\u00e9seau Arpanet , bas\u00e9 sur la commutation de paquets. Internet \u00e9tait n\u00e9.... Cette toile ainsi tiss\u00e9e entre tous les serveurs, tous les routeurs, tous les ordinateurs, est physiquement le r\u00e9seau Internet . Le r\u00e9seau domostique de base! \u00b6 Depuis 1990 et le d\u00e9but du WEB, les services rendus sur internet n'ont cess\u00e9 d'\u00e9voluer. Les fran\u00e7ais se sont \u00e9quip\u00e9s en cons\u00e9quences. Le point n\u00e9vralgique de votre r\u00e9seau est votre box internet :les principaux fournisseurs d'acc\u00e8s se disputent le march\u00e9(Orange, SFR, Free, Bouygues,...). Votre box a de super pouvoirs: elle attribue une adresse IP \u00e0 toutes les machines qui s'y connectent. C'est un serveur DHCP! elle assure la transition entre votre r\u00e9seau priv\u00e9 (le v\u00f4tre avec vos ordinateurs, vos smartphones, l'imprimante, l'aspirateur, le frigo,...) et le r\u00e9seau public, internet quoi... C'est une passerelle! elle achemine les paquets qu'elle re\u00e7oit de ses h\u00f4tes (ceux pr\u00e9c\u00e9demment cit\u00e9s...) \u00e0 la destination souhait\u00e9e et transmet la r\u00e9ponse en retour. C'est un routeur! D'autres services sont assur\u00e9s par votre box comme le NAT, DNS ou le pare feu mais nous n'en dirons pas plus ici... Vous pouvez m\u00eame communiquer avec votre box Orange de n'importe quel navigateur situ\u00e9 sur un ordinateur de votre r\u00e9seau. Dans la barre d'adresse, saisissez 192.168.1.1 et la page d'administration appara\u00eet(il faut tout de m\u00eame saisir le mot de passe administrateur...): Le r\u00e9seau du lyc\u00e9e \u00b6 C'est un peu la m\u00eame chose que chez vous mais en plus grand( sachez qu'il y a plus de mille ordinateurs dans le lyc\u00e9e!). Les r\u00e9seaux sont class\u00e9s selon leur extension (PAN, LAN, MAN, WAN) dans une hi\u00e9rarchie bien d\u00e9finie. Un r\u00e9seau logiciel \u00b6 Internet est donc un r\u00e9seau physique reliant finalement tous les ordinateurs entre eux. Mais comment se fait la communication? Comment les \u00e9changes d\u2019informations se font-ils ? Pourquoi les informations ne se perdent pas dans ce r\u00e9seau monstrueux? C\u2019est une histoire de protocole... Derri\u00e8re le rideau... Je souhaite consulter un site WEB. Pour cela, j'utilise un navigateur dans lequel je saisis l'URL du site dans la barre d'adresse et miracle, les informations me parviennent! Mais que s'est-il r\u00e9ellement pass\u00e9???? Il s'agit bien d'une communication entre deux ordinateurs: celui qui effectue la requ\u00eate : c'est le client ! celui qui re\u00e7oit la requ\u00eate: c'est le serveur ! Toutes les proc\u00e9dures de connexion sont transparentes aux yeux de l'utilisateur. Mais sachez qu'elles existent et qu'elles sont ex\u00e9cut\u00e9es \u00e0 une allure vertigineuse, en principe. Vous souhaitez observer ce qui se passe lorsque vous solliciter une site web comme www.lequipe.fr ? Facile, appuyer sur F12 dans votre navigateur Firefox et visualisez dans l'onglet reseau les requ\u00eates apr\u00e8s validation de l'URL ci-dessus. Le client envoie une requ\u00eate http . On utilise ici la m\u00e9thode GET pour obtenir une ressource du serveur distant: celle_ci est la racine () du site web. Vous pouvez consulter le contenu de la requ\u00eate en cliquant sur la premi\u00e8re ligne contenant le GET ... Le serveur r\u00e9pond et fournit le code HTML de la premi\u00e8re page. Vous remarquerez plusieurs requ\u00eates(126 exactements) qui permettent de charger divers \u00e9l\u00e9ments (css, js, font,...) Vous remarquerez la pr\u00e9sence de la m\u00e9thode POST qui permet de transmettre des donn\u00e9es au serveur dans le corps de la requ\u00eate (des cookies ou \u00e9quivalent sans doute ici...). Mais comment contacter le serveur qui h\u00e9berge le site www.lequipe.fr ? Lorsque vous utilisez votre smartphone pour appeler votre copain, c'est la connaissance de son num\u00e9ro qui rend possible la communication. Sur internet , le m\u00eame principe est reconduit. Le serveur a une adresse IP publique : par exemple l'adresse d'un des serveurs de google est 216.58.214.163 . Vous ne me croyez pas! Tapez cette adresse dans la barre d'adresse d'un navigateur et vous verrez... Mais suis-je obligez de conna\u00eetre les adresses IP des millions de serveurs dans le monde? Et bien ,NON! Il suffit juste de conna\u00eetre son URL , et encore... les moteurs de recherche nous envoient souvent vers le site recherch\u00e9 \u00e0 partir d'un mot cl\u00e9. Un service d\u00e9di\u00e9 s'occupe alors d'associer \u00e0 cette URL son adresse IP , bien conserv\u00e9e quelque part en France dans un serveur Racine( en fait il y en a plusieurs...). C'est le protocole DNS (Domain Name Service). J'ai compris! Pour contacter un serveur web par exemple, il faut conna\u00eetre son adresse IP qu'un serveur DNS me livre. Mais le probl\u00e8me reste pos\u00e9: comment contacter le serveur racine d'un DNS??? Les routeurs auquels sont n\u00e9cessairement reli\u00e9s votre machine, ont en m\u00e9moire les adresses IP de ces serveurs (parfois m\u00eame ils se trouvent dans le cache de votre navigateur...). Les serveurs racines Les serveurs racines DNS sont g\u00e9r\u00e9s par douze organisations diff\u00e9rentes : deux sont europ\u00e9ennes, une japonaise et les neuf autres sont am\u00e9ricaines. Le sch\u00e9ma suivant montre que si vous ne poss\u00e9dez pas dans votre machine l'adresse IP du site que vous souhaitez solliciter, une premi\u00e8re requ\u00eate est effectu\u00e9e sur un serveur racine(1). Puis le serveur DNS vous r\u00e9pond en vous fournissant l'adresse du serveur web(2). Vous pouvez alors contacter ce serveur(3) qui en retour vous donne le code HTML (4). J'ai compris! Un serveur = une adresse IP ! Mais il y a des millions d'ordinateurs dans le monde. A t-on suffisamment d'adresse IP pour chacun?", "title": "R\u00e9seaux informatiques"}, {"location": "prem/cours_de_reseaux.html#travail-sur-les-reseaux-informatiques", "text": "Notre monde est hyper-connect\u00e9! Connect\u00e9 par des interfaces simples(web /appli.) mais surtout connect\u00e9 au sens physique du terme. Dans une architecture classique de r\u00e9seau, un ordinateur(le client) est reli\u00e9 par un c\u00e2ble, une fibre, une onde \u00e9lectromagn\u00e9tique,... \u00e0 un autre ordinateur(le serveur) qui lui fournit des services (pages web, messagerie, base de donn\u00e9es,...) quasiment en continu. Objectifs Ce cours pr\u00e9cise sans trop de d\u00e9tails, le vocabulaire usuel des r\u00e9seaux et les principes g\u00e9n\u00e9raux de leur fonctionnement. Le travail se terminera par la simulation d'un r\u00e9seau informatique et l'utilisation de biblioth\u00e8ques Python pour communiquer entre deux ordinateurs d'une m\u00eame salle.", "title": "Travail sur les r\u00e9seaux informatiques"}, {"location": "prem/cours_de_reseaux.html#dabord-un-reseau-physique", "text": "Avant tout, pour que deux ordinateurs puissent communiquer entre eux, il faut qu'ils soient reli\u00e9s l'un \u00e0 l'autre . Ce lien physique est essentiellement: un fil (fils de cuivre, fibre optique,...) une onde \u00e9lectromagn\u00e9tique(wifi, bluetooth) Chez vous, la box est physiquement reli\u00e9e au r\u00e9seau t\u00e9l\u00e9phonique (ou fibre) par un c\u00e2ble: le reste du r\u00e9seau y est souvent connect\u00e9 en WIFI... Dans nos salles de NSI, les ordinateurs sont reli\u00e9s gr\u00e2ce des c\u00e2bles RJ45 droits aux prises r\u00e9seaux ,elles-m\u00eames reli\u00e9es \u00e0 une baie de brassage , puis \u00e0 un switch et enfin au serveur de l'\u00e9tablissement...seul \u00e9l\u00e9ment du r\u00e9seau reli\u00e9 \u00e0 internet! \u00c0 une autre \u00e9chelle, des c\u00e2bles sous-marins ont m\u00eame \u00e9t\u00e9 d\u00e9pos\u00e9s au fond des oc\u00e9ans pour relier les continents europ\u00e9ens et am\u00e9ricains: .", "title": "D'abord , un r\u00e9seau physique..."}, {"location": "prem/cours_de_reseaux.html#le-reseau-internet", "text": "Il y a de nombreuses confusions: les gens emploient indiff\u00e9remment les mots WEB et Internet alors qu'ils ne d\u00e9signent pas la m\u00eame chose. Internet , c'est un immense regroupement de diff\u00e9rents r\u00e9seaux qui ont en commun des protocoles de communication: c'est donc un r\u00e9seau physique , mat\u00e9riel . Un \u00e9l\u00e8ve de NSI ne doit pas faire cette confusion! Le WEB est un service propos\u00e9 sur ce r\u00e9seau comme la messagerie ou le streaming: c'est une couche logicielle, immat\u00e9rielle!", "title": "Le r\u00e9seau internet"}, {"location": "prem/cours_de_reseaux.html#historique", "text": "\u00c0 la fin des ann\u00e9es 1950, en pleine guerre froide, le DoD (Departement Of Defense (US)) souhaitait disposer d'un r\u00e9seau de communication capable de r\u00e9sister \u00e0 une attaque nucl\u00e9aire. Le r\u00e9seau t\u00e9l\u00e9phonique, vuln\u00e9rable ne suffirait pas. En 1957, alors que les russes lancaient le premier satellite spoutnik , les Am\u00e9ricains cr\u00e9ent une section de recherche militaire appel\u00e9e ARPA . Elle donna naissance en 1969 un r\u00e9seau Arpanet , bas\u00e9 sur la commutation de paquets. Internet \u00e9tait n\u00e9.... Cette toile ainsi tiss\u00e9e entre tous les serveurs, tous les routeurs, tous les ordinateurs, est physiquement le r\u00e9seau Internet .", "title": "Historique"}, {"location": "prem/cours_de_reseaux.html#le-reseau-domostique-de-base", "text": "Depuis 1990 et le d\u00e9but du WEB, les services rendus sur internet n'ont cess\u00e9 d'\u00e9voluer. Les fran\u00e7ais se sont \u00e9quip\u00e9s en cons\u00e9quences. Le point n\u00e9vralgique de votre r\u00e9seau est votre box internet :les principaux fournisseurs d'acc\u00e8s se disputent le march\u00e9(Orange, SFR, Free, Bouygues,...). Votre box a de super pouvoirs: elle attribue une adresse IP \u00e0 toutes les machines qui s'y connectent. C'est un serveur DHCP! elle assure la transition entre votre r\u00e9seau priv\u00e9 (le v\u00f4tre avec vos ordinateurs, vos smartphones, l'imprimante, l'aspirateur, le frigo,...) et le r\u00e9seau public, internet quoi... C'est une passerelle! elle achemine les paquets qu'elle re\u00e7oit de ses h\u00f4tes (ceux pr\u00e9c\u00e9demment cit\u00e9s...) \u00e0 la destination souhait\u00e9e et transmet la r\u00e9ponse en retour. C'est un routeur! D'autres services sont assur\u00e9s par votre box comme le NAT, DNS ou le pare feu mais nous n'en dirons pas plus ici... Vous pouvez m\u00eame communiquer avec votre box Orange de n'importe quel navigateur situ\u00e9 sur un ordinateur de votre r\u00e9seau. Dans la barre d'adresse, saisissez 192.168.1.1 et la page d'administration appara\u00eet(il faut tout de m\u00eame saisir le mot de passe administrateur...):", "title": "Le r\u00e9seau domostique de base!"}, {"location": "prem/cours_de_reseaux.html#le-reseau-du-lycee", "text": "C'est un peu la m\u00eame chose que chez vous mais en plus grand( sachez qu'il y a plus de mille ordinateurs dans le lyc\u00e9e!). Les r\u00e9seaux sont class\u00e9s selon leur extension (PAN, LAN, MAN, WAN) dans une hi\u00e9rarchie bien d\u00e9finie.", "title": "Le r\u00e9seau du lyc\u00e9e"}, {"location": "prem/cours_de_reseaux.html#un-reseau-logiciel", "text": "Internet est donc un r\u00e9seau physique reliant finalement tous les ordinateurs entre eux. Mais comment se fait la communication? Comment les \u00e9changes d\u2019informations se font-ils ? Pourquoi les informations ne se perdent pas dans ce r\u00e9seau monstrueux? C\u2019est une histoire de protocole... Derri\u00e8re le rideau... Je souhaite consulter un site WEB. Pour cela, j'utilise un navigateur dans lequel je saisis l'URL du site dans la barre d'adresse et miracle, les informations me parviennent! Mais que s'est-il r\u00e9ellement pass\u00e9???? Il s'agit bien d'une communication entre deux ordinateurs: celui qui effectue la requ\u00eate : c'est le client ! celui qui re\u00e7oit la requ\u00eate: c'est le serveur ! Toutes les proc\u00e9dures de connexion sont transparentes aux yeux de l'utilisateur. Mais sachez qu'elles existent et qu'elles sont ex\u00e9cut\u00e9es \u00e0 une allure vertigineuse, en principe. Vous souhaitez observer ce qui se passe lorsque vous solliciter une site web comme www.lequipe.fr ? Facile, appuyer sur F12 dans votre navigateur Firefox et visualisez dans l'onglet reseau les requ\u00eates apr\u00e8s validation de l'URL ci-dessus. Le client envoie une requ\u00eate http . On utilise ici la m\u00e9thode GET pour obtenir une ressource du serveur distant: celle_ci est la racine () du site web. Vous pouvez consulter le contenu de la requ\u00eate en cliquant sur la premi\u00e8re ligne contenant le GET ... Le serveur r\u00e9pond et fournit le code HTML de la premi\u00e8re page. Vous remarquerez plusieurs requ\u00eates(126 exactements) qui permettent de charger divers \u00e9l\u00e9ments (css, js, font,...) Vous remarquerez la pr\u00e9sence de la m\u00e9thode POST qui permet de transmettre des donn\u00e9es au serveur dans le corps de la requ\u00eate (des cookies ou \u00e9quivalent sans doute ici...). Mais comment contacter le serveur qui h\u00e9berge le site www.lequipe.fr ? Lorsque vous utilisez votre smartphone pour appeler votre copain, c'est la connaissance de son num\u00e9ro qui rend possible la communication. Sur internet , le m\u00eame principe est reconduit. Le serveur a une adresse IP publique : par exemple l'adresse d'un des serveurs de google est 216.58.214.163 . Vous ne me croyez pas! Tapez cette adresse dans la barre d'adresse d'un navigateur et vous verrez... Mais suis-je obligez de conna\u00eetre les adresses IP des millions de serveurs dans le monde? Et bien ,NON! Il suffit juste de conna\u00eetre son URL , et encore... les moteurs de recherche nous envoient souvent vers le site recherch\u00e9 \u00e0 partir d'un mot cl\u00e9. Un service d\u00e9di\u00e9 s'occupe alors d'associer \u00e0 cette URL son adresse IP , bien conserv\u00e9e quelque part en France dans un serveur Racine( en fait il y en a plusieurs...). C'est le protocole DNS (Domain Name Service). J'ai compris! Pour contacter un serveur web par exemple, il faut conna\u00eetre son adresse IP qu'un serveur DNS me livre. Mais le probl\u00e8me reste pos\u00e9: comment contacter le serveur racine d'un DNS??? Les routeurs auquels sont n\u00e9cessairement reli\u00e9s votre machine, ont en m\u00e9moire les adresses IP de ces serveurs (parfois m\u00eame ils se trouvent dans le cache de votre navigateur...). Les serveurs racines Les serveurs racines DNS sont g\u00e9r\u00e9s par douze organisations diff\u00e9rentes : deux sont europ\u00e9ennes, une japonaise et les neuf autres sont am\u00e9ricaines. Le sch\u00e9ma suivant montre que si vous ne poss\u00e9dez pas dans votre machine l'adresse IP du site que vous souhaitez solliciter, une premi\u00e8re requ\u00eate est effectu\u00e9e sur un serveur racine(1). Puis le serveur DNS vous r\u00e9pond en vous fournissant l'adresse du serveur web(2). Vous pouvez alors contacter ce serveur(3) qui en retour vous donne le code HTML (4). J'ai compris! Un serveur = une adresse IP ! Mais il y a des millions d'ordinateurs dans le monde. A t-on suffisamment d'adresse IP pour chacun?", "title": "Un r\u00e9seau logiciel"}, {"location": "prem/frontend.html", "text": "Le WEB \u00b6 Qu\u00e9zaco??? \u00b6 Le WEB ou plus pr\u00e9cis\u00e9ment le WorldWideWeb est un syst\u00e8me hypertexte public fonctionnant sur l' internet . Il permet de consulter, avec un navigateur, des pages accessibles sur des sites. En 1989, Tim Berners-Lee engag\u00e9 au CERN de Gen\u00e8ve, propose de d\u00e9velopper un syst\u00e8me organis\u00e9 en toile, afin d'am\u00e9liorer la diffusion des informations internes. En 1990, na\u00eet alors le premier serveur WEB: la premi\u00e8re page existe toujours et vous pouvez la consulter ici . Le premier langage du WEB: le HTML \u00b6 Le premier langage utilis\u00e9 pour d\u00e9crire le contenu d'une page web est le langage HTML(HyperTextMarkupLanguage). Ce n'est donc pas un langage de programmation mais un langage de description comme Latex par exemple... Il repose sur des balises et leurs attributs qui d\u00e9crivent un contenu: titre, paragraphe, ent\u00eate, images, liens,.... Ci-dessous un exemple relativement simple d'une page web: Un exemple tr\u00e8s simple de page web <!DOCTYPE html> < html > < head > < title > Le titre de ma premi\u00e8re page </ title > </ head > < body > < h1 > Cool! mon premier titre </ h1 > < p > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9faut des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > </ body > </ html > Lire ou \u00e9crire? Il faut savoir! \u00b6 On \u00e9crit du code HTML dans un \u00e9diteur ( NotePad, visualCode, blocnote,...) et on le lit avec un navigateur . La manipulation habituelle est celle d\u00e9crite dans l'exercice suivant: \u00c0 faire: \u00e9diter du code et le lire Choisir un \u00e9diteur de texte (Notepad ou Visual Studio Code est id\u00e9al... mais le blocnote suffirait!) Recopier le code HTML pr\u00e9c\u00e9dent et sauvegardez ce fichier sous le nom index avec l' extension HTML . En g\u00e9n\u00e9ral, les logiciels d'\u00e9dition utilis\u00e9s permettent de le faire assez facilement... Vous venez alors de cr\u00e9er le fichier index.html qui s'ouvre par d\u00e9faut avec un navigateur. Double-cliquez sur ce fichier: un navigateur doit s'ouvrir et afficher le contenu de la page web. En observant le site sur le navigateur, \u00e0 quoi sert la balise br ? Fermez ensuite le logiciel que vous avez utilis\u00e9 pour \u00e9diter le code HTML. Il arrive fr\u00e9quemment de modifier un code existant. Par exemple, comment ajouter des \u00e9lements au fichier index.html ? Comment \u00e9crire sur ce doument? C'est simple; faites un clic-droit et le menu contextuel qui s'ouvre vous permet de choisir ouvrir avec ... , le logiciel d'\u00e9dition. Je vous rappelle que par d\u00e9faut, un fichier html s'ouvre en lecture avec un navigateur... \u00c0 faire: modifier du code HTML Ajouter le code HTML suivant au fichier pr\u00e9c\u00e9dent entre les balises fermantes <\\p> et <\\body> . < h2 > C'est mon deuxi\u00e8me titre </ h2 > < p > Remarquez que le titre H2 est plus petit que celui de H1 </ p > Lire le nouveau document pour observer les changements effectu\u00e9s. Pour actualiser une page dans un navigateur, il suffit d'appuyer sur la touche F5 . La W3C schools \u00b6 Le W3C est un consortium charg\u00e9e de d\u00e9velopper et maintenir les standards du WEB que sont les langages HTML,CSS,PHP, ... mais aussi le format d'image png (Portable Network Graphics) id\u00e9al pour les pages WEB. Il offre aussi la possibilit\u00e9 de valider votre code en vous indiquant si vous avez respect\u00e9 les normes en vigueur. Ce consortium propose une \u00e9cole d'apprentissage du code HTML et d'autres... c'est la W3schools! Vous trouverez le lien ici . Les exercices qui suivent ont \u00e9t\u00e9 inspir\u00e9s par les exemples propos\u00e9s dans cette \u00e9cole. Apprentissage du HTML \u00b6 Cette partie s'int\u00e9resse \u00e0 la partie codage et vous donne au fur et \u00e0 mesure de nouvelles fonctionnalit\u00e9s. Il faut donc \u00e0 chaque \u00e9tape modifier ou compl\u00e9ter son code HTML dans un logiciel d'\u00e9dition et visualiser dans un navigateur, le r\u00e9sultat de vos modifications. N'oubliez pas d': enregistrer votre fichier modifi\u00e9 (touches ctrl + S ) actualiser votre page dans le navigateur (touche F5 ) On utilisera comme point de d\u00e9part, le code de la page web donn\u00e9 dans la partie pr\u00e9c\u00e9dente: Code simple que nous allons compl\u00e9ter <!DOCTYPE html> < html > < head > < title > Le titre de ma premi\u00e8re page </ title > </ head > < body > < h1 > Cool! mon premier titre </ h1 > < p > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9faut des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > < h2 > C'est mon deuxi\u00e8me titre </ h2 > < p > Remarquez que le titre H2 est plus petit que celui de H1 </ p > </ body > </ html > Des attributs pour formater \u00e0 volont\u00e9... \u00b6 Toutes les balises ont par d\u00e9faut , des attributs de couleur, de grosseur, de positionnement qui peuvent \u00eatre modifi\u00e9s. Quelques exemples sont propos\u00e9s ici. \u00c0 faire: ajouter des attributs aux balises Modifier la balise body comme ceci: < body style = \"background-color:powderblue;\" > Modifier la balise H1 : < h1 style = \"color:Tomato; font-size:300%;text-align:center;\" > Modifier la balise H2 afin qu'elle soit aussi align\u00e9e au centre avec la couleur MediumSeaGreen . Enfin faites en sorte que les paragraphes soient centr\u00e9s avec un fond de couleur que vous pouvez choisir parmi les possibilit\u00e9s offertes ici \u00c0 retenir! Tous les \u00e9l\u00e9ments HTML ont un style que vous pouvez d\u00e9finir ou red\u00e9finir \u00e0 souhait... Certains sont simples d'autres plus avanc\u00e9s. \u00c0 faire: un style balaise! Essayez ce style sur les balise p: < p style = \"background: linear-gradient(to right,#ffbe02a1 0px,#fd606aba 100%); padding: 10px; border-radius: 10px;\" > C'est joli, non? Des commentaires pour comprendre \u00b6 Dans tout langage informatique, on peut (doit?) ajouter des commentaires qui permettent d'amener quelques explications aux choix effectu\u00e9s: ces lignes ne sont pas interpr\u00e9t\u00e9es par le navigateur. Code simple que nous allons ccommenter <!DOCTYPE html> < html > < head > <!-- Les commentaires sont int\u00e9gr\u00e9s au code par ces balises--> < title > Le titre de ma premi\u00e8re page </ title > </ head > < body > < h1 > Cool! mon premier titre </ h1 > <!-- bg en degrad\u00e9 vers la droite d'une couleur vers une autre--> <!-- le padding est le rembourrage dans l'\u00e9l\u00e9ment m\u00e8re--> <!-- le rayon du coin de la pordure est de 10px--> < p style = \"background: linear-gradient(to right,#ffbe02a1 0px,#fd606aba 100%); padding: 10px; border-radius: 10px;\" > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9fauts des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > </ body > </ html > On peut aussi utiliser des balises de commentaires pour isoler une partie du code afin qu'elle ne soit pas lues par le navigateur. Ins\u00e9rer des liens et des images \u00b6 Une page web contient souvent des images. Le code ci-dessous permet d'int\u00e9grer l'image du logo de la nsi du lyc\u00e9e \u00e0 r\u00e9cuperer ici . < img src = \"img/logoNSI.png\" alt = \"le logo de la NSI\" > Si vous souhaitez ins\u00e9rer un lien vers un autre site sur un mot, une image, ... il faudra alors int\u00e9grer l'instruction suivante \u00e0 votre code: < a href = \"https://lyceedebaudre.net/\" > Le lyc\u00e9e </ a > Le lien se trouve sur la phrase le lyc\u00e9e : en cliquant dessus vous \u00eates dirig\u00e9 vers le site dont l' URL est pass\u00e9 en param\u00e8tre. \u00c0 faire: ins\u00e9rer une image et un lien vers un autre site Cr\u00e9er un dossier img situ\u00e9 au m\u00eame niveau d'arborescence que votre fichier index.html et placez-y l'image du logo. Ins\u00e9rer l'image dans votre code et visualisez que tout fonctionne bien dans le navigateur. Le chemin de la source est-il absolu? relatif? Ins\u00e9rer un lien vers ce site dans votre code o\u00f9 vous le souhaitez ! Vous voulez en savoir davantage? Aucun soucis, cliquez ici \u00c0 faire: \u00c0 quoi sert la balise map ? Un tableau? \u00b6 Vous coulez ins\u00e9rer un tableau \u00e0 votre code? Rien de plus simple (ou presque...). \u00c0 faire: un simple tableau! Ins\u00e9rer ce code au v\u00f4tre < table > < tr > < th > Company </ th > < th > Contact </ th > < th > Country </ th > </ tr > < tr > < td > Alfreds Futterkiste </ td > < td > Maria Anders </ td > < td > Germany </ td > </ tr > < tr > < td > Centro comercial Moctezuma </ td > < td > Francisco Chang </ td > < td > Mexico </ td > </ tr > < tr > < td > Ernst Handel </ td > < td > Roland Mendel </ td > < td > Austria </ td > </ tr > < tr > < td > Island Trading </ td > < td > Helen Bennett </ td > < td > UK </ td > </ tr > < tr > < td > Laughing Bacchus Winecellars </ td > < td > Yoshi Tannamuri </ td > < td > Canada </ td > </ tr > < tr > < td > Magazzini Alimentari Riuniti </ td > < td > Giovanni Rovelli </ td > < td > Italy </ td > </ tr > </ table > Vous souhaitez le rendre plus joli encore? Ins\u00e9rer les styles suivants aux balises concern\u00e9es... < table style = \"font-family: arial, sans-serif; border-collapse: collapse; width: 100%;\" > < tr style = \"border: 1px solid #d80d0d; text-align: left; padding: 8px; \" > Remarquez comment il est p\u00e9nible d'ajouter les attributs de style \u00e0 toutes les balises concern\u00e9es. Le paragraphe suivant permet de contourner ce probl\u00e8me! Styl\u00e9e la balise!! \u00b6 D\u00e9finir le style de chaque balise peut s'av\u00e9rer fastidieux. Dans le tableau pr\u00e9c\u00e9dent il a fallu compl\u00e9ter toutes les balises <tr> , une par une... ce qui n'est pas tr\u00e8s productif. Il existe une balise qui permet de rassembler tous les styles. \u00c0 retenir! La balise <style> dans l'ent\u00eate du fichier recense l'ensemble des styles impos\u00e9s sur les diff\u00e9rentes balises. Ainsi tous les styles sont-ils d\u00e9finis au d\u00e9part: le code s'en trouve largement simplifi\u00e9... \u00c0 faire: regrouper les styles Recopier le code suivant entre les balises head et supprimer les tyles dans les balises. <!DOCTYPE html> < html > < head > < title > Le titre de ma premi\u00e8re page </ title > < style > body { background-color : powderblue ;} h1 , h2 { color : Tomato ; font-size : 300 % ; text-align : center ;} p { background : linear-gradient ( to right , #ffbe02 a1 0 px , #fd606a ba 100 % ); padding : 10 px ; border-radius : 10 px ; } table { font-family : arial , sans-serif ; border-collapse : collapse ; width : 100 % ;} tr { border : 1 px solid #d80d0d ; text-align : left ; padding : 8 px ;} </ style > </ head > < body > < h1 > Cool! mon premier titre </ h1 > < p > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9fauts des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > < h2 > C'est mon deuxi\u00e8me titre </ h2 > ... ... Seul probl\u00e8me: les m\u00eames \u00e9l\u00e9ments ont le m\u00eame style! Mais on peut contourner le probl\u00e8me en taggant certaines balises... Les identifiants n'ont pas la classe! \u00b6 Comment faire si on veut distinguer le style de deux paragraphes par exemple? Le regroupement des styles entre les balises du m\u00eame nom ne permet plus de personnaliser ces affichages. Pas de panique! Tout est pr\u00e9vu, il suffit de tagger les balises par des classes( class ) ou des idendificateurs ( id ). Imaginons que nous souhaitions que les paragraphes d\u00e9finis pas le code pr\u00e9c\u00e9dent n'aient pas les m\u00eames couleurs. On va alors: tagger chaque balise <p> par une classe d\u00e9finir le style de la classe \u00e0 l'int\u00e9rieur de la balise <style> Le code suivant devient alors... <!DOCTYPE html> < html > < head > < title > Le titre de ma premi\u00e8re page </ title > < style > body { background-color : powderblue ;} h1 , h2 { color : Tomato ; font-size : 300 % ; text-align : center ;} p { padding : 10 px ; border-radius : 10 px ; } <! -- premiere classe -- > . choix1 { background : linear-gradient ( to right , #ffbe02 a1 0 px , #fd606a ba 100 % ); } <! -- deuxieme classe : inversion du sens de degrade -- > . choix2 { background : linear-gradient ( to left , #ffbe02 a1 0 px , #fd606a ba 100 % ); } table { font-family : arial , sans-serif ; border-collapse : collapse ; width : 100 % ;} tr { border : 1 px solid #d80d0d ; text-align : left ; padding : 8 px ; background-color : #dddddd ;} </ style > </ head > < body > < h1 > Cool! mon premier titre </ h1 > <!--tag du premier paragraphe--> < p class = \"choix1\" > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9fauts des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > < h2 > C'est mon deuxi\u00e8me titre </ h2 > <!-- tag du deuxi\u00e8me paragraphe --> < p class = \"choix2\" > Remarquez que le titre H2 est plus petit que celui de H1 </ p > < table > < tr > < th > Company </ th > < th > Contact </ th > < th > Country </ th > </ tr > < tr > < td > Alfreds Futterkiste </ td > < td > Maria Anders </ td > < td > Germany </ td > </ tr > < tr > < td > Centro comercial Moctezuma </ td > < td > Francisco Chang </ td > < td > Mexico </ td > </ tr > < tr > < td > Ernst Handel </ td > < td > Roland Mendel </ td > < td > Austria </ td > </ tr > < tr > < td > Island Trading </ td > < td > Helen Bennett </ td > < td > UK </ td > </ tr > < tr > < td > Laughing Bacchus Winecellars </ td > < td > Yoshi Tannamuri </ td > < td > Canada </ td > </ tr > < tr > < td > Magazzini Alimentari Riuniti </ td > < td > Giovanni Rovelli </ td > < td > Italy </ td > </ tr > </ table > </ body > </ html > Ainsi, les paragraphes ont-ils: un style commun( padding et border-radius ) un style diff\u00e9rent (le sens du d\u00e9grad\u00e9) \u00c0 faire: cr\u00e9er des classes On peut ajouter un background-color aux balises <tr> . Je voudrais que les lignes de rang pair est une couleur d'arri\u00e8re plan de #777777 et celles de rang impair une couleur #dddddd . Pour cela: Cr\u00e9er deux classes bg1 et bg2 dans les balises <style> tagger les balises <tr> pour r\u00e9pondre \u00e0 ma volont\u00e9 Les classes ont une autre fonction: celle de pouvoir identifier des \u00e9l\u00e9ments et d'agir sur eux (vois cours sur le CSS et JS). On peut aussi utiliser un identifiant ( id ) pour d\u00e9signer un et un seul \u00e9l\u00e9ment(une balise quoi..) dans le DOM (Document Objet Model). C'est la diff\u00e9rence entre les deux tags : \u00c0 retenir! Les class permettent d'identifier plusieurs \u00e9l\u00e9ments mais l' id seulement un! Alors que les noms de classes se d\u00e9clarent dans les balises <style> avec des .nom_de_la_classe , les identifiants sont d\u00e9finis aux m\u00eames endroits par #nom_du_id . \u00c0 faire: cr\u00e9er un identifiant On va tagger la balise <h2> par un idendifiant. Pour cela suivre les instructions suivantes: Ajouter entre les balises <style> : #montitre { background-color: lightblue; color: black; padding: 40px; text-align: center; } Ajouter \u00e0 la balise <h2> l'identifiant id = \"montitre\" : < h2 id = \"montitre\" > Proposez une nouvelle couleur pour cet identifiant. C'est cool, non? En mode professionnel! \u00b6 Jusqu'\u00e0 pr\u00e9sent, les styles de toutes les balises sont regroup\u00e9s entre les balises \u00e9ponymes. En programmation comme en langage de description, on pr\u00e9f\u00e8re s\u00e9parer le contenu(le fond!) de son apparence(la forme!). Aussi va t-on cr\u00e9er un fichier particulier, appel\u00e9 feuille de style qui permettra de formater le contenu html. Ce fichier porte l'extension .css et regroupe tous les styles. \u00c0 faire: cr\u00e9er une feuille de style Suivez les instrutions suivantes: Cr\u00e9er au m\u00eame niveau d'arborescence que le fichier index.html le dossier CSS \u00e0 c\u00f4t\u00e9 de clui des images img . Ouvrez le blocnote et cr\u00e9ez un nouveau fichier. Copier dans ce dernier fichier, l'ensemble des styles entre les balises <style> (sans les balises) et supprimer ce contenu du fichier html (y compris les balises <style> et <\\style> ) Sauvegarder le fichier sous le nom monstyle.css dans le dossier CSS en s\u00e9lectionnant Tous les fichiers \u00e0 l'endroit indiqu\u00e9... F\u00e9licitations! Vous venez de cr\u00e9er votre premi\u00e8re feuille de style! Maintenant il faut indiquer au document index.html o\u00f9 se trouve la feuille de style charg\u00e9e de le formater: c'est ce que nous appelons attacher la feuille de style ! \u00c0 faire: attacher une feuille de style Suivez les instrutions suivantes: Ajouter la balise <link rel=\"stylesheet\" href=\"CSS/monstyle.css\"> entre les balises <head> dans le fichier index.html . Enregistrez et v\u00e9rifier que le chemin relatif ci-dessus est correct avant d'appeler votre professeur! Des trucs originaux maintenant! \u00b6 Quelques manipulations suppl\u00e9mentaires qui vous donneront une petite id\u00e9e des possibilit\u00e9s offertes par le HTML, le CSS ou le Javascript... On peut par ce biais ins\u00e9rer des cartes OSM m\u00eame si des probl\u00e8mes de s\u00e9curit\u00e9 peuvent surgir... Du code pour dynamiser tout cela... \u00b6 Le code HTML format\u00e9 par le CSS est statique : il n'y a pas d'\u00e9v\u00e9nements qui surviennent quelque soit l'action de l'utilisateur. On donne ici du code javascript qui va donner du dynamisme \u00e0 notre code. Il s'agit ici d'exemples et nous aurons bient\u00f4t l'occasion d'\u00e9tudier plus pr\u00e9cis\u00e9ment ce langage de programmation! \u00c0 faire: insertion de code javascript Ins\u00e9rer le code suivant en dessous du premier titre <h1> . Enregistrez puis cliquez sur le bouton: la date du jour doit appara\u00eetre. < button type = \"button\" onclick = \"document.getElementById('tag_para').innerHTML = Date()\" > Tu veux conna\u00eetre l'heure? </ button > < p id = \"tag_para\" ></ p > \u00c0 quoi sert la m\u00e9thode getElementById Ins\u00e9rer une vid\u00e9o ou de l'audio \u00b6 Beaucoup de sites proposent des vid\u00e9os \u00e0 lire sur leur page d'accueil. \u00c0 nous! \u00c0 faire: insertion de vid\u00e9o R\u00e9cup\u00e9rer la vid\u00e9o ici Cr\u00e9er un dossier video(sans accent \ud83d\ude09 ) \u00e0 un endroit judicieux... Ins\u00e9rer la balise: < video width = \"400\" controls > < source src = \"video/fleur.mp4\" type = \"video/mp4\" > Your browser does not support HTML video. </ video > T'es o\u00f9? \u00b6 La g\u00e9olocalisation est devenue une habitude pour les sites commarciaux. Int\u00e9gr\u00e9e au code HTML par des scripts javascript , le principe est simple. \u00c0 faire: insertion de g\u00e9olocalisation Ins\u00e9rer la balise dans le corps du document HTML: < p > Obtenir sa position par sa latitude et longitude </ p > < button onclick = \"getLocation()\" > Geolocalisez-moi! </ button > < p id = \"test\" ></ p > Ins\u00e9rer les balises suivantes dans les balises d'ent\u00eate <head> : < script > var x = document . getElementById ( \"test\" ); function getLocation () { if ( navigator . geolocation ) { navigator . geolocation . getCurrentPosition ( showPosition ); } else { x . innerHTML = \"Geolocation is not supported by this browser.\" ; } } function showPosition ( position ) { x . innerHTML = \"Latitude: \" + position . coords . latitude + \"<br>Longitude: \" + position . coords . longitude ; } </ script > Prenons de l'altitude: \u00b6 La g\u00e9olocalisation vous permet de vous situer sur une carte. Je vous propose ici une application amusante de ces derni\u00e8res techniques. Nous utilisons des cartes gratuites open source leaflet . \u00c0 faire: r\u00e9cup\u00e9rer du code T\u00e9l\u00e9charger le fichier index_is.html \u00e0 cet endroit . Ouvrez-le en lecture puis en \u00e9criture en essayant d'analyser le code utilis\u00e9. Cherchez son style! \u00b6 Les feuilles de style fa\u00e7onnent votre site web. Vous trouverez de nombreux exemples sur le WEB. Vous trouverez ici les types d\u00e9velopp\u00e9s par le W3C. \u00c0 faire: r\u00e9cup\u00e9rer du code et le personnaliser R\u00e9cup\u00e9rer le code du template Portfolio Template du site pr\u00e9c\u00e9dent. Modifier le code pour faire quelque chose qui vous ressemble.", "title": "D\u00e9veloppement Web"}, {"location": "prem/frontend.html#le-web", "text": "", "title": "Le WEB"}, {"location": "prem/frontend.html#quezaco", "text": "Le WEB ou plus pr\u00e9cis\u00e9ment le WorldWideWeb est un syst\u00e8me hypertexte public fonctionnant sur l' internet . Il permet de consulter, avec un navigateur, des pages accessibles sur des sites. En 1989, Tim Berners-Lee engag\u00e9 au CERN de Gen\u00e8ve, propose de d\u00e9velopper un syst\u00e8me organis\u00e9 en toile, afin d'am\u00e9liorer la diffusion des informations internes. En 1990, na\u00eet alors le premier serveur WEB: la premi\u00e8re page existe toujours et vous pouvez la consulter ici .", "title": "Qu\u00e9zaco???"}, {"location": "prem/frontend.html#le-premier-langage-du-web-le-html", "text": "Le premier langage utilis\u00e9 pour d\u00e9crire le contenu d'une page web est le langage HTML(HyperTextMarkupLanguage). Ce n'est donc pas un langage de programmation mais un langage de description comme Latex par exemple... Il repose sur des balises et leurs attributs qui d\u00e9crivent un contenu: titre, paragraphe, ent\u00eate, images, liens,.... Ci-dessous un exemple relativement simple d'une page web: Un exemple tr\u00e8s simple de page web <!DOCTYPE html> < html > < head > < title > Le titre de ma premi\u00e8re page </ title > </ head > < body > < h1 > Cool! mon premier titre </ h1 > < p > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9faut des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > </ body > </ html >", "title": "Le premier langage du WEB: le HTML"}, {"location": "prem/frontend.html#lire-ou-ecrire-il-faut-savoir", "text": "On \u00e9crit du code HTML dans un \u00e9diteur ( NotePad, visualCode, blocnote,...) et on le lit avec un navigateur . La manipulation habituelle est celle d\u00e9crite dans l'exercice suivant: \u00c0 faire: \u00e9diter du code et le lire Choisir un \u00e9diteur de texte (Notepad ou Visual Studio Code est id\u00e9al... mais le blocnote suffirait!) Recopier le code HTML pr\u00e9c\u00e9dent et sauvegardez ce fichier sous le nom index avec l' extension HTML . En g\u00e9n\u00e9ral, les logiciels d'\u00e9dition utilis\u00e9s permettent de le faire assez facilement... Vous venez alors de cr\u00e9er le fichier index.html qui s'ouvre par d\u00e9faut avec un navigateur. Double-cliquez sur ce fichier: un navigateur doit s'ouvrir et afficher le contenu de la page web. En observant le site sur le navigateur, \u00e0 quoi sert la balise br ? Fermez ensuite le logiciel que vous avez utilis\u00e9 pour \u00e9diter le code HTML. Il arrive fr\u00e9quemment de modifier un code existant. Par exemple, comment ajouter des \u00e9lements au fichier index.html ? Comment \u00e9crire sur ce doument? C'est simple; faites un clic-droit et le menu contextuel qui s'ouvre vous permet de choisir ouvrir avec ... , le logiciel d'\u00e9dition. Je vous rappelle que par d\u00e9faut, un fichier html s'ouvre en lecture avec un navigateur... \u00c0 faire: modifier du code HTML Ajouter le code HTML suivant au fichier pr\u00e9c\u00e9dent entre les balises fermantes <\\p> et <\\body> . < h2 > C'est mon deuxi\u00e8me titre </ h2 > < p > Remarquez que le titre H2 est plus petit que celui de H1 </ p > Lire le nouveau document pour observer les changements effectu\u00e9s. Pour actualiser une page dans un navigateur, il suffit d'appuyer sur la touche F5 .", "title": "Lire ou \u00e9crire? Il faut savoir!"}, {"location": "prem/frontend.html#la-w3c-schools", "text": "Le W3C est un consortium charg\u00e9e de d\u00e9velopper et maintenir les standards du WEB que sont les langages HTML,CSS,PHP, ... mais aussi le format d'image png (Portable Network Graphics) id\u00e9al pour les pages WEB. Il offre aussi la possibilit\u00e9 de valider votre code en vous indiquant si vous avez respect\u00e9 les normes en vigueur. Ce consortium propose une \u00e9cole d'apprentissage du code HTML et d'autres... c'est la W3schools! Vous trouverez le lien ici . Les exercices qui suivent ont \u00e9t\u00e9 inspir\u00e9s par les exemples propos\u00e9s dans cette \u00e9cole.", "title": "La W3C schools"}, {"location": "prem/frontend.html#apprentissage-du-html", "text": "Cette partie s'int\u00e9resse \u00e0 la partie codage et vous donne au fur et \u00e0 mesure de nouvelles fonctionnalit\u00e9s. Il faut donc \u00e0 chaque \u00e9tape modifier ou compl\u00e9ter son code HTML dans un logiciel d'\u00e9dition et visualiser dans un navigateur, le r\u00e9sultat de vos modifications. N'oubliez pas d': enregistrer votre fichier modifi\u00e9 (touches ctrl + S ) actualiser votre page dans le navigateur (touche F5 ) On utilisera comme point de d\u00e9part, le code de la page web donn\u00e9 dans la partie pr\u00e9c\u00e9dente: Code simple que nous allons compl\u00e9ter <!DOCTYPE html> < html > < head > < title > Le titre de ma premi\u00e8re page </ title > </ head > < body > < h1 > Cool! mon premier titre </ h1 > < p > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9faut des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > < h2 > C'est mon deuxi\u00e8me titre </ h2 > < p > Remarquez que le titre H2 est plus petit que celui de H1 </ p > </ body > </ html >", "title": "Apprentissage du HTML"}, {"location": "prem/frontend.html#des-attributs-pour-formater-a-volonte", "text": "Toutes les balises ont par d\u00e9faut , des attributs de couleur, de grosseur, de positionnement qui peuvent \u00eatre modifi\u00e9s. Quelques exemples sont propos\u00e9s ici. \u00c0 faire: ajouter des attributs aux balises Modifier la balise body comme ceci: < body style = \"background-color:powderblue;\" > Modifier la balise H1 : < h1 style = \"color:Tomato; font-size:300%;text-align:center;\" > Modifier la balise H2 afin qu'elle soit aussi align\u00e9e au centre avec la couleur MediumSeaGreen . Enfin faites en sorte que les paragraphes soient centr\u00e9s avec un fond de couleur que vous pouvez choisir parmi les possibilit\u00e9s offertes ici \u00c0 retenir! Tous les \u00e9l\u00e9ments HTML ont un style que vous pouvez d\u00e9finir ou red\u00e9finir \u00e0 souhait... Certains sont simples d'autres plus avanc\u00e9s. \u00c0 faire: un style balaise! Essayez ce style sur les balise p: < p style = \"background: linear-gradient(to right,#ffbe02a1 0px,#fd606aba 100%); padding: 10px; border-radius: 10px;\" > C'est joli, non?", "title": "Des attributs pour formater \u00e0 volont\u00e9..."}, {"location": "prem/frontend.html#des-commentaires-pour-comprendre", "text": "Dans tout langage informatique, on peut (doit?) ajouter des commentaires qui permettent d'amener quelques explications aux choix effectu\u00e9s: ces lignes ne sont pas interpr\u00e9t\u00e9es par le navigateur. Code simple que nous allons ccommenter <!DOCTYPE html> < html > < head > <!-- Les commentaires sont int\u00e9gr\u00e9s au code par ces balises--> < title > Le titre de ma premi\u00e8re page </ title > </ head > < body > < h1 > Cool! mon premier titre </ h1 > <!-- bg en degrad\u00e9 vers la droite d'une couleur vers une autre--> <!-- le padding est le rembourrage dans l'\u00e9l\u00e9ment m\u00e8re--> <!-- le rayon du coin de la pordure est de 10px--> < p style = \"background: linear-gradient(to right,#ffbe02a1 0px,#fd606aba 100%); padding: 10px; border-radius: 10px;\" > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9fauts des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > </ body > </ html > On peut aussi utiliser des balises de commentaires pour isoler une partie du code afin qu'elle ne soit pas lues par le navigateur.", "title": "Des commentaires pour comprendre"}, {"location": "prem/frontend.html#inserer-des-liens-et-des-images", "text": "Une page web contient souvent des images. Le code ci-dessous permet d'int\u00e9grer l'image du logo de la nsi du lyc\u00e9e \u00e0 r\u00e9cuperer ici . < img src = \"img/logoNSI.png\" alt = \"le logo de la NSI\" > Si vous souhaitez ins\u00e9rer un lien vers un autre site sur un mot, une image, ... il faudra alors int\u00e9grer l'instruction suivante \u00e0 votre code: < a href = \"https://lyceedebaudre.net/\" > Le lyc\u00e9e </ a > Le lien se trouve sur la phrase le lyc\u00e9e : en cliquant dessus vous \u00eates dirig\u00e9 vers le site dont l' URL est pass\u00e9 en param\u00e8tre. \u00c0 faire: ins\u00e9rer une image et un lien vers un autre site Cr\u00e9er un dossier img situ\u00e9 au m\u00eame niveau d'arborescence que votre fichier index.html et placez-y l'image du logo. Ins\u00e9rer l'image dans votre code et visualisez que tout fonctionne bien dans le navigateur. Le chemin de la source est-il absolu? relatif? Ins\u00e9rer un lien vers ce site dans votre code o\u00f9 vous le souhaitez ! Vous voulez en savoir davantage? Aucun soucis, cliquez ici \u00c0 faire: \u00c0 quoi sert la balise map ?", "title": "Ins\u00e9rer des liens et des images"}, {"location": "prem/frontend.html#un-tableau", "text": "Vous coulez ins\u00e9rer un tableau \u00e0 votre code? Rien de plus simple (ou presque...). \u00c0 faire: un simple tableau! Ins\u00e9rer ce code au v\u00f4tre < table > < tr > < th > Company </ th > < th > Contact </ th > < th > Country </ th > </ tr > < tr > < td > Alfreds Futterkiste </ td > < td > Maria Anders </ td > < td > Germany </ td > </ tr > < tr > < td > Centro comercial Moctezuma </ td > < td > Francisco Chang </ td > < td > Mexico </ td > </ tr > < tr > < td > Ernst Handel </ td > < td > Roland Mendel </ td > < td > Austria </ td > </ tr > < tr > < td > Island Trading </ td > < td > Helen Bennett </ td > < td > UK </ td > </ tr > < tr > < td > Laughing Bacchus Winecellars </ td > < td > Yoshi Tannamuri </ td > < td > Canada </ td > </ tr > < tr > < td > Magazzini Alimentari Riuniti </ td > < td > Giovanni Rovelli </ td > < td > Italy </ td > </ tr > </ table > Vous souhaitez le rendre plus joli encore? Ins\u00e9rer les styles suivants aux balises concern\u00e9es... < table style = \"font-family: arial, sans-serif; border-collapse: collapse; width: 100%;\" > < tr style = \"border: 1px solid #d80d0d; text-align: left; padding: 8px; \" > Remarquez comment il est p\u00e9nible d'ajouter les attributs de style \u00e0 toutes les balises concern\u00e9es. Le paragraphe suivant permet de contourner ce probl\u00e8me!", "title": "Un tableau?"}, {"location": "prem/frontend.html#stylee-la-balise", "text": "D\u00e9finir le style de chaque balise peut s'av\u00e9rer fastidieux. Dans le tableau pr\u00e9c\u00e9dent il a fallu compl\u00e9ter toutes les balises <tr> , une par une... ce qui n'est pas tr\u00e8s productif. Il existe une balise qui permet de rassembler tous les styles. \u00c0 retenir! La balise <style> dans l'ent\u00eate du fichier recense l'ensemble des styles impos\u00e9s sur les diff\u00e9rentes balises. Ainsi tous les styles sont-ils d\u00e9finis au d\u00e9part: le code s'en trouve largement simplifi\u00e9... \u00c0 faire: regrouper les styles Recopier le code suivant entre les balises head et supprimer les tyles dans les balises. <!DOCTYPE html> < html > < head > < title > Le titre de ma premi\u00e8re page </ title > < style > body { background-color : powderblue ;} h1 , h2 { color : Tomato ; font-size : 300 % ; text-align : center ;} p { background : linear-gradient ( to right , #ffbe02 a1 0 px , #fd606a ba 100 % ); padding : 10 px ; border-radius : 10 px ; } table { font-family : arial , sans-serif ; border-collapse : collapse ; width : 100 % ;} tr { border : 1 px solid #d80d0d ; text-align : left ; padding : 8 px ;} </ style > </ head > < body > < h1 > Cool! mon premier titre </ h1 > < p > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9fauts des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > < h2 > C'est mon deuxi\u00e8me titre </ h2 > ... ... Seul probl\u00e8me: les m\u00eames \u00e9l\u00e9ments ont le m\u00eame style! Mais on peut contourner le probl\u00e8me en taggant certaines balises...", "title": "Styl\u00e9e la balise!!"}, {"location": "prem/frontend.html#les-identifiants-nont-pas-la-classe", "text": "Comment faire si on veut distinguer le style de deux paragraphes par exemple? Le regroupement des styles entre les balises du m\u00eame nom ne permet plus de personnaliser ces affichages. Pas de panique! Tout est pr\u00e9vu, il suffit de tagger les balises par des classes( class ) ou des idendificateurs ( id ). Imaginons que nous souhaitions que les paragraphes d\u00e9finis pas le code pr\u00e9c\u00e9dent n'aient pas les m\u00eames couleurs. On va alors: tagger chaque balise <p> par une classe d\u00e9finir le style de la classe \u00e0 l'int\u00e9rieur de la balise <style> Le code suivant devient alors... <!DOCTYPE html> < html > < head > < title > Le titre de ma premi\u00e8re page </ title > < style > body { background-color : powderblue ;} h1 , h2 { color : Tomato ; font-size : 300 % ; text-align : center ;} p { padding : 10 px ; border-radius : 10 px ; } <! -- premiere classe -- > . choix1 { background : linear-gradient ( to right , #ffbe02 a1 0 px , #fd606a ba 100 % ); } <! -- deuxieme classe : inversion du sens de degrade -- > . choix2 { background : linear-gradient ( to left , #ffbe02 a1 0 px , #fd606a ba 100 % ); } table { font-family : arial , sans-serif ; border-collapse : collapse ; width : 100 % ;} tr { border : 1 px solid #d80d0d ; text-align : left ; padding : 8 px ; background-color : #dddddd ;} </ style > </ head > < body > < h1 > Cool! mon premier titre </ h1 > <!--tag du premier paragraphe--> < p class = \"choix1\" > Il s'agit ici d'un paragraphe( balises p). < br > Il faut savoir que les balises ont par d\u00e9fauts des attributs (qu'on peut changer ensuite...). < br > Par exemple, une balise H1 propose un titre plus grand qu'une balise H2 ou H3.... </ p > < h2 > C'est mon deuxi\u00e8me titre </ h2 > <!-- tag du deuxi\u00e8me paragraphe --> < p class = \"choix2\" > Remarquez que le titre H2 est plus petit que celui de H1 </ p > < table > < tr > < th > Company </ th > < th > Contact </ th > < th > Country </ th > </ tr > < tr > < td > Alfreds Futterkiste </ td > < td > Maria Anders </ td > < td > Germany </ td > </ tr > < tr > < td > Centro comercial Moctezuma </ td > < td > Francisco Chang </ td > < td > Mexico </ td > </ tr > < tr > < td > Ernst Handel </ td > < td > Roland Mendel </ td > < td > Austria </ td > </ tr > < tr > < td > Island Trading </ td > < td > Helen Bennett </ td > < td > UK </ td > </ tr > < tr > < td > Laughing Bacchus Winecellars </ td > < td > Yoshi Tannamuri </ td > < td > Canada </ td > </ tr > < tr > < td > Magazzini Alimentari Riuniti </ td > < td > Giovanni Rovelli </ td > < td > Italy </ td > </ tr > </ table > </ body > </ html > Ainsi, les paragraphes ont-ils: un style commun( padding et border-radius ) un style diff\u00e9rent (le sens du d\u00e9grad\u00e9) \u00c0 faire: cr\u00e9er des classes On peut ajouter un background-color aux balises <tr> . Je voudrais que les lignes de rang pair est une couleur d'arri\u00e8re plan de #777777 et celles de rang impair une couleur #dddddd . Pour cela: Cr\u00e9er deux classes bg1 et bg2 dans les balises <style> tagger les balises <tr> pour r\u00e9pondre \u00e0 ma volont\u00e9 Les classes ont une autre fonction: celle de pouvoir identifier des \u00e9l\u00e9ments et d'agir sur eux (vois cours sur le CSS et JS). On peut aussi utiliser un identifiant ( id ) pour d\u00e9signer un et un seul \u00e9l\u00e9ment(une balise quoi..) dans le DOM (Document Objet Model). C'est la diff\u00e9rence entre les deux tags : \u00c0 retenir! Les class permettent d'identifier plusieurs \u00e9l\u00e9ments mais l' id seulement un! Alors que les noms de classes se d\u00e9clarent dans les balises <style> avec des .nom_de_la_classe , les identifiants sont d\u00e9finis aux m\u00eames endroits par #nom_du_id . \u00c0 faire: cr\u00e9er un identifiant On va tagger la balise <h2> par un idendifiant. Pour cela suivre les instructions suivantes: Ajouter entre les balises <style> : #montitre { background-color: lightblue; color: black; padding: 40px; text-align: center; } Ajouter \u00e0 la balise <h2> l'identifiant id = \"montitre\" : < h2 id = \"montitre\" > Proposez une nouvelle couleur pour cet identifiant. C'est cool, non?", "title": "Les identifiants n'ont pas la classe!"}, {"location": "prem/frontend.html#en-mode-professionnel", "text": "Jusqu'\u00e0 pr\u00e9sent, les styles de toutes les balises sont regroup\u00e9s entre les balises \u00e9ponymes. En programmation comme en langage de description, on pr\u00e9f\u00e8re s\u00e9parer le contenu(le fond!) de son apparence(la forme!). Aussi va t-on cr\u00e9er un fichier particulier, appel\u00e9 feuille de style qui permettra de formater le contenu html. Ce fichier porte l'extension .css et regroupe tous les styles. \u00c0 faire: cr\u00e9er une feuille de style Suivez les instrutions suivantes: Cr\u00e9er au m\u00eame niveau d'arborescence que le fichier index.html le dossier CSS \u00e0 c\u00f4t\u00e9 de clui des images img . Ouvrez le blocnote et cr\u00e9ez un nouveau fichier. Copier dans ce dernier fichier, l'ensemble des styles entre les balises <style> (sans les balises) et supprimer ce contenu du fichier html (y compris les balises <style> et <\\style> ) Sauvegarder le fichier sous le nom monstyle.css dans le dossier CSS en s\u00e9lectionnant Tous les fichiers \u00e0 l'endroit indiqu\u00e9... F\u00e9licitations! Vous venez de cr\u00e9er votre premi\u00e8re feuille de style! Maintenant il faut indiquer au document index.html o\u00f9 se trouve la feuille de style charg\u00e9e de le formater: c'est ce que nous appelons attacher la feuille de style ! \u00c0 faire: attacher une feuille de style Suivez les instrutions suivantes: Ajouter la balise <link rel=\"stylesheet\" href=\"CSS/monstyle.css\"> entre les balises <head> dans le fichier index.html . Enregistrez et v\u00e9rifier que le chemin relatif ci-dessus est correct avant d'appeler votre professeur!", "title": "En mode professionnel!"}, {"location": "prem/frontend.html#des-trucs-originaux-maintenant", "text": "Quelques manipulations suppl\u00e9mentaires qui vous donneront une petite id\u00e9e des possibilit\u00e9s offertes par le HTML, le CSS ou le Javascript... On peut par ce biais ins\u00e9rer des cartes OSM m\u00eame si des probl\u00e8mes de s\u00e9curit\u00e9 peuvent surgir...", "title": "Des trucs originaux maintenant!"}, {"location": "prem/frontend.html#du-code-pour-dynamiser-tout-cela", "text": "Le code HTML format\u00e9 par le CSS est statique : il n'y a pas d'\u00e9v\u00e9nements qui surviennent quelque soit l'action de l'utilisateur. On donne ici du code javascript qui va donner du dynamisme \u00e0 notre code. Il s'agit ici d'exemples et nous aurons bient\u00f4t l'occasion d'\u00e9tudier plus pr\u00e9cis\u00e9ment ce langage de programmation! \u00c0 faire: insertion de code javascript Ins\u00e9rer le code suivant en dessous du premier titre <h1> . Enregistrez puis cliquez sur le bouton: la date du jour doit appara\u00eetre. < button type = \"button\" onclick = \"document.getElementById('tag_para').innerHTML = Date()\" > Tu veux conna\u00eetre l'heure? </ button > < p id = \"tag_para\" ></ p > \u00c0 quoi sert la m\u00e9thode getElementById", "title": "Du code pour dynamiser tout cela..."}, {"location": "prem/frontend.html#inserer-une-video-ou-de-laudio", "text": "Beaucoup de sites proposent des vid\u00e9os \u00e0 lire sur leur page d'accueil. \u00c0 nous! \u00c0 faire: insertion de vid\u00e9o R\u00e9cup\u00e9rer la vid\u00e9o ici Cr\u00e9er un dossier video(sans accent \ud83d\ude09 ) \u00e0 un endroit judicieux... Ins\u00e9rer la balise: < video width = \"400\" controls > < source src = \"video/fleur.mp4\" type = \"video/mp4\" > Your browser does not support HTML video. </ video >", "title": "Ins\u00e9rer une vid\u00e9o ou de l'audio"}, {"location": "prem/frontend.html#tes-ou", "text": "La g\u00e9olocalisation est devenue une habitude pour les sites commarciaux. Int\u00e9gr\u00e9e au code HTML par des scripts javascript , le principe est simple. \u00c0 faire: insertion de g\u00e9olocalisation Ins\u00e9rer la balise dans le corps du document HTML: < p > Obtenir sa position par sa latitude et longitude </ p > < button onclick = \"getLocation()\" > Geolocalisez-moi! </ button > < p id = \"test\" ></ p > Ins\u00e9rer les balises suivantes dans les balises d'ent\u00eate <head> : < script > var x = document . getElementById ( \"test\" ); function getLocation () { if ( navigator . geolocation ) { navigator . geolocation . getCurrentPosition ( showPosition ); } else { x . innerHTML = \"Geolocation is not supported by this browser.\" ; } } function showPosition ( position ) { x . innerHTML = \"Latitude: \" + position . coords . latitude + \"<br>Longitude: \" + position . coords . longitude ; } </ script >", "title": "T'es o\u00f9?"}, {"location": "prem/frontend.html#prenons-de-laltitude", "text": "La g\u00e9olocalisation vous permet de vous situer sur une carte. Je vous propose ici une application amusante de ces derni\u00e8res techniques. Nous utilisons des cartes gratuites open source leaflet . \u00c0 faire: r\u00e9cup\u00e9rer du code T\u00e9l\u00e9charger le fichier index_is.html \u00e0 cet endroit . Ouvrez-le en lecture puis en \u00e9criture en essayant d'analyser le code utilis\u00e9.", "title": "Prenons de l'altitude:"}, {"location": "prem/frontend.html#cherchez-son-style", "text": "Les feuilles de style fa\u00e7onnent votre site web. Vous trouverez de nombreux exemples sur le WEB. Vous trouverez ici les types d\u00e9velopp\u00e9s par le W3C. \u00c0 faire: r\u00e9cup\u00e9rer du code et le personnaliser R\u00e9cup\u00e9rer le code du template Portfolio Template du site pr\u00e9c\u00e9dent. Modifier le code pour faire quelque chose qui vous ressemble.", "title": "Cherchez son style!"}, {"location": "prem/images_numeriques.html", "text": "Travail sur les images num\u00e9riques \u00b6 Gen\u00e8se \u00b6 Les images num\u00e9riques sont comme toutes donn\u00e9es informatiques, des objets d\u00e9finis selon une certaine norme. Par exemple, les images au format png (portable network graphic) sont d\u00e9finis par : leur signature: 8 octets le chunk IHDR pour l'en-t\u00eate : 25 octets le chunk IDAT pour les donn\u00e9es : poids variable selon l'image le chunk IEND pour la fin du fichier : 12 octets Donc une image dans ce format p\u00e8se au moins 45 octets... Le chunk IHDR donne entre autres les informations sur la largeur, la hauteur de l'image. Nous y reviendrons plus tard en diss\u00e9quant une image pour explorer ses entrailles ... Rappelons que l'extension du fichier pr\u00e9cise notamment sa nature. Le cas du format .png est important: standard d\u00e9velopp\u00e9 par le W3C( comme Html, Css ou Javascript...), il est particuli\u00e8rement adapt\u00e9 pour publier des images sur des sites internet. Il trouve ses origines dans la volont\u00e9 de concurrencer le fichier compress\u00e9 .gif , dont le propri\u00e9taire r\u00e9clamait les droits d'utilisations. le format jpeg Attention! les fichiers .jpeg ne sont pas \u00e0 proprement dit des fichiers images mais des fichiers compress\u00e9s d'une image. Souvent, on commet une confusion, pas bien grave au final! Une image Portable Network Graphics (PNG) est un format ouvert, on peut donc explorer son contenu! \u00c0 faire R\u00e9cup\u00e9rer l'image firefox.png ( T\u00e9l\u00e9charger l'image ). Ouvrez l'image avec les routines Python habituelles, en mode lecture binaire et visualisez l'ent\u00eate du fichier(le programme est donn\u00e9 juste apr\u00e8s). D\u00e9terminer le nombre d'octets constituants ce fichier. Le comparer \u00e0 la valeur obtenue par un clic droit sur l'image puis propri\u00e9t\u00e9s. Trouvez d'autres fichiers .png et v\u00e9rifier qu'ils ont tous la m\u00eame signature(ils commencent tous par la m\u00eame s\u00e9rie d'octets qui est leur signature...).Affichez la liste des octets dans votre console.Donnez cette signature. #Rappel sur les ouvertures en lecture ou ecritures de fichiers fichier_src = open ( \"........\" , \"rb\" ) #Completer avec le chemin relatif vers l'image #l'ouverture en mode rb ouvre le fichier en binaire (octet...) listeOctet = [ elt for elt in fichier_src . read ()] print ( len ( listeOctet )) #affiche la longueur de la liste, le nombre d'octets en fait! print ( listeOctet [: 100 ]) # affiche seulement les 100 premiers octets sinon... fichier_src . close () En g\u00e9n\u00e9ral, les images num\u00e9riques sont des images matricielles , par opposition aux images vectorielles d\u00e9finies par des courbes math\u00e9matiques. Les fichiers .svg d\u00e9velopp\u00e9s par le W3C, sont des images vectorielles tr\u00e8s adapt\u00e9es \u00e0 la construction de logo, comme celui de Firefox, d\u00e9composable en \u00e9l\u00e9ments g\u00e9om\u00e9triques. \u00c0 faire Observez le logo Firefox d\u00e9fini sous .svg \u00e0 cette adresse et trouvez sa description .svg (clic droit-> code source de la page). Zoomez(touche Crtl + molette ). Ouvrez le fichier firefox.png dans le navigateur Firefox(cliquez sur le lien pr\u00e9c\u00e9dent...). Zoomez et comparez avec la manipulation pr\u00e9c\u00e9dente. Quelle diff\u00e9rence entre une image matricielle et vectorielle? Image matricielle \u00b6 \u00c0 retenir! Une photo, une image est donc d\u00e9finie g\u00e9n\u00e9ralement par un tableau de valeurs, appel\u00e9e matrice , d\u00e9finissant ainsi le niveau d'intensit\u00e9 de chaque pixel de cette image. On retrouvera en g\u00e9n\u00e9ral: des images en niveaux de gris en mode L : lorsque les couleurs sont cod\u00e9es sur 8 bits, c'est-\u00e0-dire 1 octet, il y a donc 256 niveaux de quantifications possibles allant du 0(noir) au blanc(255). des images couleurs cod\u00e9es en mode RGB pour Red Green Blue: chaque couleur est cod\u00e9e sur 8 bits soit un octet. des images couleurs avec un canal alpha en mode RGBA permettant de contr\u00f4ler la transparence d'une image, notamment lorsque l'on souhaite superposer l'une sur l'autre. Dans une image matricielle contenant des pixels, le premier pixel est celui en haut \u00e0 gauche et le dernier, celui en bas \u00e0 droite. Puis on parcourt une image ligne par ligne, de gauche \u00e0 droite. Ceci est important pour comprendre comment on peut lire ou \u00e9crire sur une image! On entend par: \u00c0 savoir! lire un pixel , donner la valeur de sa couleur qui se pr\u00e9sente sous diff\u00e9rentes formes (entier, triplet ou quadruplet d'entiers) selon le mode de repr\u00e9sentation (L, RBG ou RGBA) \u00e9crire un pixel , d\u00e9finir sa couleur par la donn\u00e9e d'un entier, d'un triplet ou un quadruplet selon le mode de repr\u00e9sentation... \u00c0 faire Dans une image couleur o\u00f9 chaque couleur est cod\u00e9e sur un octet, combien de couleurs diff\u00e9rentes peut-on obtenir? Enfin du Python! \u00b6 Cette section propose de manipuler des images num\u00e9riques \u00e0 l'aide d'un biblioth\u00e8que Python appel\u00e9e PIL . \u00c0 faire Installer la biblioth\u00e8que PILLOW dans Thonny(lors de l'import il faudra l'appeler sous sous ancien nom PIL...). Il s'agit de traduire en Python l'id\u00e9e de: Les routines ! ouvrir un fichier image img sur lequel on travaille; d\u00e9terminer les propri\u00e9t\u00e9s de cette image( mode,size,format ); cr\u00e9er une nouvelle image; lire et \u00e9crire sur une image (attention on lit dans l'une on \u00e9crit dans l'autre!) montrer ou enregistrer l'image obtenue. Pour illustrer les commandes python r\u00e9pondant \u00e0 ces besoins, nous allons utiliser la photo puppy.png ( T\u00e9l\u00e9charger ici ). Attention tous les programmes doivent avoir en en-t\u00eate, l'import des biblioth\u00e8ques: from PIL import Image Ouvrir une image et lire des informations \u00b6 from PIL import Image #Ouverture de l'image existante, le chemin relatif doit \u00eatre donn\u00e9 \u00e0 partir de votre fichier! im = Image . open ( \"Images\\puppy.png\" ) #pour ma part je mets les images dans un dossier Images #On peut conna\u00eetre les informations suivantes print ( im . mode , im . size , im . format ) im . close () L'objet im n'est pas une image mais un objet tampon sur lequel nous travaillerons avant de le fermer. D\u00e9terminer les caract\u00e9ristiques de l'image \u00b6 Une image poss\u00e8de toujours une taille, un format et un mode de repr\u00e9sentation (niveaux de gris, couleurs avec alpha \u00e9ventuel). \u00c0 faire Quelles sont les caract\u00e9ristiques de l'image puppy.png (mode, taille, format)? Cr\u00e9ation d'une nouvelle image \u00b6 from PIL import Image #Ouverture d'une nouvelle image IM = Image . new ( 'L' , ( 750 , 200 )) IM . save ( \"Images\\img_new1.png\" ) #pour cr\u00e9er l'image dans le dossier Images... IM . close () \u00c0 faire Donner le mode et la taille de l'image cr\u00e9\u00e9e pr\u00e9c\u00e9demment Lire la valeur d'intensit\u00e9 d'un pixel \u00b6 from PIL import Image #Ouverture de l'image existante #Le chemin relatif doit \u00eatre donn\u00e9 im = Image . open ( \"Images\\puppy.png\" ) pix = im . getpixel (( 20 , 30 )) print ( pix ) im . close () Attention , la m\u00e9thode getpixel prend en param\u00e8tre un couple correspondant aux coordonn\u00e9es (colonne, ligne) du pixel dans l'image: dans l'exemple, 20 i\u00e8me colonne et 30i\u00e8me ligne(il faut bien s\u00fbr s'assurer que ce pixel existe...) . Donc on ne tape pas im.getpixel(20,30) mais bien im.getpixel((20,30)) \u00c0 faire En s'utilisant le code pr\u00e9c\u00e9dent, donner l'intensit\u00e9 des pixels \\((105,42)\\) de l'image puppy.png . quelles sont les coordonn\u00e9es du dernier pixel de l'image(en bas \u00e0 droite).Donnez son intensit\u00e9 \u00c9crire l'intensit\u00e9 d'un pixel \u00b6 On rappelle qu'on entend par \u00e9crire un pixel, d\u00e9finir sa valeur d'intensit\u00e9! from PIL import Image #Ouverture d'une nouvelle image IM = Image . new ( 'L' , ( 750 , 200 )) IM . putpixel (( 425 , 100 ), 150 ) IM . save ( \"Images\\img_new2.png\" ) IM . close () La m\u00e9thode putpixel s'applique \u00e0 l'objet IM et prend en param\u00e8tres l'endroit o\u00f9 l'on veut \u00e9crire (c,l) (425 et 100 dans notre exemple) et la valeur d'intensit\u00e9 p (150 dans l'exemple). Attention dans le cas d'une image couleur l'intensit\u00e9 est un triplet (r,g,b) voire (r,g,b,a) . Par d\u00e9faut... Lorsque vous cr\u00e9ez une image, tous les pixels sont noirs par d\u00e9faut. Donc \u00e0 0 sur tous les canaux! \u00c0 faire Cr\u00e9ez une image de largeur 500 et de hauteur 100, o\u00f9 tous les pixels de la ligne 50 sont rouges, les autres restant noirs... Cr\u00e9ez une image de largeur 500 et de hauteur 100, o\u00f9 tous les pixels de la colonne 250 sont rouges, les autres restant noirs... Cr\u00e9ez une image de largeur 500 et de hauteur 500, o\u00f9 tous les pixels des diagonales sont rouges, les autres restant noirs... Parcourir une image pixel par pixel \u00b6 Pour parcourir une image pixel par pixel, on va utiliser une double boucle: l'une pour parcourir les lignes, l'autre pour parcourir les colonnes. Algorithme \u00e0 suivre ouvre une image en lecture cr\u00e9e une nouvelle image de caract\u00e9ristiques identiques parcoure et lit la valeur d'intensit\u00e9 de chaque pixel de l'image initiale parcoure et \u00e9cris au m\u00eame endroit sur l'image finale la valeur captur\u00e9e \u00e0 laquelle on ajoute 100 (on travaille modulo 256 pour rester dans la plage \\([0;255]\\) ). on enregistre l'image ainsi cr\u00e9\u00e9e. L'impl\u00e9mentation de l'algorithme pr\u00e9c\u00e9dent donne en Python, le programme suivant: from PIL import Image #Ouverture de l'image #Le chemin relatif doit \u00eatre donn\u00e9 imInit = Image . open ( \"Images\\puppy.png\" ) #Ouverture d'une nouvelle image #M\u00eame mode et taille que l'image d\u00e9j\u00e0 ouverte ImFin = Image . new ( imInit . mode , imInit . size ) #La double boucle permet de parcourir l'image de haut en bas de gauche \u00e0 droite for l in range ( imInit . size [ 1 ]): #l comme ligne for c in range ( imInit . size [ 0 ]): #c comme colone pix = imInit . getpixel (( c , l )) # getpixel capture la valeur de couleur du pixel (x,y) #on fait un get sur im: c'est une lecture! ImFin . putpixel (( c , l ), ( pix + 100 ) % 256 ) #putpixel colore le pixel (x,y) de l'image IM avec la valeur de (pix + 100)%256 #on fait donc une \u00e9criture sur Im. ImFin . show () ImFin . save ( \"Images\\ImageTranslate100.png\" ) imInit . close () ImFin . close () Quelques informations sur le programme pr\u00e9c\u00e9dent: imInit est un objet tampon de l'image initiale; imInit.size renvoie donc la taille de l'image de d\u00e9part sous le forme d'un tuple imInit.size[0] est donc le premier \u00e9l\u00e9ment de imInit.size , soit la largeur de l'image. Et imInit.size[1] donne donc la hauteur. Et imInit.size[2] n'existe pas ! Donc l'instruction ImFin = Image.new(imInit.mode, imInit.size) construit une nouvelle image de m\u00eame mode et taille que celle qui a \u00e9t\u00e9 ouverte. c est la variable qui prend ses valeurs de 0 \u00e0 imInit.size[0] - 1 correspondant au num\u00e9ro de chaque colonne de l'image l est la variable qui prend ses valeurs de 0 \u00e0 imInit.size[1] - 1 correspondant au num\u00e9ro de chaque ligne de l'image \u00c0 faire Construire de la m\u00eame fa\u00e7on les images translat\u00e9es de 10 pixels et de 255 pixels. Pensez \u00e0 changer le nom de sauvegarde sinon vous \u00e9craserez les fichiers pr\u00e9c\u00e9demment construits. Le coin des exercices \u00b6 En n'utilisant que les routines pr\u00e9c\u00e9dentes (il y a des m\u00e9thodes de la biblioth\u00e8que Pil qui permettent de r\u00e9aliser directement les transformations demand\u00e9es...), r\u00e9alisez les exercices suivants. \u00c0 faire Cr\u00e9er une image en niveaux de gris de dimension 500 sur 100 pixels o\u00f9 chaque pixel a une intensit\u00e9 \u00e9gale \u00e0 un nombre al\u00e9atoire entre 0 et 255. On sauvegardera sous le nom hasard.png cette image. Cr\u00e9er une image en couleur de dimension 500 sur 100 pixels o\u00f9 chaque pixel a une intensit\u00e9 de rouge, de vert et de bleu est \u00e9gale \u00e0 un nombre al\u00e9atoire entre 0 et 255. On sauvegardera cette image sous le nom hasardcouleur.png . \u00c0 faire Cr\u00e9er l'image puppynegative.png obtenu \u00e0 partir de l'image puppy.png en transformant le pixel p en le pixel 255 - p . \u00c0 faire Cr\u00e9er une image de dimension 600(width) sur 400(height) pixels qui est le drapeau fran\u00e7ais. On sauvegardera cette image sous le nom drapeau.png . \u00c0 faire Cr\u00e9er une image en niveaux de gris de dimension 500 sur 100 pixels o\u00f9 chaque pixel de ligne de rang pair est blanc et les autres noir. On sauvegardera cette image sous le nom ligneblanche.png . \u00c0 faire L'image Firefox.png est une image couleur qui est donc la superposition de trois images: l'une contient les composantes de rouge, l'autre de vert et la derni\u00e8re de bleu. Construire ces trois images que vous sauvegarderez sous le nom filtreRougeFirefox.png ,.... \u00c0 faire Construire l'image obtenue par une sym\u00e9trie verticale. On sauvegardera l'image sous le nom puppyV.png . Construire l'image obtenue par une sym\u00e9trie horizontale.On sauvegardera l'image sous le nom puppyH.png . \u00c0 faire Effet de seuillage : L'id\u00e9e est d'effectuer un seuillage sur l'image en construisant une nouvelle image selon le principe suivant: tous les pixels dont l'intensit\u00e9 est inf\u00e9rieure ou \u00e9gal \u00e0 127 sont transform\u00e9s en pixel d'intensit\u00e9 0 et ceux d'intensit\u00e9 strictement sup\u00e9rieur \u00e0 127 transform\u00e9s en pixel d'intensit\u00e9 1. On sauvegardera l'image sous le nom puppySeuil127.png . \u00c0 faire M\u00eame exercice que pr\u00e9c\u00e9demment mais le choix du seuil \\(s\\) est fait par l'utilisateur. On sauvegardera l'image sous le nom puppySeuilS.png . \u00c0 faire M\u00eame exercice que pr\u00e9c\u00e9demment mais n (un entier compris entre 2 et 25) seuils seront cr\u00e9\u00e9s. On sauvegardera l'image sous le nom puppyQuantificationN.png . \u00c0 faire \u00c0 l'aide la biblioth\u00e8que matplotlib que vous connaissez d\u00e9j\u00e0, construire l'histogramme des intensit\u00e9s de niveaux de gris de l'image puppy.png : en abscisse, on trouve une intensit\u00e9 \\(i\\) de 0 \u00e0 255 et en ordonn\u00e9e le nombre de pixels d'intensit\u00e9 \\(i\\) dans l'image.", "title": "Travail sur les images num\u00e9riques"}, {"location": "prem/images_numeriques.html#travail-sur-les-images-numeriques", "text": "", "title": "Travail sur les images num\u00e9riques"}, {"location": "prem/images_numeriques.html#genese", "text": "Les images num\u00e9riques sont comme toutes donn\u00e9es informatiques, des objets d\u00e9finis selon une certaine norme. Par exemple, les images au format png (portable network graphic) sont d\u00e9finis par : leur signature: 8 octets le chunk IHDR pour l'en-t\u00eate : 25 octets le chunk IDAT pour les donn\u00e9es : poids variable selon l'image le chunk IEND pour la fin du fichier : 12 octets Donc une image dans ce format p\u00e8se au moins 45 octets... Le chunk IHDR donne entre autres les informations sur la largeur, la hauteur de l'image. Nous y reviendrons plus tard en diss\u00e9quant une image pour explorer ses entrailles ... Rappelons que l'extension du fichier pr\u00e9cise notamment sa nature. Le cas du format .png est important: standard d\u00e9velopp\u00e9 par le W3C( comme Html, Css ou Javascript...), il est particuli\u00e8rement adapt\u00e9 pour publier des images sur des sites internet. Il trouve ses origines dans la volont\u00e9 de concurrencer le fichier compress\u00e9 .gif , dont le propri\u00e9taire r\u00e9clamait les droits d'utilisations. le format jpeg Attention! les fichiers .jpeg ne sont pas \u00e0 proprement dit des fichiers images mais des fichiers compress\u00e9s d'une image. Souvent, on commet une confusion, pas bien grave au final! Une image Portable Network Graphics (PNG) est un format ouvert, on peut donc explorer son contenu! \u00c0 faire R\u00e9cup\u00e9rer l'image firefox.png ( T\u00e9l\u00e9charger l'image ). Ouvrez l'image avec les routines Python habituelles, en mode lecture binaire et visualisez l'ent\u00eate du fichier(le programme est donn\u00e9 juste apr\u00e8s). D\u00e9terminer le nombre d'octets constituants ce fichier. Le comparer \u00e0 la valeur obtenue par un clic droit sur l'image puis propri\u00e9t\u00e9s. Trouvez d'autres fichiers .png et v\u00e9rifier qu'ils ont tous la m\u00eame signature(ils commencent tous par la m\u00eame s\u00e9rie d'octets qui est leur signature...).Affichez la liste des octets dans votre console.Donnez cette signature. #Rappel sur les ouvertures en lecture ou ecritures de fichiers fichier_src = open ( \"........\" , \"rb\" ) #Completer avec le chemin relatif vers l'image #l'ouverture en mode rb ouvre le fichier en binaire (octet...) listeOctet = [ elt for elt in fichier_src . read ()] print ( len ( listeOctet )) #affiche la longueur de la liste, le nombre d'octets en fait! print ( listeOctet [: 100 ]) # affiche seulement les 100 premiers octets sinon... fichier_src . close () En g\u00e9n\u00e9ral, les images num\u00e9riques sont des images matricielles , par opposition aux images vectorielles d\u00e9finies par des courbes math\u00e9matiques. Les fichiers .svg d\u00e9velopp\u00e9s par le W3C, sont des images vectorielles tr\u00e8s adapt\u00e9es \u00e0 la construction de logo, comme celui de Firefox, d\u00e9composable en \u00e9l\u00e9ments g\u00e9om\u00e9triques. \u00c0 faire Observez le logo Firefox d\u00e9fini sous .svg \u00e0 cette adresse et trouvez sa description .svg (clic droit-> code source de la page). Zoomez(touche Crtl + molette ). Ouvrez le fichier firefox.png dans le navigateur Firefox(cliquez sur le lien pr\u00e9c\u00e9dent...). Zoomez et comparez avec la manipulation pr\u00e9c\u00e9dente. Quelle diff\u00e9rence entre une image matricielle et vectorielle?", "title": "Gen\u00e8se"}, {"location": "prem/images_numeriques.html#image-matricielle", "text": "\u00c0 retenir! Une photo, une image est donc d\u00e9finie g\u00e9n\u00e9ralement par un tableau de valeurs, appel\u00e9e matrice , d\u00e9finissant ainsi le niveau d'intensit\u00e9 de chaque pixel de cette image. On retrouvera en g\u00e9n\u00e9ral: des images en niveaux de gris en mode L : lorsque les couleurs sont cod\u00e9es sur 8 bits, c'est-\u00e0-dire 1 octet, il y a donc 256 niveaux de quantifications possibles allant du 0(noir) au blanc(255). des images couleurs cod\u00e9es en mode RGB pour Red Green Blue: chaque couleur est cod\u00e9e sur 8 bits soit un octet. des images couleurs avec un canal alpha en mode RGBA permettant de contr\u00f4ler la transparence d'une image, notamment lorsque l'on souhaite superposer l'une sur l'autre. Dans une image matricielle contenant des pixels, le premier pixel est celui en haut \u00e0 gauche et le dernier, celui en bas \u00e0 droite. Puis on parcourt une image ligne par ligne, de gauche \u00e0 droite. Ceci est important pour comprendre comment on peut lire ou \u00e9crire sur une image! On entend par: \u00c0 savoir! lire un pixel , donner la valeur de sa couleur qui se pr\u00e9sente sous diff\u00e9rentes formes (entier, triplet ou quadruplet d'entiers) selon le mode de repr\u00e9sentation (L, RBG ou RGBA) \u00e9crire un pixel , d\u00e9finir sa couleur par la donn\u00e9e d'un entier, d'un triplet ou un quadruplet selon le mode de repr\u00e9sentation... \u00c0 faire Dans une image couleur o\u00f9 chaque couleur est cod\u00e9e sur un octet, combien de couleurs diff\u00e9rentes peut-on obtenir?", "title": "Image matricielle"}, {"location": "prem/images_numeriques.html#enfin-du-python", "text": "Cette section propose de manipuler des images num\u00e9riques \u00e0 l'aide d'un biblioth\u00e8que Python appel\u00e9e PIL . \u00c0 faire Installer la biblioth\u00e8que PILLOW dans Thonny(lors de l'import il faudra l'appeler sous sous ancien nom PIL...). Il s'agit de traduire en Python l'id\u00e9e de: Les routines ! ouvrir un fichier image img sur lequel on travaille; d\u00e9terminer les propri\u00e9t\u00e9s de cette image( mode,size,format ); cr\u00e9er une nouvelle image; lire et \u00e9crire sur une image (attention on lit dans l'une on \u00e9crit dans l'autre!) montrer ou enregistrer l'image obtenue. Pour illustrer les commandes python r\u00e9pondant \u00e0 ces besoins, nous allons utiliser la photo puppy.png ( T\u00e9l\u00e9charger ici ). Attention tous les programmes doivent avoir en en-t\u00eate, l'import des biblioth\u00e8ques: from PIL import Image", "title": "Enfin du Python!"}, {"location": "prem/images_numeriques.html#ouvrir-une-image-et-lire-des-informations", "text": "from PIL import Image #Ouverture de l'image existante, le chemin relatif doit \u00eatre donn\u00e9 \u00e0 partir de votre fichier! im = Image . open ( \"Images\\puppy.png\" ) #pour ma part je mets les images dans un dossier Images #On peut conna\u00eetre les informations suivantes print ( im . mode , im . size , im . format ) im . close () L'objet im n'est pas une image mais un objet tampon sur lequel nous travaillerons avant de le fermer.", "title": "Ouvrir une image et lire des informations"}, {"location": "prem/images_numeriques.html#determiner-les-caracteristiques-de-limage", "text": "Une image poss\u00e8de toujours une taille, un format et un mode de repr\u00e9sentation (niveaux de gris, couleurs avec alpha \u00e9ventuel). \u00c0 faire Quelles sont les caract\u00e9ristiques de l'image puppy.png (mode, taille, format)?", "title": "D\u00e9terminer les caract\u00e9ristiques de l'image"}, {"location": "prem/images_numeriques.html#creation-dune-nouvelle-image", "text": "from PIL import Image #Ouverture d'une nouvelle image IM = Image . new ( 'L' , ( 750 , 200 )) IM . save ( \"Images\\img_new1.png\" ) #pour cr\u00e9er l'image dans le dossier Images... IM . close () \u00c0 faire Donner le mode et la taille de l'image cr\u00e9\u00e9e pr\u00e9c\u00e9demment", "title": "Cr\u00e9ation d'une nouvelle image"}, {"location": "prem/images_numeriques.html#lire-la-valeur-dintensite-dun-pixel", "text": "from PIL import Image #Ouverture de l'image existante #Le chemin relatif doit \u00eatre donn\u00e9 im = Image . open ( \"Images\\puppy.png\" ) pix = im . getpixel (( 20 , 30 )) print ( pix ) im . close () Attention , la m\u00e9thode getpixel prend en param\u00e8tre un couple correspondant aux coordonn\u00e9es (colonne, ligne) du pixel dans l'image: dans l'exemple, 20 i\u00e8me colonne et 30i\u00e8me ligne(il faut bien s\u00fbr s'assurer que ce pixel existe...) . Donc on ne tape pas im.getpixel(20,30) mais bien im.getpixel((20,30)) \u00c0 faire En s'utilisant le code pr\u00e9c\u00e9dent, donner l'intensit\u00e9 des pixels \\((105,42)\\) de l'image puppy.png . quelles sont les coordonn\u00e9es du dernier pixel de l'image(en bas \u00e0 droite).Donnez son intensit\u00e9", "title": "Lire la valeur d'intensit\u00e9 d'un pixel"}, {"location": "prem/images_numeriques.html#ecrire-lintensite-dun-pixel", "text": "On rappelle qu'on entend par \u00e9crire un pixel, d\u00e9finir sa valeur d'intensit\u00e9! from PIL import Image #Ouverture d'une nouvelle image IM = Image . new ( 'L' , ( 750 , 200 )) IM . putpixel (( 425 , 100 ), 150 ) IM . save ( \"Images\\img_new2.png\" ) IM . close () La m\u00e9thode putpixel s'applique \u00e0 l'objet IM et prend en param\u00e8tres l'endroit o\u00f9 l'on veut \u00e9crire (c,l) (425 et 100 dans notre exemple) et la valeur d'intensit\u00e9 p (150 dans l'exemple). Attention dans le cas d'une image couleur l'intensit\u00e9 est un triplet (r,g,b) voire (r,g,b,a) . Par d\u00e9faut... Lorsque vous cr\u00e9ez une image, tous les pixels sont noirs par d\u00e9faut. Donc \u00e0 0 sur tous les canaux! \u00c0 faire Cr\u00e9ez une image de largeur 500 et de hauteur 100, o\u00f9 tous les pixels de la ligne 50 sont rouges, les autres restant noirs... Cr\u00e9ez une image de largeur 500 et de hauteur 100, o\u00f9 tous les pixels de la colonne 250 sont rouges, les autres restant noirs... Cr\u00e9ez une image de largeur 500 et de hauteur 500, o\u00f9 tous les pixels des diagonales sont rouges, les autres restant noirs...", "title": "\u00c9crire l'intensit\u00e9 d'un pixel"}, {"location": "prem/images_numeriques.html#parcourir-une-image-pixel-par-pixel", "text": "Pour parcourir une image pixel par pixel, on va utiliser une double boucle: l'une pour parcourir les lignes, l'autre pour parcourir les colonnes. Algorithme \u00e0 suivre ouvre une image en lecture cr\u00e9e une nouvelle image de caract\u00e9ristiques identiques parcoure et lit la valeur d'intensit\u00e9 de chaque pixel de l'image initiale parcoure et \u00e9cris au m\u00eame endroit sur l'image finale la valeur captur\u00e9e \u00e0 laquelle on ajoute 100 (on travaille modulo 256 pour rester dans la plage \\([0;255]\\) ). on enregistre l'image ainsi cr\u00e9\u00e9e. L'impl\u00e9mentation de l'algorithme pr\u00e9c\u00e9dent donne en Python, le programme suivant: from PIL import Image #Ouverture de l'image #Le chemin relatif doit \u00eatre donn\u00e9 imInit = Image . open ( \"Images\\puppy.png\" ) #Ouverture d'une nouvelle image #M\u00eame mode et taille que l'image d\u00e9j\u00e0 ouverte ImFin = Image . new ( imInit . mode , imInit . size ) #La double boucle permet de parcourir l'image de haut en bas de gauche \u00e0 droite for l in range ( imInit . size [ 1 ]): #l comme ligne for c in range ( imInit . size [ 0 ]): #c comme colone pix = imInit . getpixel (( c , l )) # getpixel capture la valeur de couleur du pixel (x,y) #on fait un get sur im: c'est une lecture! ImFin . putpixel (( c , l ), ( pix + 100 ) % 256 ) #putpixel colore le pixel (x,y) de l'image IM avec la valeur de (pix + 100)%256 #on fait donc une \u00e9criture sur Im. ImFin . show () ImFin . save ( \"Images\\ImageTranslate100.png\" ) imInit . close () ImFin . close () Quelques informations sur le programme pr\u00e9c\u00e9dent: imInit est un objet tampon de l'image initiale; imInit.size renvoie donc la taille de l'image de d\u00e9part sous le forme d'un tuple imInit.size[0] est donc le premier \u00e9l\u00e9ment de imInit.size , soit la largeur de l'image. Et imInit.size[1] donne donc la hauteur. Et imInit.size[2] n'existe pas ! Donc l'instruction ImFin = Image.new(imInit.mode, imInit.size) construit une nouvelle image de m\u00eame mode et taille que celle qui a \u00e9t\u00e9 ouverte. c est la variable qui prend ses valeurs de 0 \u00e0 imInit.size[0] - 1 correspondant au num\u00e9ro de chaque colonne de l'image l est la variable qui prend ses valeurs de 0 \u00e0 imInit.size[1] - 1 correspondant au num\u00e9ro de chaque ligne de l'image \u00c0 faire Construire de la m\u00eame fa\u00e7on les images translat\u00e9es de 10 pixels et de 255 pixels. Pensez \u00e0 changer le nom de sauvegarde sinon vous \u00e9craserez les fichiers pr\u00e9c\u00e9demment construits.", "title": "Parcourir une image pixel par pixel"}, {"location": "prem/images_numeriques.html#le-coin-des-exercices", "text": "En n'utilisant que les routines pr\u00e9c\u00e9dentes (il y a des m\u00e9thodes de la biblioth\u00e8que Pil qui permettent de r\u00e9aliser directement les transformations demand\u00e9es...), r\u00e9alisez les exercices suivants. \u00c0 faire Cr\u00e9er une image en niveaux de gris de dimension 500 sur 100 pixels o\u00f9 chaque pixel a une intensit\u00e9 \u00e9gale \u00e0 un nombre al\u00e9atoire entre 0 et 255. On sauvegardera sous le nom hasard.png cette image. Cr\u00e9er une image en couleur de dimension 500 sur 100 pixels o\u00f9 chaque pixel a une intensit\u00e9 de rouge, de vert et de bleu est \u00e9gale \u00e0 un nombre al\u00e9atoire entre 0 et 255. On sauvegardera cette image sous le nom hasardcouleur.png . \u00c0 faire Cr\u00e9er l'image puppynegative.png obtenu \u00e0 partir de l'image puppy.png en transformant le pixel p en le pixel 255 - p . \u00c0 faire Cr\u00e9er une image de dimension 600(width) sur 400(height) pixels qui est le drapeau fran\u00e7ais. On sauvegardera cette image sous le nom drapeau.png . \u00c0 faire Cr\u00e9er une image en niveaux de gris de dimension 500 sur 100 pixels o\u00f9 chaque pixel de ligne de rang pair est blanc et les autres noir. On sauvegardera cette image sous le nom ligneblanche.png . \u00c0 faire L'image Firefox.png est une image couleur qui est donc la superposition de trois images: l'une contient les composantes de rouge, l'autre de vert et la derni\u00e8re de bleu. Construire ces trois images que vous sauvegarderez sous le nom filtreRougeFirefox.png ,.... \u00c0 faire Construire l'image obtenue par une sym\u00e9trie verticale. On sauvegardera l'image sous le nom puppyV.png . Construire l'image obtenue par une sym\u00e9trie horizontale.On sauvegardera l'image sous le nom puppyH.png . \u00c0 faire Effet de seuillage : L'id\u00e9e est d'effectuer un seuillage sur l'image en construisant une nouvelle image selon le principe suivant: tous les pixels dont l'intensit\u00e9 est inf\u00e9rieure ou \u00e9gal \u00e0 127 sont transform\u00e9s en pixel d'intensit\u00e9 0 et ceux d'intensit\u00e9 strictement sup\u00e9rieur \u00e0 127 transform\u00e9s en pixel d'intensit\u00e9 1. On sauvegardera l'image sous le nom puppySeuil127.png . \u00c0 faire M\u00eame exercice que pr\u00e9c\u00e9demment mais le choix du seuil \\(s\\) est fait par l'utilisateur. On sauvegardera l'image sous le nom puppySeuilS.png . \u00c0 faire M\u00eame exercice que pr\u00e9c\u00e9demment mais n (un entier compris entre 2 et 25) seuils seront cr\u00e9\u00e9s. On sauvegardera l'image sous le nom puppyQuantificationN.png . \u00c0 faire \u00c0 l'aide la biblioth\u00e8que matplotlib que vous connaissez d\u00e9j\u00e0, construire l'histogramme des intensit\u00e9s de niveaux de gris de l'image puppy.png : en abscisse, on trouve une intensit\u00e9 \\(i\\) de 0 \u00e0 255 et en ordonn\u00e9e le nombre de pixels d'intensit\u00e9 \\(i\\) dans l'image.", "title": "Le coin des exercices"}, {"location": "prem/index_tpbash.html", "text": "Travail sur la ligne de commande \u00b6 ou comment interagir avec le syst\u00e8me d'exploitation sans utiliser son interface graphique! Une interface graphique qui a fait le succ\u00e8s de microsoft \u00b6 Microsoft est l'entreprise qui a d\u00e9velopp\u00e9 les premiers syst\u00e8mes d'exploitation proposant une interface graphique au d\u00e9but des ann\u00e9es 1990. Avant cette date, il fallait poss\u00e8der des connaissances techniques pour exploiter les ressources d'un ordinateur. Les syst\u00e8mes Windows (95, NT, XP, ...) ont d\u00e9mocratis\u00e9 l'utilisation des machines au point o\u00f9 tout le monde pouvait maintenant s'en acheter une pour son utilisation personnelle: c'est le d\u00e9but de l'\u00e8re des PC(personal computer). L' interface graphique propos\u00e9e par les syst\u00e8mes Windows est simple: il suffit de cliquer sur des ic\u00f4nes pr\u00e9sentes sur le bureau pour lancer un programme! En revanche, on ne peut pas faire ce qui n'a pas \u00e9t\u00e9 pr\u00e9vu: des t\u00e2ches d'administration par exemple... Passez la commande! \u00b6 On peut commander le syst\u00e8me d'exploitation en utilisant des commandes ou des script . Pour cela, il faut passer en ligne de commande.... \u00c0 faire Tapez windows + R puis cmd dans la fen\u00eatre qui s'ouvre Vous devez obtenir quelque chose qui ressemble \u00e0 \u00e7a: c'est l'invite de commande ou le prompt ! Tapez dir puis la touche Entree \u00c0 faire Tapez la commande dir /? dans le prompt. \u00c0 quoi sert-elle? Affichez l'aide de la commande copy Arborescence des syst\u00e8mes Windows \u00b6 Lecteurs \u00b6 Sous Windows, les diff\u00e9rentes partitions du disque dur sont identifi\u00e9es par des lettres majuscules: historiquement, la partition syst\u00e8me contenant le syst\u00e8me d'exploitation est C: une bonne installation partitionne le disque dur en au moins deux lecteurs: un pour le syst\u00e8me , l'autre pour les donn\u00e9es . En cas de panne du syst\u00e8me, on peut tout de m\u00eame acc\u00e8der aux donn\u00e9es m\u00eame si il faut formater la partition syst\u00e8me. d'autres lecteurs( E:,F:,.. ) peuvent exister: lecteurs r\u00e9seaux ou simplement une cl\u00e9 USB. \u00c0 faire Ouvrez l'explorateur de documents de votre ordinateur. Nommez les diff\u00e9rents lecteurs que vous pouvez oberver Organisation des dossiers et des fichiers \u00b6 Les partitions contiennent des dossiers (ou r\u00e9pertoires ) et des fichiers . Les dossiers peuvent aussi contenir des dossiers appel\u00e9s sous-dossiers , qui contiennent eux-m\u00eames des dossiers et/ou des fichiers... Selon vos droits attribu\u00e9s lorsque vous vous identifiez( loggez ), vous avez diverses autorisations sur ces fichiers ou dossiers: droit de lecture , vous pouvez lire sans modifier le contenu. droit d'\u00e9criture , vous pouvez lire et modifier le contenu. aucun droit , le dossier ou le fichier existe mais vous ne pouvez m\u00eame pas le voir! D'autres droits existent que nous ne d\u00e9velopperons pas ici. \u00c0 faire Quels droits avez-vous sur les lecteurs de votre ordinateur? Chemin absolu et relatif \u00b6 Pour d\u00e9signer ou pointer vers une ressource(fichier ou dossier), on utilise son chemin . Il peut \u00eatre: absolu : le chemin commence par la lettre de la partition et donne le nom de tous les dossiers qu'il faut travaerser pour arriver \u00e0 la ressource. Par exemple, le chemin absolu de ce fichier est: C:\\Users\\Utilisateur\\tpbash\\docs\\index.md relatif : le chemin identifie le chemin \u00e0 partir du r\u00e9pertoire courant. Par exemple, les images de cette page sont stock\u00e9es dans un dossier data et le chemin qui pointe vers l'image ci-dessous qui se nomme chemin.png est \\data\\chemin.png : Naviguer dans l'arborescence en ligne de commandes \u00b6 Des commandes de bases \u00b6 dir affiche le contenu du r\u00e9pertoire courant. Pour conna\u00eetre les options de cette commande , vous pouvez taper dir /? pour afficher l'aide! cd nom_du_dossier (change directory) permet de se d\u00e9placer dans le dossier nom_du_dossier si il existe! cd.. permet de remonter d'un niveau dans l'arborescence. mkdir (make directory) cr\u00e9e un nouveau dossier dans le r\u00e9pertoire courant! copy copie des fichiers ou des dossiers de la source vers la destination (tapez copy /? pour plus d'infos...) del (delete) efface le fichier pass\u00e9 en argument... Le caract\u00e8re * , appel\u00e9 joker , remplace n'importe quel texte dans le nom d'un fichier. Par exemple, la commande: copy *.txt C: \\b ackup copie tous les fichiers portant l'extension .txt dans le dossier backup situ\u00e9 \u00e0 la racine du lecteur C. \u00c0 faire Ouvrez l'invite de commande. Dans le dossier Mes documents , cr\u00e9er un dossier test et un dossier backup . Allez ensuite dans ce dossier test . Tapez la commande notepad coucou.txt . Normalement, le bloc notes s'ouvre avec un avertissement. Confirmez votre volont\u00e9 de cr\u00e9er ce fichier et mettez y le contenu de votre choix. Fermez notepad par la combinaison de touches Alt + F4 V\u00e9rifier que le fichier coucou.txt existe bien dans le dossier test. En ligne de commande, avec les instructions ci-dessus, copier ce fichier dans le dossier backup et v\u00e9rifier que la copie a fonctionn\u00e9! Les variables d'environnement \u00b6 Comment dans la manipulation pr\u00e9c\u00e9dente, l'ex\u00e9cutable de notepad a t-il pu \u00eatre lanc\u00e9? Son seul appel suffit-il ? Bizarre... \u00c0 faire En ligne de commande, tapez firefox . Que se passe t-il? Les variables d'environnement sont des variables qui peuvent \u00eatre appel\u00e9es partout par tous les programmes. Elles stockent des informations consid\u00e9r\u00e9es importantes commme: le nom de l'ordinateur, de l'utilisateur le chemin du r\u00e9pertoire TEMP contenant les fichiers temporaires la variable PATH contient le chemin d'ex\u00e9cutables(un programme en fait...) qui peuvent \u00eatre appel\u00e9s partout dans les programmes \u00c0 faire Ouvrez l'invite de commande. Tapez PATH et observez les chemins propos\u00e9s Tapez echo %USERNAME% , pour afficher la valeur de la variable USERNAME Les fichiers de commande(.bat) \u00b6 On souhaite souvent ex\u00e9cuter les m\u00eames t\u00e2ches en ligne de commande. On peut alors regrouper les commandes dans un fichier qui sera directement lu par le syst\u00e8me DOS : ce sont par exemple, les fichiers dont l'extension est .bat \u00c0 faire En ligne de commande tapez: echo Nous sommes le %date%, il est %time% Ouvrez le bloc notes en tapant la commande notepad ( si elle est au path ...) puis recopiez le texte echo Nous sommes le %date%, il est %time% Sauvegardez le fichier sous le nom dateheure avec l'extension .bat . Vous devriez voir appara\u00eetre un engrenage dans l'ic\u00f4ne d\u00e9crivant le fichier: Ex\u00e9cutez alors ce fichier par un double-clic. Que se passe t-il? Modifier le fichier en ajoutant une ligne avec l'instruction pause . Sauvegardez et ex\u00e9cutez \u00e0 nouveau le fichier.", "title": "Passez la commande !"}, {"location": "prem/index_tpbash.html#travail-sur-la-ligne-de-commande", "text": "ou comment interagir avec le syst\u00e8me d'exploitation sans utiliser son interface graphique!", "title": "Travail sur la ligne de commande"}, {"location": "prem/index_tpbash.html#une-interface-graphique-qui-a-fait-le-succes-de-microsoft", "text": "Microsoft est l'entreprise qui a d\u00e9velopp\u00e9 les premiers syst\u00e8mes d'exploitation proposant une interface graphique au d\u00e9but des ann\u00e9es 1990. Avant cette date, il fallait poss\u00e8der des connaissances techniques pour exploiter les ressources d'un ordinateur. Les syst\u00e8mes Windows (95, NT, XP, ...) ont d\u00e9mocratis\u00e9 l'utilisation des machines au point o\u00f9 tout le monde pouvait maintenant s'en acheter une pour son utilisation personnelle: c'est le d\u00e9but de l'\u00e8re des PC(personal computer). L' interface graphique propos\u00e9e par les syst\u00e8mes Windows est simple: il suffit de cliquer sur des ic\u00f4nes pr\u00e9sentes sur le bureau pour lancer un programme! En revanche, on ne peut pas faire ce qui n'a pas \u00e9t\u00e9 pr\u00e9vu: des t\u00e2ches d'administration par exemple...", "title": "Une interface graphique qui a fait le succ\u00e8s de microsoft"}, {"location": "prem/index_tpbash.html#passez-la-commande", "text": "On peut commander le syst\u00e8me d'exploitation en utilisant des commandes ou des script . Pour cela, il faut passer en ligne de commande.... \u00c0 faire Tapez windows + R puis cmd dans la fen\u00eatre qui s'ouvre Vous devez obtenir quelque chose qui ressemble \u00e0 \u00e7a: c'est l'invite de commande ou le prompt ! Tapez dir puis la touche Entree \u00c0 faire Tapez la commande dir /? dans le prompt. \u00c0 quoi sert-elle? Affichez l'aide de la commande copy", "title": "Passez la commande!"}, {"location": "prem/index_tpbash.html#arborescence-des-systemes-windows", "text": "", "title": "Arborescence des syst\u00e8mes Windows"}, {"location": "prem/index_tpbash.html#lecteurs", "text": "Sous Windows, les diff\u00e9rentes partitions du disque dur sont identifi\u00e9es par des lettres majuscules: historiquement, la partition syst\u00e8me contenant le syst\u00e8me d'exploitation est C: une bonne installation partitionne le disque dur en au moins deux lecteurs: un pour le syst\u00e8me , l'autre pour les donn\u00e9es . En cas de panne du syst\u00e8me, on peut tout de m\u00eame acc\u00e8der aux donn\u00e9es m\u00eame si il faut formater la partition syst\u00e8me. d'autres lecteurs( E:,F:,.. ) peuvent exister: lecteurs r\u00e9seaux ou simplement une cl\u00e9 USB. \u00c0 faire Ouvrez l'explorateur de documents de votre ordinateur. Nommez les diff\u00e9rents lecteurs que vous pouvez oberver", "title": "Lecteurs"}, {"location": "prem/index_tpbash.html#organisation-des-dossiers-et-des-fichiers", "text": "Les partitions contiennent des dossiers (ou r\u00e9pertoires ) et des fichiers . Les dossiers peuvent aussi contenir des dossiers appel\u00e9s sous-dossiers , qui contiennent eux-m\u00eames des dossiers et/ou des fichiers... Selon vos droits attribu\u00e9s lorsque vous vous identifiez( loggez ), vous avez diverses autorisations sur ces fichiers ou dossiers: droit de lecture , vous pouvez lire sans modifier le contenu. droit d'\u00e9criture , vous pouvez lire et modifier le contenu. aucun droit , le dossier ou le fichier existe mais vous ne pouvez m\u00eame pas le voir! D'autres droits existent que nous ne d\u00e9velopperons pas ici. \u00c0 faire Quels droits avez-vous sur les lecteurs de votre ordinateur?", "title": "Organisation des dossiers et des fichiers"}, {"location": "prem/index_tpbash.html#chemin-absolu-et-relatif", "text": "Pour d\u00e9signer ou pointer vers une ressource(fichier ou dossier), on utilise son chemin . Il peut \u00eatre: absolu : le chemin commence par la lettre de la partition et donne le nom de tous les dossiers qu'il faut travaerser pour arriver \u00e0 la ressource. Par exemple, le chemin absolu de ce fichier est: C:\\Users\\Utilisateur\\tpbash\\docs\\index.md relatif : le chemin identifie le chemin \u00e0 partir du r\u00e9pertoire courant. Par exemple, les images de cette page sont stock\u00e9es dans un dossier data et le chemin qui pointe vers l'image ci-dessous qui se nomme chemin.png est \\data\\chemin.png :", "title": "Chemin absolu et relatif"}, {"location": "prem/index_tpbash.html#naviguer-dans-larborescence-en-ligne-de-commandes", "text": "", "title": "Naviguer dans l'arborescence en ligne de commandes"}, {"location": "prem/index_tpbash.html#des-commandes-de-bases", "text": "dir affiche le contenu du r\u00e9pertoire courant. Pour conna\u00eetre les options de cette commande , vous pouvez taper dir /? pour afficher l'aide! cd nom_du_dossier (change directory) permet de se d\u00e9placer dans le dossier nom_du_dossier si il existe! cd.. permet de remonter d'un niveau dans l'arborescence. mkdir (make directory) cr\u00e9e un nouveau dossier dans le r\u00e9pertoire courant! copy copie des fichiers ou des dossiers de la source vers la destination (tapez copy /? pour plus d'infos...) del (delete) efface le fichier pass\u00e9 en argument... Le caract\u00e8re * , appel\u00e9 joker , remplace n'importe quel texte dans le nom d'un fichier. Par exemple, la commande: copy *.txt C: \\b ackup copie tous les fichiers portant l'extension .txt dans le dossier backup situ\u00e9 \u00e0 la racine du lecteur C. \u00c0 faire Ouvrez l'invite de commande. Dans le dossier Mes documents , cr\u00e9er un dossier test et un dossier backup . Allez ensuite dans ce dossier test . Tapez la commande notepad coucou.txt . Normalement, le bloc notes s'ouvre avec un avertissement. Confirmez votre volont\u00e9 de cr\u00e9er ce fichier et mettez y le contenu de votre choix. Fermez notepad par la combinaison de touches Alt + F4 V\u00e9rifier que le fichier coucou.txt existe bien dans le dossier test. En ligne de commande, avec les instructions ci-dessus, copier ce fichier dans le dossier backup et v\u00e9rifier que la copie a fonctionn\u00e9!", "title": "Des commandes de bases"}, {"location": "prem/index_tpbash.html#les-variables-denvironnement", "text": "Comment dans la manipulation pr\u00e9c\u00e9dente, l'ex\u00e9cutable de notepad a t-il pu \u00eatre lanc\u00e9? Son seul appel suffit-il ? Bizarre... \u00c0 faire En ligne de commande, tapez firefox . Que se passe t-il? Les variables d'environnement sont des variables qui peuvent \u00eatre appel\u00e9es partout par tous les programmes. Elles stockent des informations consid\u00e9r\u00e9es importantes commme: le nom de l'ordinateur, de l'utilisateur le chemin du r\u00e9pertoire TEMP contenant les fichiers temporaires la variable PATH contient le chemin d'ex\u00e9cutables(un programme en fait...) qui peuvent \u00eatre appel\u00e9s partout dans les programmes \u00c0 faire Ouvrez l'invite de commande. Tapez PATH et observez les chemins propos\u00e9s Tapez echo %USERNAME% , pour afficher la valeur de la variable USERNAME", "title": "Les variables d'environnement"}, {"location": "prem/index_tpbash.html#les-fichiers-de-commandebat", "text": "On souhaite souvent ex\u00e9cuter les m\u00eames t\u00e2ches en ligne de commande. On peut alors regrouper les commandes dans un fichier qui sera directement lu par le syst\u00e8me DOS : ce sont par exemple, les fichiers dont l'extension est .bat \u00c0 faire En ligne de commande tapez: echo Nous sommes le %date%, il est %time% Ouvrez le bloc notes en tapant la commande notepad ( si elle est au path ...) puis recopiez le texte echo Nous sommes le %date%, il est %time% Sauvegardez le fichier sous le nom dateheure avec l'extension .bat . Vous devriez voir appara\u00eetre un engrenage dans l'ic\u00f4ne d\u00e9crivant le fichier: Ex\u00e9cutez alors ce fichier par un double-clic. Que se passe t-il? Modifier le fichier en ajoutant une ligne avec l'instruction pause . Sauvegardez et ex\u00e9cutez \u00e0 nouveau le fichier.", "title": "Les fichiers de commande(.bat)"}, {"location": "prem/jscript.html", "text": "Le javascript pour donner du tonus \u00e0 notre code Le principe! \u00b6 Le cours pr\u00e9c\u00e9dent rappelle que le HTML d\u00e9crit le contenu des pages web que le CSS vient par la suite formater. Il ne s'agit pas d'un langage de programmation et on ne peut donc pas interagir avec des \u00e9v\u00e9nements comme le clic de la souris, l'appui sur une touche du clavier ou le chargement d'une page... Le javascript est un langage de programmation cr\u00e9\u00e9 en 1995 et int\u00e9gr\u00e9 au navigateur Netscape Navigator afin de dynamiser les pages webs statiques . \u00c0 une action d'un utilisateur, on peut par exemple associer un comportement comme le changement de couleur d'un texte, d'un paragraphe,... Le Document Object Model (D.O.M) \u00b6 Le DOM est la repr\u00e9sentation sch\u00e9matique et hi\u00e9rarchique de votre page web permettant de visualiser l'ensemble des balises HTML qui la constituent. Le javascript agit sur les objets du DOM. Il les rep\u00e8re soit par le nom de leur balise soit par leur idendifiant ( id ) ou bien leur classe ( class ). L'exemple de base... \u00b6 Nous utiliserons le code HTML index.html et la feuille de style style.css qui va avec ... \u00c0 faire: Construire son arborescence Cr\u00e9er un dossier WEBJS contenant les dossiers img, css et js . Attention de bien respecter la casse ! T\u00e9l\u00e9chargez puis enregistrez le fichier index.html (clic droit->code source de la page) \u00e0 la racine du dossier WEBJS et le fichier style.css dans le dossier css . Visualiser alors le fichier index.html avec un navigateur et appelez le professeur pour validation. Le DOM de ce code HTML, volontairement incomplet , pourrait ressembler \u00e0 cela: Et c'est parti! \u00b6 Les exercices suivants n'ont rien d'original. Ils montrent seulement comment int\u00e9grer du code javascript dans un document HTML afin de r\u00e9pondre \u00e0 des besoins sp\u00e9cifiques... Une manipulation simple! \u00b6 \u00c0 faire: Mon premier js... Int\u00e9grer entre les balises <head> le code suivant: < script > alert ( \"Le JavaScript fonctionne maintenant!\" ) < /script> Enregistrez votre fichier HTML et rafra\u00eechissez le navigateur afin de voir appara\u00eetre l'effet attendu. Ce code est ex\u00e9cut\u00e9 suite \u00e0 un \u00e9v\u00e9nement: le chargement de la page web. Mais on peut modifier cela! \u00c0 faire: Mon deuxi\u00e8me js... Effacer les balises <script> pr\u00e9c\u00e9dente. Ins\u00e9rer dans le corps du document HTML juste apr\u00e8s la balise <body> , le code suivant: < button onclick = \"alert('\u00c7a marche aussi comme cela! ') \" > Appuyez ici! </ button > Enregistrez et rafra\u00eechissez! On a d\u00e9j\u00e0 expos\u00e9 dans un cours pr\u00e9c\u00e9dent notre volont\u00e9 de s\u00e9parer les codes selon leur utilisation: le css dans un dossier css , les images dans un dossier img ,... Continuons ce rangement efficace en enregistrant le code javascript dans son dossier de destination js . \u00c0 faire: Mon troisi\u00e8me js... Avec notepad, ouvrer un nouveau document (language = javascript) que vous enregistrez sous le nom monpremierjs.js dans le dossier js . Copiez-y le code suivant: function ma_fonc_test (){ window . alert ( \"C'est encore mieux de faire ainsi!!\" ); } 3.Il faut maintenant indiquer au document courant o\u00f9 se situe le code javascript. Ins\u00e9rer alors le code suivant dans l'ent\u00eate (balises <head> ) de la page HTML: < script src = \"js\\monpremierjs.js\" ></ script > 4. Il faut aussi modifier notre bouton pour associer \u00e0 sa fonction onclick l'ex\u00e9cution de la fonction ma_fonc_test : < button onclick = \"ma_fonc_test()\" > Appuyez ici! </ button > 5. Enregistrez et rafra\u00eechissez, tout doit fonctionner! Remarquez! Chaque instruction javascript se terminer par un ; . Son oubli est souvent une source d'erreur... Il y a une diff\u00e9rence que l'on retrouve dans le langage python entre ma_fonc_test et ma_fonc_test() : le premier invoque le nom d'une fonction le deuxi\u00e8me l'ex\u00e9cute ! En mode debug... \u00b6 Souvent, le code javascript est long et complet et disons-le ne fonctionne pas toujours comme on le voudrait... Aussi prenons-nous l'habitude d'imprimer dans la console javascript l'\u00e9tat de certaines variables pour savoir si elles \u00e9voluent dans le bon sens... On retrouve cette habitude dans d'autres langages de programmation, en python par exemple... On appelle d\u00e9bugger , l'action de rechercher et corriger les erreurs d'un programme informatique. L'utilisation des print pour visualiser l'\u00e9tat des variables, permet souvent de d\u00e9bugger... Mais o\u00f9 se trouve la console javascript??? Dans Firefox, tapez F12 et vous verrez appara\u00eetre plusieurs onglets dont la console... Pour imprimer dans la console, rien de plus simple! \u00c0 faire: print dans la console... Ajouter \u00e0 la fonction ma_fonc_test() , l'instruction suivante: function ma_fonc_test (){ window . alert ( \"C'est encore mieux de faire ainsi!!\" ); console . log ( \"Ma javascript fonctionne\" ); } Enregistrez, rafra\u00eechissez et visulisez dans la console que tout va bien! \u00c9changez les deux instructions et commentez ce qui se passe. Remarquez la pr\u00e9sence du ; \u00e0 la fin de chaque instruction et la position des accolades qui englobent les deux instructions: \u00e0 l'appel de la fonction, les deux instructions sont alors ex\u00e9cut\u00e9es! Bouton et \u00e9v\u00e9nements \u00b6 Dans la partie pr\u00e9c\u00e9dente, nous avons: cr\u00e9er un bouton: les balises HTML du m\u00eame nom permettent de le faire associer un \u00e9v\u00e9nement \u00e0 l'appui sur ce bouton: le bouton a un attribut onclick auquel on peut asocier une fonction javascript \u00e0 condition qu'elle soit bien entendu cod\u00e9e dans le fichier js. On se propose ici de cr\u00e9er de nouvelles fonctionnalit\u00e9s pour montrer ce dont javascript est capable de faire. Un bouton plus styl\u00e9! \u00b6 Notre bouton n'est pas tr\u00e8s joli... modifions son style! \u00c0 faire: en mode styl\u00e9! Dans le fichier style.css , ajouter le code suivant: button { display: inline-block; background-color: #7b38d8; border-radius: 10px; border: 4px double #cccccc; color: #eeeeee; text-align: center; font-size: 28px; padding: 20px; width: 200px; transition: all 0.5s; cursor: pointer; margin: 5px; } button:hover { background-color: #f7c2f9; } Enregistrez, rafra\u00eechissez et admirez! Pour centrer le bouton, nous allons utiliser une astuce qui consiste \u00e0 la positionner dans une zone, un conteneur que nous allons centrer. Nous utiliserons alors les balises <div></div> . \u00c0 faire: utiliser un conteneur Ajouter les balises <div></div> tagg\u00e9es par la classe b_haut autour des balises <button> : < div class = \"b_haut\" >< button onclick = \"ma_fonc_test()\" > Essai </ button ></ div > Dans le css, on va indiquer que cette balise tagg\u00e9e <div> doit \u00eatre centr\u00e9e: div . b_haut { display : flex ; justify-content : center ; } Enregistrez et rafra\u00eechissez. Enfin, taggez la balise <div> contenant les autres boutons pour uniformiser notre affichage. Changement d'apparence \u00b6 Les paragraphes existants ont un background-color en rgb(20,100,100) d\u00e9fini dans la feuille de style. On souhaite ici modifier cette couleur en appuyant sur notre bouton de test... L'algorithme est donc: rechercher tous les \u00e9l\u00e9ments <p> dans le DOM changer leur bg associer l'\u00e9tape 1 et 2 au clic du bouton. \u00c0 faire: changer le bg Compl\u00e9ter le fichier monpremierjs.js (inutile d'effacer son contenu existant) comme suit: function new_bg (){ const elt = document . getElementsByTagName ( \"p\" ); console . log ( elt ); elt [ 0 ]. style . backgroundColor = \"rgb(200,200,0)\" ; elt [ 1 ]. style . backgroundColor = \"#00FF00\" ; elt [ 2 ]. style . backgroundColor = \"white\" ; } Changer le nom de la fonction javascript dans l'attribut onclick : < button onclick = \"new_bg()\" > L'affichage de la constante elt permet de conna\u00eetre son type et son contenu. En fouillant un peu, on voit qu'il y a quatre paragraphes trouv\u00e9s et on peut aussi explorer leurs attributs... M\u00eame si cela fonctionne, on peut faire beaucoup mieux en utilisant les classes ou les identificateurs. \u00c0 faire: taguage g\u00e9n\u00e9ral! Taguer les balises <p> selon le principe suivant: la premier balise est <p id =\"p1\"> , la deuxi\u00e8me <p id =\"p2\"> , etc... Modifier la fonction js pr\u00e9c\u00e9dente: function new_bg (){ document . getElementById ( \"p1\" ). style . backgroundColor = \"red\" ; document . getElementById ( \"p2\" ). style . backgroundColor = \"yellow\" ; document . getElementById ( \"p3\" ). style . backgroundColor = \"purple\" ; } 3. Enregistrez et rafra\u00eechissez. On peut aussi changer d'autres styles que celui du background. Essayez par exemple les changements suivants: \u00c0 faire: quelques changements sympas! \u00c0 ajouter dans le corps de la fonction pr\u00e9c\u00e9dente (entre les accolades sinon cela ne fonctionnera pas...) document . getElementById ( \"p1\" ). style . visibility = 'hidden' ; document . getElementById ( \"p2\" ). style . border = \"dashed red\" ; document . getElementById ( \"p3\" ). style . fontSize = \"500%\" ; document . getElementById ( \"p3\" ). style . fontFamily = \"Brush Script MT\" ; En r\u00e9sum\u00e9! On tague les diff\u00e9rents \u00e9l\u00e9ments du DOM afin de pouvoir y acc\u00e9der par un programme javascript: si on tague par un id alors la recherche se fait par l'instruction document.getElementById(nom_id) si on tague par une classe alors la recherche se fait par l'instruction document.getElementByClassName(nom_class) Exercice de synth\u00e8se Supprimez le premier bouton du document HTML puis: en appuyant sur le bouton de gauche, le style des paragraphes changent : vous changerez les couleurs, les fontes, les tailles, ... et chaque paragraphe aura son propre style. en appuyant sur le bouton de droite, le style revient dans sa configuration originale... pour les meilleurs d'entre vous, changez aussi le style des listes (balises <ul> )! Cr\u00e9ation de nouveaux objets dans le DOM \u00b6 Le javascript permet aussi de modifier ou cr\u00e9er du contenant dans le document HTML himself! \u00c0 faire: modifier un fils... Ins\u00e9rer apr\u00e8s la balise <body> , le code HTML suivant: < div class = \"b_haut\" >< button onclick = \"ma_fonc_bonjour()\" > Essai </ button ></ div > < p id = \"demo\" ></ p > Cela cr\u00e9e le bouton que nous avions effac\u00e9 \u00e0 l'exercice pr\u00e9c\u00e9dent et un paragraphe vide... Cr\u00e9er un nouveau fichier javascript avec notepad, nomm\u00e9 monscript.js que vous enregistrez dans le dossier js . Ajoutez-y le code suivant: function ma_fonc_bonjour (){ document . getElementById ( \"demo\" ). innerHTML = \"Bonjour, nous sommes le \" + Date (); } Enfin, n'oubliez pas de changer le chemin de la source js dans les balises <script> pour pointer vers le bon fichier js... Enregistrez, rafra\u00eechissez et visualisez... En r\u00e9sum\u00e9! La m\u00e9thode .innerTHML permet de modifier le contenu d'une balise HTML \u00c0 faire:Utiliser la m\u00e9thode .innerTHML Taguer le premier titre <h1> par id = premiertitre . Compl\u00e9ter la fonction pr\u00e9c\u00e9dente pour que ce titre change en Qu'est ce que le Javascript? L'affichage de l'heure est dynamique mais invariant: quiconque appuie sur le bouton verra le m\u00eame message. Ne peut-on pas personnaliser cet affichage? \u00c0 faire: ouvrir une fen\u00eatre de saisie Dans le fichier monscript.js , ajoutez le code suivant: function debut (){ nom = window . prompt ( \"Donner votre nom avant de commencer!\" ); document . getElementById ( \"nom\" ). innerHTML = \"C'est parti!, \" + nom ; } Changer l' id du paragraphe <p> de demo en nom . Enfin, associer au clic de bouton la bonne fonction: < button onclick = \"ma_fonc_bonjour()\" > Autre possibilit\u00e9: ins\u00e9rer une zone de saisie au sein du document HTML. \u00c0 faire: ins\u00e9rer une zone de saisie Ajouter le code HTML suivant sous le premier paragraphe(celui o\u00f9 id = nom ): < h1 > Donner votre \u00e2ge </ h1 > < div id = \"zone_saisie\" > < input id = \"choix_age\" pattern = \"[0-9]{2}\" value = 16 > < button type = \"button\" onclick = \"affiche_age()\" > Valider </ button > </ div > < p id = \"age\" ></ p > Ajouter la fonction javascript suivante dans le fichier monscript.js . function affiche_age (){ let choix = document . getElementById ( \"choix_age\" ). value ; const d = new Date (); const an = d . getFullYear () - choix document . getElementById ( \"age\" ). innerHTML = \"Vous \u00eates n\u00e9 en \" + an ; } Et si vous voulez centrer tout cela, ajouter \u00e0 la feuille de style, les instructions suivantes: # zone_saisie { display : flex ; justify-content : center ; } Les exemples pr\u00e9c\u00e9dents montrent des usages r\u00e9pandus du javascript: modification du DOM, interaction avec l'utilisateur, ... Bien entendu les possibilit\u00e9s sont vastes mais on peut d\u00e9j\u00e0 faire beaucoup de chose... Exercice de synth\u00e8se Construire une page web qui permet de saisir deux nombres et d'afficher leur somme. M\u00eame exercice mais les nombres saisis sont binaires!", "title": "Dynamisons le Web"}, {"location": "prem/jscript.html#le-principe", "text": "Le cours pr\u00e9c\u00e9dent rappelle que le HTML d\u00e9crit le contenu des pages web que le CSS vient par la suite formater. Il ne s'agit pas d'un langage de programmation et on ne peut donc pas interagir avec des \u00e9v\u00e9nements comme le clic de la souris, l'appui sur une touche du clavier ou le chargement d'une page... Le javascript est un langage de programmation cr\u00e9\u00e9 en 1995 et int\u00e9gr\u00e9 au navigateur Netscape Navigator afin de dynamiser les pages webs statiques . \u00c0 une action d'un utilisateur, on peut par exemple associer un comportement comme le changement de couleur d'un texte, d'un paragraphe,...", "title": "Le principe!"}, {"location": "prem/jscript.html#le-document-object-model-dom", "text": "Le DOM est la repr\u00e9sentation sch\u00e9matique et hi\u00e9rarchique de votre page web permettant de visualiser l'ensemble des balises HTML qui la constituent. Le javascript agit sur les objets du DOM. Il les rep\u00e8re soit par le nom de leur balise soit par leur idendifiant ( id ) ou bien leur classe ( class ).", "title": "Le Document Object Model (D.O.M)"}, {"location": "prem/jscript.html#lexemple-de-base", "text": "Nous utiliserons le code HTML index.html et la feuille de style style.css qui va avec ... \u00c0 faire: Construire son arborescence Cr\u00e9er un dossier WEBJS contenant les dossiers img, css et js . Attention de bien respecter la casse ! T\u00e9l\u00e9chargez puis enregistrez le fichier index.html (clic droit->code source de la page) \u00e0 la racine du dossier WEBJS et le fichier style.css dans le dossier css . Visualiser alors le fichier index.html avec un navigateur et appelez le professeur pour validation. Le DOM de ce code HTML, volontairement incomplet , pourrait ressembler \u00e0 cela:", "title": "L'exemple de base..."}, {"location": "prem/jscript.html#et-cest-parti", "text": "Les exercices suivants n'ont rien d'original. Ils montrent seulement comment int\u00e9grer du code javascript dans un document HTML afin de r\u00e9pondre \u00e0 des besoins sp\u00e9cifiques...", "title": "Et c'est parti!"}, {"location": "prem/jscript.html#une-manipulation-simple", "text": "\u00c0 faire: Mon premier js... Int\u00e9grer entre les balises <head> le code suivant: < script > alert ( \"Le JavaScript fonctionne maintenant!\" ) < /script> Enregistrez votre fichier HTML et rafra\u00eechissez le navigateur afin de voir appara\u00eetre l'effet attendu. Ce code est ex\u00e9cut\u00e9 suite \u00e0 un \u00e9v\u00e9nement: le chargement de la page web. Mais on peut modifier cela! \u00c0 faire: Mon deuxi\u00e8me js... Effacer les balises <script> pr\u00e9c\u00e9dente. Ins\u00e9rer dans le corps du document HTML juste apr\u00e8s la balise <body> , le code suivant: < button onclick = \"alert('\u00c7a marche aussi comme cela! ') \" > Appuyez ici! </ button > Enregistrez et rafra\u00eechissez! On a d\u00e9j\u00e0 expos\u00e9 dans un cours pr\u00e9c\u00e9dent notre volont\u00e9 de s\u00e9parer les codes selon leur utilisation: le css dans un dossier css , les images dans un dossier img ,... Continuons ce rangement efficace en enregistrant le code javascript dans son dossier de destination js . \u00c0 faire: Mon troisi\u00e8me js... Avec notepad, ouvrer un nouveau document (language = javascript) que vous enregistrez sous le nom monpremierjs.js dans le dossier js . Copiez-y le code suivant: function ma_fonc_test (){ window . alert ( \"C'est encore mieux de faire ainsi!!\" ); } 3.Il faut maintenant indiquer au document courant o\u00f9 se situe le code javascript. Ins\u00e9rer alors le code suivant dans l'ent\u00eate (balises <head> ) de la page HTML: < script src = \"js\\monpremierjs.js\" ></ script > 4. Il faut aussi modifier notre bouton pour associer \u00e0 sa fonction onclick l'ex\u00e9cution de la fonction ma_fonc_test : < button onclick = \"ma_fonc_test()\" > Appuyez ici! </ button > 5. Enregistrez et rafra\u00eechissez, tout doit fonctionner! Remarquez! Chaque instruction javascript se terminer par un ; . Son oubli est souvent une source d'erreur... Il y a une diff\u00e9rence que l'on retrouve dans le langage python entre ma_fonc_test et ma_fonc_test() : le premier invoque le nom d'une fonction le deuxi\u00e8me l'ex\u00e9cute !", "title": "Une manipulation simple!"}, {"location": "prem/jscript.html#en-mode-debug", "text": "Souvent, le code javascript est long et complet et disons-le ne fonctionne pas toujours comme on le voudrait... Aussi prenons-nous l'habitude d'imprimer dans la console javascript l'\u00e9tat de certaines variables pour savoir si elles \u00e9voluent dans le bon sens... On retrouve cette habitude dans d'autres langages de programmation, en python par exemple... On appelle d\u00e9bugger , l'action de rechercher et corriger les erreurs d'un programme informatique. L'utilisation des print pour visualiser l'\u00e9tat des variables, permet souvent de d\u00e9bugger... Mais o\u00f9 se trouve la console javascript??? Dans Firefox, tapez F12 et vous verrez appara\u00eetre plusieurs onglets dont la console... Pour imprimer dans la console, rien de plus simple! \u00c0 faire: print dans la console... Ajouter \u00e0 la fonction ma_fonc_test() , l'instruction suivante: function ma_fonc_test (){ window . alert ( \"C'est encore mieux de faire ainsi!!\" ); console . log ( \"Ma javascript fonctionne\" ); } Enregistrez, rafra\u00eechissez et visulisez dans la console que tout va bien! \u00c9changez les deux instructions et commentez ce qui se passe. Remarquez la pr\u00e9sence du ; \u00e0 la fin de chaque instruction et la position des accolades qui englobent les deux instructions: \u00e0 l'appel de la fonction, les deux instructions sont alors ex\u00e9cut\u00e9es!", "title": "En mode debug..."}, {"location": "prem/jscript.html#bouton-et-evenements", "text": "Dans la partie pr\u00e9c\u00e9dente, nous avons: cr\u00e9er un bouton: les balises HTML du m\u00eame nom permettent de le faire associer un \u00e9v\u00e9nement \u00e0 l'appui sur ce bouton: le bouton a un attribut onclick auquel on peut asocier une fonction javascript \u00e0 condition qu'elle soit bien entendu cod\u00e9e dans le fichier js. On se propose ici de cr\u00e9er de nouvelles fonctionnalit\u00e9s pour montrer ce dont javascript est capable de faire.", "title": "Bouton et \u00e9v\u00e9nements"}, {"location": "prem/jscript.html#un-bouton-plus-style", "text": "Notre bouton n'est pas tr\u00e8s joli... modifions son style! \u00c0 faire: en mode styl\u00e9! Dans le fichier style.css , ajouter le code suivant: button { display: inline-block; background-color: #7b38d8; border-radius: 10px; border: 4px double #cccccc; color: #eeeeee; text-align: center; font-size: 28px; padding: 20px; width: 200px; transition: all 0.5s; cursor: pointer; margin: 5px; } button:hover { background-color: #f7c2f9; } Enregistrez, rafra\u00eechissez et admirez! Pour centrer le bouton, nous allons utiliser une astuce qui consiste \u00e0 la positionner dans une zone, un conteneur que nous allons centrer. Nous utiliserons alors les balises <div></div> . \u00c0 faire: utiliser un conteneur Ajouter les balises <div></div> tagg\u00e9es par la classe b_haut autour des balises <button> : < div class = \"b_haut\" >< button onclick = \"ma_fonc_test()\" > Essai </ button ></ div > Dans le css, on va indiquer que cette balise tagg\u00e9e <div> doit \u00eatre centr\u00e9e: div . b_haut { display : flex ; justify-content : center ; } Enregistrez et rafra\u00eechissez. Enfin, taggez la balise <div> contenant les autres boutons pour uniformiser notre affichage.", "title": "Un bouton plus styl\u00e9!"}, {"location": "prem/jscript.html#changement-dapparence", "text": "Les paragraphes existants ont un background-color en rgb(20,100,100) d\u00e9fini dans la feuille de style. On souhaite ici modifier cette couleur en appuyant sur notre bouton de test... L'algorithme est donc: rechercher tous les \u00e9l\u00e9ments <p> dans le DOM changer leur bg associer l'\u00e9tape 1 et 2 au clic du bouton. \u00c0 faire: changer le bg Compl\u00e9ter le fichier monpremierjs.js (inutile d'effacer son contenu existant) comme suit: function new_bg (){ const elt = document . getElementsByTagName ( \"p\" ); console . log ( elt ); elt [ 0 ]. style . backgroundColor = \"rgb(200,200,0)\" ; elt [ 1 ]. style . backgroundColor = \"#00FF00\" ; elt [ 2 ]. style . backgroundColor = \"white\" ; } Changer le nom de la fonction javascript dans l'attribut onclick : < button onclick = \"new_bg()\" > L'affichage de la constante elt permet de conna\u00eetre son type et son contenu. En fouillant un peu, on voit qu'il y a quatre paragraphes trouv\u00e9s et on peut aussi explorer leurs attributs... M\u00eame si cela fonctionne, on peut faire beaucoup mieux en utilisant les classes ou les identificateurs. \u00c0 faire: taguage g\u00e9n\u00e9ral! Taguer les balises <p> selon le principe suivant: la premier balise est <p id =\"p1\"> , la deuxi\u00e8me <p id =\"p2\"> , etc... Modifier la fonction js pr\u00e9c\u00e9dente: function new_bg (){ document . getElementById ( \"p1\" ). style . backgroundColor = \"red\" ; document . getElementById ( \"p2\" ). style . backgroundColor = \"yellow\" ; document . getElementById ( \"p3\" ). style . backgroundColor = \"purple\" ; } 3. Enregistrez et rafra\u00eechissez. On peut aussi changer d'autres styles que celui du background. Essayez par exemple les changements suivants: \u00c0 faire: quelques changements sympas! \u00c0 ajouter dans le corps de la fonction pr\u00e9c\u00e9dente (entre les accolades sinon cela ne fonctionnera pas...) document . getElementById ( \"p1\" ). style . visibility = 'hidden' ; document . getElementById ( \"p2\" ). style . border = \"dashed red\" ; document . getElementById ( \"p3\" ). style . fontSize = \"500%\" ; document . getElementById ( \"p3\" ). style . fontFamily = \"Brush Script MT\" ; En r\u00e9sum\u00e9! On tague les diff\u00e9rents \u00e9l\u00e9ments du DOM afin de pouvoir y acc\u00e9der par un programme javascript: si on tague par un id alors la recherche se fait par l'instruction document.getElementById(nom_id) si on tague par une classe alors la recherche se fait par l'instruction document.getElementByClassName(nom_class) Exercice de synth\u00e8se Supprimez le premier bouton du document HTML puis: en appuyant sur le bouton de gauche, le style des paragraphes changent : vous changerez les couleurs, les fontes, les tailles, ... et chaque paragraphe aura son propre style. en appuyant sur le bouton de droite, le style revient dans sa configuration originale... pour les meilleurs d'entre vous, changez aussi le style des listes (balises <ul> )!", "title": "Changement d'apparence"}, {"location": "prem/jscript.html#creation-de-nouveaux-objets-dans-le-dom", "text": "Le javascript permet aussi de modifier ou cr\u00e9er du contenant dans le document HTML himself! \u00c0 faire: modifier un fils... Ins\u00e9rer apr\u00e8s la balise <body> , le code HTML suivant: < div class = \"b_haut\" >< button onclick = \"ma_fonc_bonjour()\" > Essai </ button ></ div > < p id = \"demo\" ></ p > Cela cr\u00e9e le bouton que nous avions effac\u00e9 \u00e0 l'exercice pr\u00e9c\u00e9dent et un paragraphe vide... Cr\u00e9er un nouveau fichier javascript avec notepad, nomm\u00e9 monscript.js que vous enregistrez dans le dossier js . Ajoutez-y le code suivant: function ma_fonc_bonjour (){ document . getElementById ( \"demo\" ). innerHTML = \"Bonjour, nous sommes le \" + Date (); } Enfin, n'oubliez pas de changer le chemin de la source js dans les balises <script> pour pointer vers le bon fichier js... Enregistrez, rafra\u00eechissez et visualisez... En r\u00e9sum\u00e9! La m\u00e9thode .innerTHML permet de modifier le contenu d'une balise HTML \u00c0 faire:Utiliser la m\u00e9thode .innerTHML Taguer le premier titre <h1> par id = premiertitre . Compl\u00e9ter la fonction pr\u00e9c\u00e9dente pour que ce titre change en Qu'est ce que le Javascript? L'affichage de l'heure est dynamique mais invariant: quiconque appuie sur le bouton verra le m\u00eame message. Ne peut-on pas personnaliser cet affichage? \u00c0 faire: ouvrir une fen\u00eatre de saisie Dans le fichier monscript.js , ajoutez le code suivant: function debut (){ nom = window . prompt ( \"Donner votre nom avant de commencer!\" ); document . getElementById ( \"nom\" ). innerHTML = \"C'est parti!, \" + nom ; } Changer l' id du paragraphe <p> de demo en nom . Enfin, associer au clic de bouton la bonne fonction: < button onclick = \"ma_fonc_bonjour()\" > Autre possibilit\u00e9: ins\u00e9rer une zone de saisie au sein du document HTML. \u00c0 faire: ins\u00e9rer une zone de saisie Ajouter le code HTML suivant sous le premier paragraphe(celui o\u00f9 id = nom ): < h1 > Donner votre \u00e2ge </ h1 > < div id = \"zone_saisie\" > < input id = \"choix_age\" pattern = \"[0-9]{2}\" value = 16 > < button type = \"button\" onclick = \"affiche_age()\" > Valider </ button > </ div > < p id = \"age\" ></ p > Ajouter la fonction javascript suivante dans le fichier monscript.js . function affiche_age (){ let choix = document . getElementById ( \"choix_age\" ). value ; const d = new Date (); const an = d . getFullYear () - choix document . getElementById ( \"age\" ). innerHTML = \"Vous \u00eates n\u00e9 en \" + an ; } Et si vous voulez centrer tout cela, ajouter \u00e0 la feuille de style, les instructions suivantes: # zone_saisie { display : flex ; justify-content : center ; } Les exemples pr\u00e9c\u00e9dents montrent des usages r\u00e9pandus du javascript: modification du DOM, interaction avec l'utilisateur, ... Bien entendu les possibilit\u00e9s sont vastes mais on peut d\u00e9j\u00e0 faire beaucoup de chose... Exercice de synth\u00e8se Construire une page web qui permet de saisir deux nombres et d'afficher leur somme. M\u00eame exercice mais les nombres saisis sont binaires!", "title": "Cr\u00e9ation de nouveaux objets dans le DOM"}, {"location": "prem/premnsi.html", "text": "Premi\u00e8re NSI \u00b6 Programme de la classe \u00b6 Le programme de la sp\u00e9cialit\u00e9 NSI en classe de premi\u00e8re ici Les documents d'accompagnement l\u00e0", "title": "Accueil"}, {"location": "prem/premnsi.html#premiere-nsi", "text": "", "title": "Premi\u00e8re NSI"}, {"location": "prem/premnsi.html#programme-de-la-classe", "text": "Le programme de la sp\u00e9cialit\u00e9 NSI en classe de premi\u00e8re ici Les documents d'accompagnement l\u00e0", "title": "Programme de la classe"}, {"location": "prem/testpyodide.html", "text": "Int\u00e9grer Pyodide dans mkdocs pour tester du code \u00b6 ### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder", "title": "IDE en ligne"}, {"location": "prem/testpyodide.html#integrer-pyodide-dans-mkdocs-pour-tester-du-code", "text": "### Lancer T\u00e9l\u00e9charger T\u00e9l\u00e9verser Recharger Sauvegarder", "title": "Int\u00e9grer Pyodide dans mkdocs pour tester du code"}, {"location": "prem/widget.html", "text": "CREATION DE WIDGET PAR LA BIBLIOTHEQUE TKINTER \u00b6 Il s'agit dans ce travail d'utiliser les constructeurs et les m\u00e9thodes de la biblioth\u00e8ques Tkinter afin de r\u00e9aliser des interfaces graphiques (bouton, champ de saisie, \u00e9chelle, label, fen\u00eatre,...) et tout cela dans le langage python . L'apprentissage se r\u00e9sume \u00e0 l'\u00e9laboration de la fen\u00eatre ci-dessous qui donne la couleur obtenue dans le m\u00e9lange des trois composantes RGB (Red Green Blue): \u00c9tape1: Construction de la fen\u00eatre m\u00e8re L'id\u00e9e principale est de construire un conteneur principal, l'\u00e9l\u00e9ment m\u00e8re qui va contenir d'autres \u00e9l\u00e9ments filles . Le code Python est donn\u00e9 ci-apr\u00e8s. from tkinter import * ################################################### fen = Tk () fen . title ( \"Visualisation des couleurs\" ) fen . resizable ( False , False ) fen . iconbitmap ( 'logoNSIsite.ico' ) ################################################### ######################CONSTRUCTEURS ################ ################################################### fen . mainloop () Le constructeur principal est l'\u00e9l\u00e9ment fen : on lui applique des m\u00e9thodes explicites qui changent son titre, la possibilit\u00e9 de redimensionner et l'ic\u00f4ne de la fen\u00eatre principale.Il y a d'autres possibilit\u00e9s que je vous laisse d\u00e9couvrir en toute autonomie... \u00c0 faire: personnaliser sa fen\u00eatre Recopier le code pr\u00e9c\u00e9dent que vous enregistrez sous le nom interface_couleur.py dans un dossier TP_interface_graphique Personnalisez votre fen\u00eatre en changeant le titre et en trouvant un logo qui vous correspond. Attention ce logo doit \u00eatre un fichier .ico et doit \u00eatre situ\u00e9 \u00e0 la racine de votre projet(ou alors dans un dossier d\u00e9di\u00e9...)! Il existe de nombreuses fa\u00e7ons de convertir une image au format png vers le format ico . \u00c9tape2: ajouter les \u00e9l\u00e9ments filles La fen\u00eatre que nous devons r\u00e9aliser contient plusieurs widgets (composants graphiques): un bouton pour valider, trois champs de saisies pour le choix des couleurs, et une zone de dessin, appel\u00e9e canvas dont la couleur d'arri\u00e8re plan (le bg ) correspond aux choix faits dans les zones de saisies et une zone de texte, le label contenant le titre g\u00e9n\u00e9ral de la fen\u00eatre. On appelle les constructeurs correspondant pour la conception de ces widgets en les stockant dans des variables aux noms explicites. Les constructeurs sont par exemple Label,Button ou Entry ... \u00c0 faire: Ajouter les widgets Ajouter le code python suivant au programme pr\u00e9c\u00e9dent \u00e0 l'endroit indiqu\u00e9. Changer la couleur d'arri\u00e8re plan du canvas On peut aussi exprimer la couleur en hexad\u00e9cimal. Essayez l'instruction bg= '#FF00FF' puis une autre de votre choix. ######################CONSTRUCTEURS ########################### text1 = Label ( fen , text = \" Choix des couleurs\" , font = \"arial 30\" ) text1 . grid ( row = 0 , column = 0 , columnspan = 5 ) btn1 = Button ( fen , text = \"visualiser\" , width = 10 , command = fen . destroy ) btn1 . grid ( row = 1 , column = 0 , columnspan = 5 ) rou = Entry ( fen ) rou . grid ( row = 4 , column = 2 ) ver = Entry ( fen ) ver . grid ( row = 4 , column = 3 ) bleu = Entry ( fen ) bleu . grid ( row = 4 , column = 4 ) zone_couleur = Canvas ( fen , bg = 'white' ) zone_couleur . grid ( row = 5 , column = 0 , columnspan = 5 ) ################################################################ Vous remarquerez qu'\u00e0 chaque fois qu'un \u00e9l\u00e9ment est cr\u00e9\u00e9 il est positionn\u00e9 par la m\u00e9thode grid dans une grille virtuelle contenant des lignes et des colonnes. Par exemple, le Label nomm\u00e9 text1 est positionn\u00e9 dans la premi\u00e8re ligne ( row = 0 ), dans la premi\u00e8re colonne ( column = 0 ) et s' \u00e9tend sur 5 colonnes( columnspan = 5 ). Il existe plusieurs gestionnaires de positionnement mais nous utiliserons en g\u00e9n\u00e9ral la m\u00e9thode grid . Attention! Si vous oubliez de positionner un widget, il ne sera pas pris en compte. Tous les widgets cr\u00e9\u00e9s ont des attributs : par exemple l'\u00e9l\u00e9ment btn1 est situ\u00e9 dans le conteneur parent fen , poss\u00e8de un attribut text de type cha\u00eene de caract\u00e8res, correspondant au texte affich\u00e9 sur le bouton. L'attribut command d\u00e9signe l'action \u00e0 r\u00e9aliser lorsque on appuie sur le bouton. Ici, l'appui sur le bouton d\u00e9truit l'\u00e9l\u00e9ment parent fen et donc aussi, tous ses fils et filles... donc tous les autres widgets. On changera cette fonction plus tard dans ce travail pour que l'action du bouton colore la partie canvas . \u00c9tape3: les variables globales Une variable globale est une variable qui peut \u00eatre appel\u00e9e partout dans le programme. Nous souhaiterions ici cr\u00e9er trois variables qui seront associer \u00e0 la valeur saisie dans les champs pr\u00e9vus \u00e0 cet effet. Dans tkinter , les variables globales sont les variables de contr\u00f4le (voir ici ): elles sont associ\u00e9es \u00e0 la valeur ou au texte saisie dans les widgets qui le permettent! \u00c0 faire: Ajouter des variables de contr\u00f4les Ajouter le code python suivant juste apr\u00e8s l'instruction fen.iconbitmap . r = StringVar ( value = '12' ) Modifier le constructeur Entry nomm\u00e9 rou en lui ajoutant l'attribut textvariable = r comme ceci: rou = Entry ( fen , textvariable = r ) Quelques explications! La variable r est une variable globale de stype string , initialis\u00e9e \u00e0 12, associ\u00e9e \u00e0 la valeur saisie dans l'entr\u00e9e rou . Si vous proposez une valeur dans cette entr\u00e9e elle sera alors affect\u00e9e \u00e0 la valeur de r . Cette association est possible gr\u00e2ce \u00e0 l'attribut textvariable du constructeur rou auquel on a associ\u00e9 la variable r . \u00c0 faire: Compl\u00e9ter les variables de contr\u00f4les Cr\u00e9er les variables de contr\u00f4les v et b , de type cha\u00eene de caract\u00e8re, initialis\u00e9e respectivement \u00e0 200 et 100. Ajouter les attributs textvariable aux entr\u00e9es ver et bleu en leur affectant les variables pr\u00e9c\u00e9demment d\u00e9finies. \u00c9tape4: Colorer le canvas La prochaine \u00e9tape consiste \u00e0 colorer le background du canvas zone_couleur avec la couleur d\u00e9finie \u00e0 l'aide des valeurs des variables r,v et b . C'est l'appui sur le bouton qui d\u00e9clenchera l'action de coloriage. Les couleurs accept\u00e9es L'attribut bg d'un canvas n'accepte des couleurs que sous deux formes: sous forme de nom comme 'white' , 'red', 'blue', ... sous forme hexad\u00e9cimale #FF00AA par exemple Mais probl\u00e8me! Les couleurs saisies sont d\u00e9cimales. Il faut donc construire un outil qui prend en entr\u00e9e un triplet comme (12,200,100) et le transforme en '#0CC864' . Nous allons pour cela cr\u00e9er la fonction rgb_10to16 qui prend en param\u00e8tre un tuple de trois couleurs et retourne une cha\u00eene de caract\u00e8res format\u00e9e et r\u00e9pondant \u00e0 notre besoin. \u00c0 faire: Ajouter une fonction Ajouter le code python suivant apr\u00e8s la variable b: ############# ACTIONS ############################ def rgb_10to16 ( t ): return \"# %.2x \" % t [ 0 ] + \" %.2x \" % t [ 1 ] + \" %.2x \" % t [ 2 ] Rappelez le nom de l'op\u00e9ration + pour les cha\u00eenes de caract\u00e8res. Expliquer le r\u00f4le de l'instruction .2x Justifier que cette fonction retourne une cha\u00eene de caract\u00e8res. Testez votre fonction en console sur des entr\u00e9es simples comme (255, 0, 0) \u00c0 ce stade, il reste l'\u00e9tape qui consiste \u00e0 colorer le canvas \u00e0 l'appui sur le bouton visualiser ... \u00c9tape5: Cr\u00e9ation de la fonction de coloriage Nous allons cr\u00e9er la fonction colorer qui: r\u00e9cup\u00e8re la valeur d\u00e9cimale des trois entr\u00e9es convertit le triplet en cha\u00eene hexad\u00e9cimale change la couleur du background du canvas en cons\u00e9quence. \u00c0 faire: Compl\u00e9ter le code Ajouter la fonction suivante apr\u00e8s la pr\u00e9c\u00e9dente: def colorer (): rouge = int ( r . get ()) vert = int ( v . get ()) bleu = int ( b . get ()) zone_couleur [ 'bg' ] = rgb_10to16 (( rouge , vert , bleu )) Changer la valeur de l'attribut command du bouton btn1 en lui donnant la valeur colorer (sans parenth\u00e8ses...) Ex\u00e9cuter le code, tout devrait bien fonctionner! Pour r\u00e9cup\u00e9rer la valeur d'une variable globale ( r par exemple), on lui applique la m\u00e9thode .get() . Ainsi l'instruction r.get() contient la valeur de r mais prudence : cette instruction retourne une cha\u00eene de caract\u00e8res. On comprend mieux alors l'instruction int dans int(r.get()) qui transforme la cha\u00eene de caract\u00e8res en entier... Enfin, l'instruction zone_couleur['bg'] = rgb_10to16((rouge, vert, bleu)) red\u00e9finit clairement l'attribut 'bg' de zone_couleur ! Pour information Nous n'avons pas justifier l'instruction fen.mainloop() : elle rend l'objet fen sensible aux \u00e9v\u00e9nements ext\u00e9rieurs comme l'appui d'un clic de souris ou du clavier. Elle \u00e9coute en continue ce qui se passe autour de ses constructeurs. Dommage que cette fonction n'existe pas chez nos \u00e9l\u00e8ves \ud83d\ude0a! \u00c0 faire:utiliser une \u00e9chelle Au lieu de saisir les valeurs, on souhaite utiliser des \u00e9chelles qui permettent \u00e0 l'aide de curseur de choisir la valeur de la composante de rouge, de vert ou de bleu(voir ci-dessous...). Documentez-vous par exemple ici et remplacez les entr\u00e9es par trois \u00e9chelles.", "title": "Cr\u00e9ation de widgets"}, {"location": "prem/widget.html#creation-de-widget-par-la-bibliotheque-tkinter", "text": "Il s'agit dans ce travail d'utiliser les constructeurs et les m\u00e9thodes de la biblioth\u00e8ques Tkinter afin de r\u00e9aliser des interfaces graphiques (bouton, champ de saisie, \u00e9chelle, label, fen\u00eatre,...) et tout cela dans le langage python . L'apprentissage se r\u00e9sume \u00e0 l'\u00e9laboration de la fen\u00eatre ci-dessous qui donne la couleur obtenue dans le m\u00e9lange des trois composantes RGB (Red Green Blue): \u00c9tape1: Construction de la fen\u00eatre m\u00e8re L'id\u00e9e principale est de construire un conteneur principal, l'\u00e9l\u00e9ment m\u00e8re qui va contenir d'autres \u00e9l\u00e9ments filles . Le code Python est donn\u00e9 ci-apr\u00e8s. from tkinter import * ################################################### fen = Tk () fen . title ( \"Visualisation des couleurs\" ) fen . resizable ( False , False ) fen . iconbitmap ( 'logoNSIsite.ico' ) ################################################### ######################CONSTRUCTEURS ################ ################################################### fen . mainloop () Le constructeur principal est l'\u00e9l\u00e9ment fen : on lui applique des m\u00e9thodes explicites qui changent son titre, la possibilit\u00e9 de redimensionner et l'ic\u00f4ne de la fen\u00eatre principale.Il y a d'autres possibilit\u00e9s que je vous laisse d\u00e9couvrir en toute autonomie... \u00c0 faire: personnaliser sa fen\u00eatre Recopier le code pr\u00e9c\u00e9dent que vous enregistrez sous le nom interface_couleur.py dans un dossier TP_interface_graphique Personnalisez votre fen\u00eatre en changeant le titre et en trouvant un logo qui vous correspond. Attention ce logo doit \u00eatre un fichier .ico et doit \u00eatre situ\u00e9 \u00e0 la racine de votre projet(ou alors dans un dossier d\u00e9di\u00e9...)! Il existe de nombreuses fa\u00e7ons de convertir une image au format png vers le format ico . \u00c9tape2: ajouter les \u00e9l\u00e9ments filles La fen\u00eatre que nous devons r\u00e9aliser contient plusieurs widgets (composants graphiques): un bouton pour valider, trois champs de saisies pour le choix des couleurs, et une zone de dessin, appel\u00e9e canvas dont la couleur d'arri\u00e8re plan (le bg ) correspond aux choix faits dans les zones de saisies et une zone de texte, le label contenant le titre g\u00e9n\u00e9ral de la fen\u00eatre. On appelle les constructeurs correspondant pour la conception de ces widgets en les stockant dans des variables aux noms explicites. Les constructeurs sont par exemple Label,Button ou Entry ... \u00c0 faire: Ajouter les widgets Ajouter le code python suivant au programme pr\u00e9c\u00e9dent \u00e0 l'endroit indiqu\u00e9. Changer la couleur d'arri\u00e8re plan du canvas On peut aussi exprimer la couleur en hexad\u00e9cimal. Essayez l'instruction bg= '#FF00FF' puis une autre de votre choix. ######################CONSTRUCTEURS ########################### text1 = Label ( fen , text = \" Choix des couleurs\" , font = \"arial 30\" ) text1 . grid ( row = 0 , column = 0 , columnspan = 5 ) btn1 = Button ( fen , text = \"visualiser\" , width = 10 , command = fen . destroy ) btn1 . grid ( row = 1 , column = 0 , columnspan = 5 ) rou = Entry ( fen ) rou . grid ( row = 4 , column = 2 ) ver = Entry ( fen ) ver . grid ( row = 4 , column = 3 ) bleu = Entry ( fen ) bleu . grid ( row = 4 , column = 4 ) zone_couleur = Canvas ( fen , bg = 'white' ) zone_couleur . grid ( row = 5 , column = 0 , columnspan = 5 ) ################################################################ Vous remarquerez qu'\u00e0 chaque fois qu'un \u00e9l\u00e9ment est cr\u00e9\u00e9 il est positionn\u00e9 par la m\u00e9thode grid dans une grille virtuelle contenant des lignes et des colonnes. Par exemple, le Label nomm\u00e9 text1 est positionn\u00e9 dans la premi\u00e8re ligne ( row = 0 ), dans la premi\u00e8re colonne ( column = 0 ) et s' \u00e9tend sur 5 colonnes( columnspan = 5 ). Il existe plusieurs gestionnaires de positionnement mais nous utiliserons en g\u00e9n\u00e9ral la m\u00e9thode grid . Attention! Si vous oubliez de positionner un widget, il ne sera pas pris en compte. Tous les widgets cr\u00e9\u00e9s ont des attributs : par exemple l'\u00e9l\u00e9ment btn1 est situ\u00e9 dans le conteneur parent fen , poss\u00e8de un attribut text de type cha\u00eene de caract\u00e8res, correspondant au texte affich\u00e9 sur le bouton. L'attribut command d\u00e9signe l'action \u00e0 r\u00e9aliser lorsque on appuie sur le bouton. Ici, l'appui sur le bouton d\u00e9truit l'\u00e9l\u00e9ment parent fen et donc aussi, tous ses fils et filles... donc tous les autres widgets. On changera cette fonction plus tard dans ce travail pour que l'action du bouton colore la partie canvas . \u00c9tape3: les variables globales Une variable globale est une variable qui peut \u00eatre appel\u00e9e partout dans le programme. Nous souhaiterions ici cr\u00e9er trois variables qui seront associer \u00e0 la valeur saisie dans les champs pr\u00e9vus \u00e0 cet effet. Dans tkinter , les variables globales sont les variables de contr\u00f4le (voir ici ): elles sont associ\u00e9es \u00e0 la valeur ou au texte saisie dans les widgets qui le permettent! \u00c0 faire: Ajouter des variables de contr\u00f4les Ajouter le code python suivant juste apr\u00e8s l'instruction fen.iconbitmap . r = StringVar ( value = '12' ) Modifier le constructeur Entry nomm\u00e9 rou en lui ajoutant l'attribut textvariable = r comme ceci: rou = Entry ( fen , textvariable = r ) Quelques explications! La variable r est une variable globale de stype string , initialis\u00e9e \u00e0 12, associ\u00e9e \u00e0 la valeur saisie dans l'entr\u00e9e rou . Si vous proposez une valeur dans cette entr\u00e9e elle sera alors affect\u00e9e \u00e0 la valeur de r . Cette association est possible gr\u00e2ce \u00e0 l'attribut textvariable du constructeur rou auquel on a associ\u00e9 la variable r . \u00c0 faire: Compl\u00e9ter les variables de contr\u00f4les Cr\u00e9er les variables de contr\u00f4les v et b , de type cha\u00eene de caract\u00e8re, initialis\u00e9e respectivement \u00e0 200 et 100. Ajouter les attributs textvariable aux entr\u00e9es ver et bleu en leur affectant les variables pr\u00e9c\u00e9demment d\u00e9finies. \u00c9tape4: Colorer le canvas La prochaine \u00e9tape consiste \u00e0 colorer le background du canvas zone_couleur avec la couleur d\u00e9finie \u00e0 l'aide des valeurs des variables r,v et b . C'est l'appui sur le bouton qui d\u00e9clenchera l'action de coloriage. Les couleurs accept\u00e9es L'attribut bg d'un canvas n'accepte des couleurs que sous deux formes: sous forme de nom comme 'white' , 'red', 'blue', ... sous forme hexad\u00e9cimale #FF00AA par exemple Mais probl\u00e8me! Les couleurs saisies sont d\u00e9cimales. Il faut donc construire un outil qui prend en entr\u00e9e un triplet comme (12,200,100) et le transforme en '#0CC864' . Nous allons pour cela cr\u00e9er la fonction rgb_10to16 qui prend en param\u00e8tre un tuple de trois couleurs et retourne une cha\u00eene de caract\u00e8res format\u00e9e et r\u00e9pondant \u00e0 notre besoin. \u00c0 faire: Ajouter une fonction Ajouter le code python suivant apr\u00e8s la variable b: ############# ACTIONS ############################ def rgb_10to16 ( t ): return \"# %.2x \" % t [ 0 ] + \" %.2x \" % t [ 1 ] + \" %.2x \" % t [ 2 ] Rappelez le nom de l'op\u00e9ration + pour les cha\u00eenes de caract\u00e8res. Expliquer le r\u00f4le de l'instruction .2x Justifier que cette fonction retourne une cha\u00eene de caract\u00e8res. Testez votre fonction en console sur des entr\u00e9es simples comme (255, 0, 0) \u00c0 ce stade, il reste l'\u00e9tape qui consiste \u00e0 colorer le canvas \u00e0 l'appui sur le bouton visualiser ... \u00c9tape5: Cr\u00e9ation de la fonction de coloriage Nous allons cr\u00e9er la fonction colorer qui: r\u00e9cup\u00e8re la valeur d\u00e9cimale des trois entr\u00e9es convertit le triplet en cha\u00eene hexad\u00e9cimale change la couleur du background du canvas en cons\u00e9quence. \u00c0 faire: Compl\u00e9ter le code Ajouter la fonction suivante apr\u00e8s la pr\u00e9c\u00e9dente: def colorer (): rouge = int ( r . get ()) vert = int ( v . get ()) bleu = int ( b . get ()) zone_couleur [ 'bg' ] = rgb_10to16 (( rouge , vert , bleu )) Changer la valeur de l'attribut command du bouton btn1 en lui donnant la valeur colorer (sans parenth\u00e8ses...) Ex\u00e9cuter le code, tout devrait bien fonctionner! Pour r\u00e9cup\u00e9rer la valeur d'une variable globale ( r par exemple), on lui applique la m\u00e9thode .get() . Ainsi l'instruction r.get() contient la valeur de r mais prudence : cette instruction retourne une cha\u00eene de caract\u00e8res. On comprend mieux alors l'instruction int dans int(r.get()) qui transforme la cha\u00eene de caract\u00e8res en entier... Enfin, l'instruction zone_couleur['bg'] = rgb_10to16((rouge, vert, bleu)) red\u00e9finit clairement l'attribut 'bg' de zone_couleur ! Pour information Nous n'avons pas justifier l'instruction fen.mainloop() : elle rend l'objet fen sensible aux \u00e9v\u00e9nements ext\u00e9rieurs comme l'appui d'un clic de souris ou du clavier. Elle \u00e9coute en continue ce qui se passe autour de ses constructeurs. Dommage que cette fonction n'existe pas chez nos \u00e9l\u00e8ves \ud83d\ude0a! \u00c0 faire:utiliser une \u00e9chelle Au lieu de saisir les valeurs, on souhaite utiliser des \u00e9chelles qui permettent \u00e0 l'aide de curseur de choisir la valeur de la composante de rouge, de vert ou de bleu(voir ci-dessous...). Documentez-vous par exemple ici et remplacez les entr\u00e9es par trois \u00e9chelles.", "title": "CREATION DE WIDGET PAR LA BIBLIOTHEQUE TKINTER"}, {"location": "term/complex_struc.html", "text": "Complexit\u00e9 des structures de donn\u00e9es lin\u00e9aires \u00b6 D\u00e9finissons nos objets! \u00b6 En informatique, les listes et les tableaux sont des structures de donn\u00e9es abstraites permettant de stocker de fa\u00e7on ordonn\u00e9e des \u00e9l\u00e9ments. Ce que dit Wikip\u00e9dia sur les listes... En informatique, une liste est une structure de donn\u00e9es permettant de regrouper des donn\u00e9es de mani\u00e8re \u00e0 pouvoir y acc\u00e9der librement (contrairement aux files et aux piles, dont l'acc\u00e8s se fait respectivement en mode FIFO et LIFO). Le c\u00e9l\u00e8bre site donne aussi les premi\u00e8res primitives qui op\u00e9rent sur cette structure: Insertion, Suppression, Pr\u00e9dicat(la liste est-elle vide?), D\u00e9nombrement,... Ce que dit Wikip\u00e9dia sur les tableaux... En informatique, un tableau est une structure de donn\u00e9es repr\u00e9sentant une s\u00e9quence finie d'\u00e9l\u00e9ments auxquels on peut acc\u00e9der efficacement par leur position, ou indice, dans la s\u00e9quence. C'est un type de conteneur que l'on retrouve dans un grand nombre de langages de programmation. Le langage Python cr\u00e9e une ambiguit\u00e9 dans les d\u00e9finitions de ces deux types. En effet, parmi les listes, on peut distinguer de mani\u00e8re g\u00e9n\u00e9rale de deux types: les tableaux les listes cha\u00een\u00e9es Dans cette le\u00e7on, nous nous int\u00e9resserons \u00e0 : la mani\u00e8re dont ces structures sont stock\u00e9es en m\u00e9moire la complexit\u00e9 des op\u00e9rations de bases(insertion, suppression, parcours,...) sur ces structures Nous finirons par d\u00e9finir la notion d\u00e9j\u00e0 connue de dictionnaire avec de nouvelles consid\u00e9rations... Impl\u00e9mentation des tableaux en m\u00e9moire \u00b6 Consid\u00e9rons le tableau de quatre \u00e9l\u00e9ments : 200, 3, 175, 8900 que nous souhaitons stocker en m\u00e9moire. Contrairement au langage Python o\u00f9 la manipulation est ais\u00e9e, la d\u00e9claration des tableaux dans le langage C est plus rigoureuse: int tab [ 4 ] //declaration du tableau tab de 4 elements du m\u00eame type int Chaque entier est cod\u00e9 sur 16 bits(ou 32), soit 2 octets: il faut donc r\u00e9server en m\u00e9moire 4 cases de 2 octets pour stocker ce tableau. En supposant que la m\u00e9moire d'un ordinateur est un long, tr\u00e8s long, ruban de cases alors l' allocation en m\u00e9moire du tableau peut s'illustrer ainsi: Les cases vides mod\u00e9lisent des emplacements m\u00e9moires vides ou contenant d'autres donn\u00e9es... L'adresse du tableau est #A (valeur hexad\u00e9cimale sur deux octets) et c'est aussi celle de tab[0] . Celle de tab[i] est alors #A+i*2 ... Donc comme le pr\u00e9cise le site openclassrooms : Impl\u00e9mentation en m\u00e9moire des tableaux statiques Lorsqu'un tableau est cr\u00e9\u00e9, il prend un espace contigu en m\u00e9moire : les cases sont les unes \u00e0 la suite des autres. Toutes les cases d'un tableau sont du m\u00eame type. Ainsi, un tableau de int contiendra uniquement des int , et pas autre chose. Naturellement, il est donc interdit de cr\u00e9er un tableau dont la taille d\u00e9pend de la valeur d'une variable: c'est ce que nous appelons une allocation dynamique , et c'est un peu ce que fait Python dans la gestion transparente de ses listes! Avantages et inconv\u00e9nients de cette structure \u00b6 L'acc\u00e8s \u00e0 un \u00e9l\u00e9ment du tableau se fait en temps constant : en d'autres termes, si n est la taille du tableau, l'acc\u00e8s ne d\u00e9pend pas de n . Pour l'insertion d'un nouveau \u00e9l\u00e9ment dans le tableau, il faut allouer un nouvel espace m\u00e9moire qui passe par la recopie de tous les \u00e9l\u00e9ments du tableau auquel on ajoute le nouveau. Cette op\u00e9ration d\u00e9pend de la taille n du tableau et son temps d'ex\u00e9cution lui est proportionnel ! Complexit\u00e9 des op\u00e9rations sur un tableau statique L' acc\u00e8s \u00e0 un \u00e9l\u00e9ment d'un tableau statique est en O(1) et l'ajout est en O(n) . Et d'apr\u00e8s vous? Quelle est la complexit\u00e9 de la suppression d'un \u00e9l\u00e9ment? Impl\u00e9mentation des listes cha\u00een\u00e9es \u00b6 L'\u00e9l\u00e9ment de base pour la cr\u00e9ation d'une liste cha\u00een\u00e9e est le maillon constitu\u00e9 de: sa valeur en premier un pointeur en second, qui d\u00e9signe l'adresse m\u00e9moire du suivant dans la structure (adresse \u00e9ventuellement nulle pour d\u00e9signer le dernier!) La liste est ainsi cha\u00een\u00e9e par une succession de maillon chacun pointant vers le suivant, le dernier ayant un pointeur nul ( NULL ). Les valeurs de la liste ne sont plus stock\u00e9es \u00e0 des endroits contigus de la m\u00e9moire. Avantages et inconv\u00e9nients de cette structure \u00b6 Pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment quelconque de la liste, il n'y a pas de choix: il faut parcourir la liste \u00e0 partir du premier. Ce parcours d\u00e9pend \u00e9videmment de la taille n de la structure. La complexit\u00e9 de l'op\u00e9ration est proportionnelle \u00e0 n . En revanche, l'insertion d'un \u00e9l\u00e9ment est \u00e0 op\u00e9ration constante. Le dessin ci-dessous montre les \u00e9tapes d'insertion dans une liste cha\u00een\u00e9e: L'algorithme lorsque qu'on souhaite ins\u00e9rer -13 en deuxi\u00e8me position est: On d\u00e9truit le pointeur de la premi\u00e8re. On d\u00e9finit ce pointeur vers la valeur du maillon portant la valeur -13 . On d\u00e9finit le pointeur du maillon ins\u00e9r\u00e9 vers la valeur du suivant dans la cha\u00eene. Ces trois op\u00e9rations sont ind\u00e9pendantes de la taille de la liste cha\u00een\u00e9e: l'insertion se fait en temps constant . En r\u00e9sum\u00e9: Op\u00e9rations Tableau statique Listes cha\u00een\u00e9es Acc\u00e9s \u00e0 un \u00e9l\u00e9ment O(1) O(n) Insertion ou suppression O(n) O(1) On pourrait \u00e9voquer la complexit\u00e9 d'autres op\u00e9rations \u00e9l\u00e9mentaires comme l'ajout ou la suppression au d\u00e9but, \u00e0 la fin,... ce que nous ferons en exercices. Nous pourrions aussi \u00e9voquer la notion de listes doublement cha\u00een\u00e9es constitu\u00e9es de maillon qui pointe vers les maillons suivants et pr\u00e9c\u00e9dents. En revanche, si elles am\u00e9liorent la complexit\u00e9 de certaines op\u00e9rations, elles contiennent plus d'informations, donc plus de m\u00e9moire! Enfin, m\u00eame si le programme de NSI ne les \u00e9voque pas, les tableaux dynamiques sont des structures hybrides qui permettent de conserver la complexit\u00e9 en temps constant des tableaux statiques et de permettre l'insertion aussi en temps constant. Nous n'en dirons pas plus sur le sujet... Les dictionnaires \u00b6 Une d\u00e9finition Un dictionnaire est un ensemble de cl\u00e9s/valeurs( C/V ) dont les composantes sont appel\u00e9es via un descripteur (la cl\u00e9!) et non pas un indice. Depuis la classe de premi\u00e8re, nous connaissons les op\u00e9rations de bases permises sur un dictionnaire et leur syntaxe en python : Op\u00e9rations Code python Cr\u00e9er un dictionnaire vide d = [] Ajouter une association c,v d[\"Maths\"] = 18 Lire la valeur v d'une cl\u00e9 c d[\"Maths\"] Mais par exemple, il n'existe pas de primitive simple qui retourne la cl\u00e9 d'une valeur! L'impl\u00e9mentation du type dictionnaire doit permettre de r\u00e9aliser ces trois op\u00e9rations de base en temps d'ex\u00e9cution efficace. On cherche id\u00e9alement une complexit\u00e9 en O(1) pour la recherche, l'insertion ou la suppression. Comment faire? Le hachage Python a choisi les tables de hachages pour cette impl\u00e9mentation. Pour comprendre, il faut d'abord d\u00e9finir une fonction de hachage : Ce que dit Wikip\u00e9dia ... On nomme fonction de hachage, de l'anglais hash function (hash : pagaille, d\u00e9sordre, recouper et m\u00e9langer) par analogie avec la cuisine, une fonction particuli\u00e8re qui, \u00e0 partir d'une donn\u00e9e fournie en entr\u00e9e, calcule une empreinte num\u00e9rique servant \u00e0 identifier rapidement la donn\u00e9e initiale, au m\u00eame titre qu'une signature pour identifier une personne. Je reprends aussi les termes pertinents de l'encyclop\u00e9die : R\u00f4le d'une fonction de haschage On peut voir une fonction de hachage comme un moyen de replier l'espace de donn\u00e9es que l'on suppose potentiellement tr\u00e8s grand et tr\u00e8s peu rempli pour le faire entrer dans la m\u00e9moire de l'ordinateur. Le principe est d'utiliser les empreintes des cl\u00e9s comme indices des \u00e9l\u00e9ments de la table. Ces empreintes sont des nombres entiers obtenus en hachant la cl\u00e9 des objets \u00e0 stocker, souvent une cha\u00eene de caract\u00e8res. On peut ensuite retrouver l'objet associ\u00e9 \u00e0 une cl\u00e9 donn\u00e9e : il suffit de hacher la cl\u00e9 pour obtenir une empreinte et de lire dans le tableau l'\u00e9l\u00e9ment dont l'indice est cette empreinte.Au final, la complexit\u00e9 d\u2019une insertion et d\u2019une lecture dans une table de hachage sera \u00ab en moyenne \u00bb en O(1) . Les algorithme de hachage et les mots de passe Les mots de passe ne sont pas stock\u00e9s en clair: c'est leur empreinte obtenu par un algorithme de hachage ( SHA-256 par exemple) qui est utilis\u00e9. Cet algorithme produit un condensat de 256 bits. Mais, il faut \u00eatre certain que la fonction de hachage choisit remplit bien son r\u00f4le: \u00e0 chaque entr\u00e9e, elle doit associer une empreinte num\u00e9rique unique . On parle de collision si deux entr\u00e9es diff\u00e9rentes ont une empreinte num\u00e9rique \u00e9gale (en maths, on dirait que la fonction n'est pas injective...). La fonction de hachage du SHA-256 a remplac\u00e9 celle du MD5 qui cr\u00e9ait beaucoup de collision.", "title": "Complexit\u00e9 des structures"}, {"location": "term/complex_struc.html#complexite-des-structures-de-donnees-lineaires", "text": "", "title": "Complexit\u00e9 des structures de donn\u00e9es lin\u00e9aires"}, {"location": "term/complex_struc.html#definissons-nos-objets", "text": "En informatique, les listes et les tableaux sont des structures de donn\u00e9es abstraites permettant de stocker de fa\u00e7on ordonn\u00e9e des \u00e9l\u00e9ments. Ce que dit Wikip\u00e9dia sur les listes... En informatique, une liste est une structure de donn\u00e9es permettant de regrouper des donn\u00e9es de mani\u00e8re \u00e0 pouvoir y acc\u00e9der librement (contrairement aux files et aux piles, dont l'acc\u00e8s se fait respectivement en mode FIFO et LIFO). Le c\u00e9l\u00e8bre site donne aussi les premi\u00e8res primitives qui op\u00e9rent sur cette structure: Insertion, Suppression, Pr\u00e9dicat(la liste est-elle vide?), D\u00e9nombrement,... Ce que dit Wikip\u00e9dia sur les tableaux... En informatique, un tableau est une structure de donn\u00e9es repr\u00e9sentant une s\u00e9quence finie d'\u00e9l\u00e9ments auxquels on peut acc\u00e9der efficacement par leur position, ou indice, dans la s\u00e9quence. C'est un type de conteneur que l'on retrouve dans un grand nombre de langages de programmation. Le langage Python cr\u00e9e une ambiguit\u00e9 dans les d\u00e9finitions de ces deux types. En effet, parmi les listes, on peut distinguer de mani\u00e8re g\u00e9n\u00e9rale de deux types: les tableaux les listes cha\u00een\u00e9es Dans cette le\u00e7on, nous nous int\u00e9resserons \u00e0 : la mani\u00e8re dont ces structures sont stock\u00e9es en m\u00e9moire la complexit\u00e9 des op\u00e9rations de bases(insertion, suppression, parcours,...) sur ces structures Nous finirons par d\u00e9finir la notion d\u00e9j\u00e0 connue de dictionnaire avec de nouvelles consid\u00e9rations...", "title": "D\u00e9finissons nos objets!"}, {"location": "term/complex_struc.html#implementation-des-tableaux-en-memoire", "text": "Consid\u00e9rons le tableau de quatre \u00e9l\u00e9ments : 200, 3, 175, 8900 que nous souhaitons stocker en m\u00e9moire. Contrairement au langage Python o\u00f9 la manipulation est ais\u00e9e, la d\u00e9claration des tableaux dans le langage C est plus rigoureuse: int tab [ 4 ] //declaration du tableau tab de 4 elements du m\u00eame type int Chaque entier est cod\u00e9 sur 16 bits(ou 32), soit 2 octets: il faut donc r\u00e9server en m\u00e9moire 4 cases de 2 octets pour stocker ce tableau. En supposant que la m\u00e9moire d'un ordinateur est un long, tr\u00e8s long, ruban de cases alors l' allocation en m\u00e9moire du tableau peut s'illustrer ainsi: Les cases vides mod\u00e9lisent des emplacements m\u00e9moires vides ou contenant d'autres donn\u00e9es... L'adresse du tableau est #A (valeur hexad\u00e9cimale sur deux octets) et c'est aussi celle de tab[0] . Celle de tab[i] est alors #A+i*2 ... Donc comme le pr\u00e9cise le site openclassrooms : Impl\u00e9mentation en m\u00e9moire des tableaux statiques Lorsqu'un tableau est cr\u00e9\u00e9, il prend un espace contigu en m\u00e9moire : les cases sont les unes \u00e0 la suite des autres. Toutes les cases d'un tableau sont du m\u00eame type. Ainsi, un tableau de int contiendra uniquement des int , et pas autre chose. Naturellement, il est donc interdit de cr\u00e9er un tableau dont la taille d\u00e9pend de la valeur d'une variable: c'est ce que nous appelons une allocation dynamique , et c'est un peu ce que fait Python dans la gestion transparente de ses listes!", "title": "Impl\u00e9mentation des tableaux en m\u00e9moire"}, {"location": "term/complex_struc.html#avantages-et-inconvenients-de-cette-structure", "text": "L'acc\u00e8s \u00e0 un \u00e9l\u00e9ment du tableau se fait en temps constant : en d'autres termes, si n est la taille du tableau, l'acc\u00e8s ne d\u00e9pend pas de n . Pour l'insertion d'un nouveau \u00e9l\u00e9ment dans le tableau, il faut allouer un nouvel espace m\u00e9moire qui passe par la recopie de tous les \u00e9l\u00e9ments du tableau auquel on ajoute le nouveau. Cette op\u00e9ration d\u00e9pend de la taille n du tableau et son temps d'ex\u00e9cution lui est proportionnel ! Complexit\u00e9 des op\u00e9rations sur un tableau statique L' acc\u00e8s \u00e0 un \u00e9l\u00e9ment d'un tableau statique est en O(1) et l'ajout est en O(n) . Et d'apr\u00e8s vous? Quelle est la complexit\u00e9 de la suppression d'un \u00e9l\u00e9ment?", "title": "Avantages et inconv\u00e9nients de cette structure"}, {"location": "term/complex_struc.html#implementation-des-listes-chainees", "text": "L'\u00e9l\u00e9ment de base pour la cr\u00e9ation d'une liste cha\u00een\u00e9e est le maillon constitu\u00e9 de: sa valeur en premier un pointeur en second, qui d\u00e9signe l'adresse m\u00e9moire du suivant dans la structure (adresse \u00e9ventuellement nulle pour d\u00e9signer le dernier!) La liste est ainsi cha\u00een\u00e9e par une succession de maillon chacun pointant vers le suivant, le dernier ayant un pointeur nul ( NULL ). Les valeurs de la liste ne sont plus stock\u00e9es \u00e0 des endroits contigus de la m\u00e9moire.", "title": "Impl\u00e9mentation des listes cha\u00een\u00e9es"}, {"location": "term/complex_struc.html#avantages-et-inconvenients-de-cette-structure_1", "text": "Pour acc\u00e9der \u00e0 un \u00e9l\u00e9ment quelconque de la liste, il n'y a pas de choix: il faut parcourir la liste \u00e0 partir du premier. Ce parcours d\u00e9pend \u00e9videmment de la taille n de la structure. La complexit\u00e9 de l'op\u00e9ration est proportionnelle \u00e0 n . En revanche, l'insertion d'un \u00e9l\u00e9ment est \u00e0 op\u00e9ration constante. Le dessin ci-dessous montre les \u00e9tapes d'insertion dans une liste cha\u00een\u00e9e: L'algorithme lorsque qu'on souhaite ins\u00e9rer -13 en deuxi\u00e8me position est: On d\u00e9truit le pointeur de la premi\u00e8re. On d\u00e9finit ce pointeur vers la valeur du maillon portant la valeur -13 . On d\u00e9finit le pointeur du maillon ins\u00e9r\u00e9 vers la valeur du suivant dans la cha\u00eene. Ces trois op\u00e9rations sont ind\u00e9pendantes de la taille de la liste cha\u00een\u00e9e: l'insertion se fait en temps constant . En r\u00e9sum\u00e9: Op\u00e9rations Tableau statique Listes cha\u00een\u00e9es Acc\u00e9s \u00e0 un \u00e9l\u00e9ment O(1) O(n) Insertion ou suppression O(n) O(1) On pourrait \u00e9voquer la complexit\u00e9 d'autres op\u00e9rations \u00e9l\u00e9mentaires comme l'ajout ou la suppression au d\u00e9but, \u00e0 la fin,... ce que nous ferons en exercices. Nous pourrions aussi \u00e9voquer la notion de listes doublement cha\u00een\u00e9es constitu\u00e9es de maillon qui pointe vers les maillons suivants et pr\u00e9c\u00e9dents. En revanche, si elles am\u00e9liorent la complexit\u00e9 de certaines op\u00e9rations, elles contiennent plus d'informations, donc plus de m\u00e9moire! Enfin, m\u00eame si le programme de NSI ne les \u00e9voque pas, les tableaux dynamiques sont des structures hybrides qui permettent de conserver la complexit\u00e9 en temps constant des tableaux statiques et de permettre l'insertion aussi en temps constant. Nous n'en dirons pas plus sur le sujet...", "title": "Avantages et inconv\u00e9nients de cette structure"}, {"location": "term/complex_struc.html#les-dictionnaires", "text": "Une d\u00e9finition Un dictionnaire est un ensemble de cl\u00e9s/valeurs( C/V ) dont les composantes sont appel\u00e9es via un descripteur (la cl\u00e9!) et non pas un indice. Depuis la classe de premi\u00e8re, nous connaissons les op\u00e9rations de bases permises sur un dictionnaire et leur syntaxe en python : Op\u00e9rations Code python Cr\u00e9er un dictionnaire vide d = [] Ajouter une association c,v d[\"Maths\"] = 18 Lire la valeur v d'une cl\u00e9 c d[\"Maths\"] Mais par exemple, il n'existe pas de primitive simple qui retourne la cl\u00e9 d'une valeur! L'impl\u00e9mentation du type dictionnaire doit permettre de r\u00e9aliser ces trois op\u00e9rations de base en temps d'ex\u00e9cution efficace. On cherche id\u00e9alement une complexit\u00e9 en O(1) pour la recherche, l'insertion ou la suppression. Comment faire? Le hachage Python a choisi les tables de hachages pour cette impl\u00e9mentation. Pour comprendre, il faut d'abord d\u00e9finir une fonction de hachage : Ce que dit Wikip\u00e9dia ... On nomme fonction de hachage, de l'anglais hash function (hash : pagaille, d\u00e9sordre, recouper et m\u00e9langer) par analogie avec la cuisine, une fonction particuli\u00e8re qui, \u00e0 partir d'une donn\u00e9e fournie en entr\u00e9e, calcule une empreinte num\u00e9rique servant \u00e0 identifier rapidement la donn\u00e9e initiale, au m\u00eame titre qu'une signature pour identifier une personne. Je reprends aussi les termes pertinents de l'encyclop\u00e9die : R\u00f4le d'une fonction de haschage On peut voir une fonction de hachage comme un moyen de replier l'espace de donn\u00e9es que l'on suppose potentiellement tr\u00e8s grand et tr\u00e8s peu rempli pour le faire entrer dans la m\u00e9moire de l'ordinateur. Le principe est d'utiliser les empreintes des cl\u00e9s comme indices des \u00e9l\u00e9ments de la table. Ces empreintes sont des nombres entiers obtenus en hachant la cl\u00e9 des objets \u00e0 stocker, souvent une cha\u00eene de caract\u00e8res. On peut ensuite retrouver l'objet associ\u00e9 \u00e0 une cl\u00e9 donn\u00e9e : il suffit de hacher la cl\u00e9 pour obtenir une empreinte et de lire dans le tableau l'\u00e9l\u00e9ment dont l'indice est cette empreinte.Au final, la complexit\u00e9 d\u2019une insertion et d\u2019une lecture dans une table de hachage sera \u00ab en moyenne \u00bb en O(1) . Les algorithme de hachage et les mots de passe Les mots de passe ne sont pas stock\u00e9s en clair: c'est leur empreinte obtenu par un algorithme de hachage ( SHA-256 par exemple) qui est utilis\u00e9. Cet algorithme produit un condensat de 256 bits. Mais, il faut \u00eatre certain que la fonction de hachage choisit remplit bien son r\u00f4le: \u00e0 chaque entr\u00e9e, elle doit associer une empreinte num\u00e9rique unique . On parle de collision si deux entr\u00e9es diff\u00e9rentes ont une empreinte num\u00e9rique \u00e9gale (en maths, on dirait que la fonction n'est pas injective...). La fonction de hachage du SHA-256 a remplac\u00e9 celle du MD5 qui cr\u00e9ait beaucoup de collision.", "title": "Les dictionnaires"}, {"location": "term/ep.html", "text": "Exercices \u00e0 r\u00e9aliser ou \u00e0 compl\u00e9ter sous Thonny ou Edupython Exercice n\u00b01: \u00c9crire une fonction recherche qui prend en param\u00e8tres elt un nombre entier et tab un tableau de nombres entiers, et qui renvoie l\u2019indice de la premi\u00e8re occurrence de elt dans tab si elt est dans tab et -1 sinon. Exemples : >>> recherche ( 1 , [ 2 , 3 , 4 ]) - 1 >>> recherche ( 1 , [ 10 , 12 , 1 , 56 ]) 2 >>> recherche ( 50 , [ 1 , 50 , 1 ]) 1 >>> recherche ( 15 , [ 8 , 9 , 10 , 15 ]) 3 Exercice n\u00b02: L\u2019occurrence d\u2019un caract\u00e8re dans un phrase est le nombre de fois o\u00f9 ce caract\u00e8re est pr\u00e9sent. Exemples : l\u2019occurrence du caract\u00e8re \u2018o\u2019 dans \u2018bonjour\u2019 est 2 ; l\u2019occurrence du caract\u00e8re \u2018b\u2019 dans \u2018B\u00e9b\u00e9\u2019 est 1 ; l\u2019occurrence du caract\u00e8re \u2018B\u2019 dans \u2018B\u00e9b\u00e9\u2019 est 1 ; l\u2019occurrence du caract\u00e8re \u2018 \u2018 dans \u2018Hello world !\u2019 est 2. On cherche les occurrences des caract\u00e8res dans une phrase. On souhaite stocker ces occurrences dans un dictionnaire dont les clefs seraient les caract\u00e8res de la phrase et les valeurs l\u2019occurrence de ces caract\u00e8res. Par exemple : avec la phrase 'Hello world !' le dictionnaire est le suivant : {'H': 1,'e': 1,'l': 3,'o': 2,' ': 2,'w': 1,'r': 1,'d': 1,'!': 1} \u00c9crire une fonction occurrence_lettres prenant comme param\u00e8tre une variable phrase de type str . Cette fonction doit renvoyer un dictionnaire de type constitu\u00e9 des occurrences des caract\u00e8res pr\u00e9sents dans la phrase. Exercice n\u00b03: On consid\u00e8re un tableau d'entiers tab (type list dont les \u00e9l\u00e9ments sont des 0 ou des 1 ). On se propose de trier ce tableau selon l'algorithme suivant : \u00e0 chaque \u00e9tape du tri,le tableau est constitu\u00e9 de trois zones cons\u00e9cutives, la premi\u00e8re ne contenant que des 0 , la seconde n'\u00e9tant pas tri\u00e9e et la derni\u00e8re ne contenant que des 1 . Zone de 0 Zone non tri\u00e9e Zone de 1 Tant que la zone non tri\u00e9e n'est pas r\u00e9duite \u00e0 un seul \u00e9l\u00e9ment, on regarde son premier \u00e9l\u00e9ment : si cet \u00e9l\u00e9ment vaut 0, on consid\u00e8re qu'il appartient d\u00e9sormais \u00e0 la zone ne contenant que des 0 ; si cet \u00e9l\u00e9ment vaut 1, il est \u00e9chang\u00e9 avec le dernier \u00e9l\u00e9ment de la zone non tri\u00e9e et on consid\u00e8re alors qu\u2019il appartient \u00e0 la zone ne contenant que des 1. Dans tous les cas, la longueur de la zone non tri\u00e9e diminue de 1. Recopier sous Python en la compl\u00e9tant la fonction tri suivante : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 def tri ( tab ): #i est le premier indice de la zone non triee, j le dernier indice. #Au debut, la zone non triee est le tableau entier. i = ... j = ... while i != j : if tab [ i ] == 0 : i = ... else : valeur = tab [ j ] tab [ j ] = ... ... j = ... ... Exemple : >>> tri ([ 0 , 1 , 0 , 1 , 0 , 1 , 0 , 1 , 0 ]) [ 0 , 0 , 0 , 0 , 0 , 1 , 1 , 1 , 1 ] Exercice n\u00b04: On veut \u00e9crire une classe pour g\u00e9rer une file \u00e0 l\u2019aide d\u2019une liste cha\u00een\u00e9e. On dispose d\u2019une classe Maillon permettant la cr\u00e9ation d\u2019un maillon de la cha\u00eene, celui-ci \u00e9tant constitu\u00e9 d\u2019une valeur et d\u2019une r\u00e9f\u00e9rence au maillon suivant de la cha\u00eene : 1 2 3 4 class Maillon : def __init__ ( self , v ) : self . valeur = v self . suivant = None Compl\u00e9ter la classe File suivante o\u00f9 l'attribut dernier_file contient le maillon correspondant \u00e0 l'\u00e9l\u00e9ment arriv\u00e9 en dernier dans la file: class File : def __init__ ( self ) : self . dernier_file = None def enfile ( self , element ) : nouveau_maillon = Maillon ( ... ) nouveau_maillon . suivant = self . dernier_file self . dernier_file = ... def est_vide ( self ) : return self . dernier_file == None def affiche ( self ) : maillon = self . dernier_file while maillon != ... : print ( maillon . valeur ) maillon = ... def defile ( self ) : if not self . est_vide () : if self . dernier_file . suivant == None : resultat = self . dernier_file . valeur self . dernier_file = None return resultat maillon = ... while maillon . suivant . suivant != None : maillon = maillon . suivant resultat = ... maillon . suivant = None return resultat return None Exercice n\u00b05: \u00c9crire une fonction python appel\u00e9e nb_repetitions qui prend en param\u00e8tres un \u00e9l\u00e9ment elt et une liste tab et renvoie le nombre de fois o\u00f9 l\u2019\u00e9l\u00e9ment appara\u00eet dans la liste. Exemples : >>> nb_repetitions ( 5 , [ 2 , 5 , 3 , 5 , 6 , 9 , 5 ]) 3 >>> nb_repetitions ( 'A' , [ 'B' , 'A' , 'B' , 'A' , 'R' ]) 2 >>> nb_repetitions ( 12 , [ 1 , '!' , 7 , 21 , 36 , 44 ]) 0 Exercice n\u00b06: Cet exercice utilise des piles qui seront repr\u00e9sent\u00e9es en Python par des listes (type list ). On rappelle que l\u2019expression T1 = list(T) fait une copie de T ind\u00e9pendante de T , que l\u2019expression x = T.pop() enl\u00e8ve le sommet de la pile T et le place dans la variable x et, enfin, que l\u2019expression T.append(v) place la valeur v au sommet de la pile T . Compl\u00e9ter le code Python de la fonction positif ci-dessous qui prend une pile T de nombres entiers en param\u00e8tre et qui renvoie la pile des entiers positifs dans le m\u00eame ordre, sans modifier la variable T . 1 2 3 4 5 6 7 8 9 10 11 12 13 def positif ( T ): T2 = ... ( T ) T3 = ... while T2 != []: x = ... if ... >= 0 : T3 . append ( ... ) T2 = [] while T3 != ... : x = T3 . pop () ... print ( 'T = ' , T ) return T2 Exemple : >>> positif([-1, 0, 5, -3, 4, -6, 10, 9, -8]) T = [-1, 0, 5, -3, 4, -6, 10, 9, -8] [0, 5, 4, 10, 9]", "title": "Epreuve pratique NSI"}, {"location": "term/interface.html", "text": "Interface et impl\u00e9mentation \u00b6 Principe \u00b6 Une structure de donn\u00e9es ? Une structure de donn\u00e9es est une collection, une organisation de donn\u00e9es en vue de leur utilisation: les listes, les tuples ou les dictionnaires Python sont des exemples de structures. D\u00e8s que la structure est d\u00e9clar\u00e9e, il est n\u00e9cessaire alors de d\u00e9finir les m\u00e9thodes qui agissent sur ces objets : c'est l'interface qui permet entre autres, de cr\u00e9er la structure, de la modifier, d'afficher son contenu voire de la supprimer... L'interface des listes Python En fouillant un peu dans la documentation ici , il semblerait que les listes Python soit des tableaux (array). L'interface des listes est celle des s\u00e9quences : par exemple, la m\u00e9thode len s'applique non seulement aux listes mais aussi aux tuples et aux cha\u00eenes de caract\u00e8res... Donc, si il existe des m\u00e9thodes qui agissent sur les structures de donn\u00e9es, on ne sait pas n\u00e9cessairement comment elles sont cod\u00e9es. La m\u00e9thode reverse des listes est simple \u00e0 comprendre: elle renverse les indices de la liste! Mais de quelle fa\u00e7on? Mieux, la m\u00e9thode sort trie les listes: mais quel algorithme est utilis\u00e9 pour cela? Une interface Un ensemble d'informations qui permet de d\u00e9crire une structure de donn\u00e9es ainsi que les m\u00e9thodes qui agissent sur ces donn\u00e9es \u00c0 faire Les biblioth\u00e8ques Python ont subi une attaque informatique et la m\u00e9thode reverse des listes a \u00e9t\u00e9 d\u00e9finitivement perdue. \u00c9crire une fonction revers_new qui pour une liste donn\u00e9e retourne la liste dans l'autre sens... La fa\u00e7on dont sont cod\u00e9es les m\u00e9thodes pr\u00e9sent\u00e9es dans les interfaces, sont a priori invisible aux yeux de l'utilisateur: on parle d' impl\u00e9mentation d'une m\u00e9thode lorsqu'on d\u00e9couvre comment est programm\u00e9e la m\u00e9thode. Pour une m\u00eame m\u00e9thode, il peut exister alors plusieurs impl\u00e9mentations... En r\u00e9sum\u00e9... L' interface est la partie visible pour qui veut utiliser ce type de donn\u00e9es. Elle pr\u00e9cise comment utiliser la structure de donn\u00e9es sans se pr\u00e9occuper de la fa\u00e7on dont les choses ont \u00e9t\u00e9 programm\u00e9es, c'est-\u00e0-dire son impl\u00e9mentation . API...birth day! \u00b6 Une autre interface bien utile, une API! C'est quoi une API? Une API (Application Programming Interface), ou interface de programmation, est un ensemble normalis\u00e9 de briques logicielles gr\u00e2ce auxquelles un syst\u00e8me informatique offre des services \u00e0 d\u2019autres syst\u00e8mes. Quand nous consultons la m\u00e9t\u00e9o sur notre smartphone, il utilise l\u2019API du service m\u00e9t\u00e9o en question. La plupart des applications mobiles sont con\u00e7ues autour d\u2019une ou plusieurs API. L\u2019objectif d\u2019une API est de fournir des fonctionnalit\u00e9s, sans r\u00e9v\u00e9ler le fonctionnement interne de l\u2019application qui fournit les donn\u00e9es. C\u2019est en cela qu\u2019on dit qu\u2019une API est en fa\u00e7ade : on ne voit pas l\u2019int\u00e9rieur du b\u00e2timent Un exemple d'API m\u00e9t\u00e9o Le site ici de openweather offre une api pour des informations sur la m\u00e9t\u00e9o de votre ville. Pour pouvoir l'utiliser il faut utiliser un jeton (Token) fourni lors de l'inscription. Bien que le service soit gratuit, il existe de nombreuses options payantes. \u00c0 faire Effectuer la requete ci-dessous dans un script python. Quelle est la nature de la variable data ? Modifiez le code pour obtenir la vitesse du vent et sa direction. import requests url = \"http://api.openweathermap.org/data/2.5/weather?q=agen&appid=4370f9449a4ab35020f78dffcc0fe303\" content = requests . get ( url ) data = content . json () t = data [ 'main' ][ 'temp' ] print ( \"La t\u00e9mp\u00e9rature est de {} degr\u00e9s C\" . format ( t - 273.15 )) On peut aussi effectuer des requ\u00eates en Javascript et modifier ainsi le contenu d'une page web. Ci-dessous, une fonction utilisant une API donnant la position de la station spatiale ISS utilisant des promesses... function marequete () { fetch ( \"http://api.open-notify.org/iss-now.json\" ) . then ( res => res . json ()) . then ( function isspos ( jsonobj ){ var lat = jsonobj [ 'iss_position' ][ 'latitude' ]; var lon = jsonobj [ 'iss_position' ][ 'longitude' ]; document . getElementById ( \"latitude\" ). innerText = lat ; document . getElementById ( \"longitude\" ). innerText = lon ; } ) } Concr\u00e8tement, une API est constitu\u00e9e d\u2019une biblioth\u00e8que logicielle, d\u2019un service web et d\u2019une description qui sp\u00e9cifie comment les clients peuvent interagir avec la plateforme logicielle qui fournit les donn\u00e9es, appel\u00e9e aussi fournisseur . Un peu de manipulation \u00b6 \u00c0 faire Comment utiliser une API dans une page WEB? R\u00e9cup\u00e9rer la page d'accueil du site ici Explorez le code de la page. De nombreuses API disposent d\u2019un wrapper Python : c\u2019est un module Python qui permet d\u2019interroger la base de donn\u00e9es du fournisseur de fa\u00e7on simplifi\u00e9e, sans avoir \u00e0 \u00e9crire les requ\u00eates Web, ni \u00e0 interpr\u00e9ter les r\u00e9ponses. Celles-ci sont g\u00e9n\u00e9ralement \u00e9crites au format JSON, qui est un format d\u2019\u00e9change de donn\u00e9es, au m\u00eame titre que le XML. \u00c0 partir de ces r\u00e9ponses, le wrapper Python g\u00e9n\u00e8re des listes ou des dictionnaires, facilement manipulables. \u00c0 faire On va utiliser l'API Mars Rover Photos disponible \u00e0 cette adresse . G\u00e9n\u00e9rer une cl\u00e9 d'authentification (il existe une cl\u00e9 de d\u00e9mo DEMO_KEY mais qui donne un acc\u00e8s limit\u00e9...) Installer le wrapper Python nasaapi (comme un simple module...) ou python-nasa-api document\u00e9 ici Cherchez comment obtenir l'URL de la premi\u00e8re photo que le rover Curiosity a prise le 50i\u00e8me jour martien, avec sa cam\u00e9ra arri\u00e8re nomm\u00e9e Rear Hazard Avoidance Camera ou simplement RHAZ . Copier /collez cette URL dans un navigateur WEB pour visualiser cette photo. \u00c0 l'aide des donn\u00e9es re\u00e7ues du rover Curioity, donnez: Id de curiosity Sa date de lancement Sa date d'atterissage sur Mars Utiliser le module webbrowser pour afficher directement les photos trouv\u00e9es. # importation du module webbrowser import webbrowser # importation du sous-module MarsRovers du module nasaapi from nasaapi import MarsRovers # initialisation de la connexion avec l\u2019API et cr\u00e9ation de l\u2019ob-jet rovers rovers = MarsRovers ( \u00ab coller ici la cl\u00e9 API NASA \u00bb , \u00ab ici le jour \u00bb , \u00ab NAV - CAM \u00bb ) # r\u00e9cup\u00e9ration des donn\u00e9es de Curiosity (dictionnaire) cur = rovers . curiosity () print ( cur ) # acc\u00e8s \u00e0 l\u2019URL de la quatri\u00e8me photo url_photo = \u00ab compl\u00e9ter ici \u00bb # envoi de l\u2019URL dans le navigateur webbrowser . open_new_tab ( url_photo )", "title": "Interface et impl\u00e9mentation"}, {"location": "term/interface.html#interface-et-implementation", "text": "", "title": "Interface et impl\u00e9mentation"}, {"location": "term/interface.html#principe", "text": "Une structure de donn\u00e9es ? Une structure de donn\u00e9es est une collection, une organisation de donn\u00e9es en vue de leur utilisation: les listes, les tuples ou les dictionnaires Python sont des exemples de structures. D\u00e8s que la structure est d\u00e9clar\u00e9e, il est n\u00e9cessaire alors de d\u00e9finir les m\u00e9thodes qui agissent sur ces objets : c'est l'interface qui permet entre autres, de cr\u00e9er la structure, de la modifier, d'afficher son contenu voire de la supprimer... L'interface des listes Python En fouillant un peu dans la documentation ici , il semblerait que les listes Python soit des tableaux (array). L'interface des listes est celle des s\u00e9quences : par exemple, la m\u00e9thode len s'applique non seulement aux listes mais aussi aux tuples et aux cha\u00eenes de caract\u00e8res... Donc, si il existe des m\u00e9thodes qui agissent sur les structures de donn\u00e9es, on ne sait pas n\u00e9cessairement comment elles sont cod\u00e9es. La m\u00e9thode reverse des listes est simple \u00e0 comprendre: elle renverse les indices de la liste! Mais de quelle fa\u00e7on? Mieux, la m\u00e9thode sort trie les listes: mais quel algorithme est utilis\u00e9 pour cela? Une interface Un ensemble d'informations qui permet de d\u00e9crire une structure de donn\u00e9es ainsi que les m\u00e9thodes qui agissent sur ces donn\u00e9es \u00c0 faire Les biblioth\u00e8ques Python ont subi une attaque informatique et la m\u00e9thode reverse des listes a \u00e9t\u00e9 d\u00e9finitivement perdue. \u00c9crire une fonction revers_new qui pour une liste donn\u00e9e retourne la liste dans l'autre sens... La fa\u00e7on dont sont cod\u00e9es les m\u00e9thodes pr\u00e9sent\u00e9es dans les interfaces, sont a priori invisible aux yeux de l'utilisateur: on parle d' impl\u00e9mentation d'une m\u00e9thode lorsqu'on d\u00e9couvre comment est programm\u00e9e la m\u00e9thode. Pour une m\u00eame m\u00e9thode, il peut exister alors plusieurs impl\u00e9mentations... En r\u00e9sum\u00e9... L' interface est la partie visible pour qui veut utiliser ce type de donn\u00e9es. Elle pr\u00e9cise comment utiliser la structure de donn\u00e9es sans se pr\u00e9occuper de la fa\u00e7on dont les choses ont \u00e9t\u00e9 programm\u00e9es, c'est-\u00e0-dire son impl\u00e9mentation .", "title": "Principe"}, {"location": "term/interface.html#apibirth-day", "text": "Une autre interface bien utile, une API! C'est quoi une API? Une API (Application Programming Interface), ou interface de programmation, est un ensemble normalis\u00e9 de briques logicielles gr\u00e2ce auxquelles un syst\u00e8me informatique offre des services \u00e0 d\u2019autres syst\u00e8mes. Quand nous consultons la m\u00e9t\u00e9o sur notre smartphone, il utilise l\u2019API du service m\u00e9t\u00e9o en question. La plupart des applications mobiles sont con\u00e7ues autour d\u2019une ou plusieurs API. L\u2019objectif d\u2019une API est de fournir des fonctionnalit\u00e9s, sans r\u00e9v\u00e9ler le fonctionnement interne de l\u2019application qui fournit les donn\u00e9es. C\u2019est en cela qu\u2019on dit qu\u2019une API est en fa\u00e7ade : on ne voit pas l\u2019int\u00e9rieur du b\u00e2timent Un exemple d'API m\u00e9t\u00e9o Le site ici de openweather offre une api pour des informations sur la m\u00e9t\u00e9o de votre ville. Pour pouvoir l'utiliser il faut utiliser un jeton (Token) fourni lors de l'inscription. Bien que le service soit gratuit, il existe de nombreuses options payantes. \u00c0 faire Effectuer la requete ci-dessous dans un script python. Quelle est la nature de la variable data ? Modifiez le code pour obtenir la vitesse du vent et sa direction. import requests url = \"http://api.openweathermap.org/data/2.5/weather?q=agen&appid=4370f9449a4ab35020f78dffcc0fe303\" content = requests . get ( url ) data = content . json () t = data [ 'main' ][ 'temp' ] print ( \"La t\u00e9mp\u00e9rature est de {} degr\u00e9s C\" . format ( t - 273.15 )) On peut aussi effectuer des requ\u00eates en Javascript et modifier ainsi le contenu d'une page web. Ci-dessous, une fonction utilisant une API donnant la position de la station spatiale ISS utilisant des promesses... function marequete () { fetch ( \"http://api.open-notify.org/iss-now.json\" ) . then ( res => res . json ()) . then ( function isspos ( jsonobj ){ var lat = jsonobj [ 'iss_position' ][ 'latitude' ]; var lon = jsonobj [ 'iss_position' ][ 'longitude' ]; document . getElementById ( \"latitude\" ). innerText = lat ; document . getElementById ( \"longitude\" ). innerText = lon ; } ) } Concr\u00e8tement, une API est constitu\u00e9e d\u2019une biblioth\u00e8que logicielle, d\u2019un service web et d\u2019une description qui sp\u00e9cifie comment les clients peuvent interagir avec la plateforme logicielle qui fournit les donn\u00e9es, appel\u00e9e aussi fournisseur .", "title": "API...birth day!"}, {"location": "term/interface.html#un-peu-de-manipulation", "text": "\u00c0 faire Comment utiliser une API dans une page WEB? R\u00e9cup\u00e9rer la page d'accueil du site ici Explorez le code de la page. De nombreuses API disposent d\u2019un wrapper Python : c\u2019est un module Python qui permet d\u2019interroger la base de donn\u00e9es du fournisseur de fa\u00e7on simplifi\u00e9e, sans avoir \u00e0 \u00e9crire les requ\u00eates Web, ni \u00e0 interpr\u00e9ter les r\u00e9ponses. Celles-ci sont g\u00e9n\u00e9ralement \u00e9crites au format JSON, qui est un format d\u2019\u00e9change de donn\u00e9es, au m\u00eame titre que le XML. \u00c0 partir de ces r\u00e9ponses, le wrapper Python g\u00e9n\u00e8re des listes ou des dictionnaires, facilement manipulables. \u00c0 faire On va utiliser l'API Mars Rover Photos disponible \u00e0 cette adresse . G\u00e9n\u00e9rer une cl\u00e9 d'authentification (il existe une cl\u00e9 de d\u00e9mo DEMO_KEY mais qui donne un acc\u00e8s limit\u00e9...) Installer le wrapper Python nasaapi (comme un simple module...) ou python-nasa-api document\u00e9 ici Cherchez comment obtenir l'URL de la premi\u00e8re photo que le rover Curiosity a prise le 50i\u00e8me jour martien, avec sa cam\u00e9ra arri\u00e8re nomm\u00e9e Rear Hazard Avoidance Camera ou simplement RHAZ . Copier /collez cette URL dans un navigateur WEB pour visualiser cette photo. \u00c0 l'aide des donn\u00e9es re\u00e7ues du rover Curioity, donnez: Id de curiosity Sa date de lancement Sa date d'atterissage sur Mars Utiliser le module webbrowser pour afficher directement les photos trouv\u00e9es. # importation du module webbrowser import webbrowser # importation du sous-module MarsRovers du module nasaapi from nasaapi import MarsRovers # initialisation de la connexion avec l\u2019API et cr\u00e9ation de l\u2019ob-jet rovers rovers = MarsRovers ( \u00ab coller ici la cl\u00e9 API NASA \u00bb , \u00ab ici le jour \u00bb , \u00ab NAV - CAM \u00bb ) # r\u00e9cup\u00e9ration des donn\u00e9es de Curiosity (dictionnaire) cur = rovers . curiosity () print ( cur ) # acc\u00e8s \u00e0 l\u2019URL de la quatri\u00e8me photo url_photo = \u00ab compl\u00e9ter ici \u00bb # envoi de l\u2019URL dans le navigateur webbrowser . open_new_tab ( url_photo )", "title": "Un peu de manipulation"}, {"location": "term/recursivite.html", "text": "Fonctions r\u00e9cursives \u00b6 Un exemple: comment calculer la somme des n premiers entiers cons\u00e9cutifs? \u00b6 Il s'agit de calculer la somme (dite de Gauss...) \\[ S = 1 + 2 + 3 + 4 + ... + n-1 + n \\] \u00c0 faire Copier et coller le code Python ci-dessous Testez pour plusieurs valeurs simples de \\(n\\) n = int ( input ( \"Donner un entier positif\" )) S = 0 for i in range ( n + 1 ): S = S + i print ( \"La somme des {} premiers entiers est {} \" . format ( n , S )) Le code ci-dessus est imp\u00e9ratif au sens o\u00f9 nous donnons des ordres que l'ordinateur ex\u00e9cute ligne par ligne. \u00c0 faire Transformer le code ci-dessus en une fonction somme_entier qui prend en param\u00e8tre le seul entier \\(n\\) et qui retourne la somme recherch\u00e9e. Ajouter des assertions \u00e0 la fonction. Effectuer des tests unitaires (voir le cours...) Posons la notation \\(S_n\\) pour indiquer la somme \\(1 + 2 + 3 + 4 + ... + n-1 + n\\) . Remarquons alors ceci: \\[S_n=1 + 2 + 3 + 4 + ... + n-1 + n =S_{n -1} + n\\] Autrement dit, le calcul de \\(S_n\\) est r\u00e9current et la traduction python de cette relation donne: somme_rect ( n ) = somme_rect ( n - 1 ) + n Mais attention! La relation pr\u00e9c\u00e9dente n'est valable que pour \\(n\\geq 1\\) et \u00e0 la condition qu'elle soit aussi initialis\u00e9e : si on d\u00e9clare que somme_rec(0) = 0 , on peut alors calculer somme_rec(1),somme_rec(2),... Au final, nous obtenons la version r\u00e9cursive de la fonction pr\u00e9c\u00e9dente: def somme_rec ( n ): if n == 0 : return 0 else : return somme_rec ( n - 1 ) + n Visualiser la pile d'ex\u00e9cution d'un appel r\u00e9cursif \u00b6 \u00c0 faire Allez sur le site python tutor et recopier le code de la fonction r\u00e9cursive dans la zone d'\u00e9dition. Ex\u00e9cutez somme_rec(5) et visualisez les diff\u00e9rents appels. M\u00eame consigne avec somme_rec(50) . Quel pourrait \u00eatre le probl\u00e8me des fonctions r\u00e9cursives? Il existe de nombreuses situations algorithmiques qui justifient l'appel d'une fonction r\u00e9cursive. Cependant le nombre d'appel dans la pile est souvent limit\u00e9e pour des raisons \u00e9videntes de s\u00e9curit\u00e9 puisque la zone m\u00e9moire qui stocke tous les appels peut tr\u00e8s vite augment\u00e9e... Dans Thonny, on peut conna\u00eetre le nombre maximum d'appel: import sys print ( sys . getrecursionlimit ()) \u00c0 retenir Lors de l\u2019ex\u00e9cution d\u2019un algorithme r\u00e9cursif, les appels successifs de la fonction sont stock\u00e9s dans une pile, c\u2019est la pile d\u2019ex\u00e9cution . Plus pr\u00e9cis\u00e9ment, la pile d\u2019ex\u00e9cution est un emplacement m\u00e9moire destin\u00e9 \u00e0 stocker les param\u00e8tres, les variables locales ainsi que les adresses m\u00e9moires de retour des fonctions en cours d\u2019ex\u00e9cution. Vocabulaire \u00b6 \u00c0 savoir Une fonction r\u00e9cursive est une fonction qui s'appelle elle-m\u00eame dans son ex\u00e9cution. Elle pr\u00e9sente toujours: un cas d'arr\u00eat correspondant au cas de base, l'\u00e9quivalent de l'initialisation en math\u00e9matiques... un appel r\u00e9cursif d\u00e9cr\u00e9ment\u00e9 : ainsi apr\u00e8s plusieurs appels, on se ram\u00e8ne au cas de base! Exercices \u00b6 \u00c0 faire La factorielle d'un entier n, not\u00e9e \\(n!\\) est \u00e9gale \u00e0 : \\(n!=1\\times 2 \\times 3 \\times...\\times (n-1) \\times n\\) si \\(n>0\\) et \u00e9gal \u00e0 1 si \\(n=0\\) . \u00c9crire la fonction facto_simple(n) qui prend en param\u00e8tre un entier \\(n\\) et qui renvoie la factorielle de \\(n\\) . \u00c9crire la fonction r\u00e9cursive facto_recu(n) qui prend en param\u00e8tre un entier \\(n\\) et qui renvoie la factorielle de \\(n\\) . On posera des assertions puis des tests dans ces fonctions pour v\u00e9rifier leur comportement. \u00c0 faire On rappelle que \\(x^n=x\\times x \\times x....\\times x\\) , \\(n\\) fois o\u00f9 \\(x\\) est un r\u00e9el quelconque et \\(n\\) un entier. \u00c9crire la fonction puissance_recu(n,x) qui prend en param\u00e8tres l'entier \\(n\\) et le r\u00e9el \\(x\\) . On peut am\u00e9liorer cette derni\u00e8re fonction en consid\u00e9rant la d\u00e9finition ci-dessous: \\[\\textrm{puissance}(x , n) = \\left\\{ \\begin{array}{c c} x & \\textrm{si } n = 1 \\\\ \\textrm{puissance}(x^2 , n/2) & \\textrm{si } n \\textrm{ est pair}\\\\ x \\times \\textrm{puissance}(x^2 , (n - 1)/2) & \\textrm{si } n \\textrm{ est impair}\\\\ \\end{array} \\right.\\] \u00c9crire la fonction puissance_mieux(n, x) avec cette d\u00e9finition et comparer le temps d'ex\u00e9cution de ces deux fonctions. On utilisera le module timeit pour cela... \u00c0 faire \u00c9crire une fonction nomm\u00e9e reverse(phrase) qui prend en param\u00e8tre la cha\u00eene de caract\u00e8re phrase et qui la renvoie \u00e0 l'envers... \u00c9crire la version r\u00e9cursive de cette fonction. \u00c0 faire Que dessine la fonction r\u00e9cursive suivante dans turtle (essayez de deviner au lieu de recopier le code....)? from turtle import * def carre ( c ): for k in range ( 4 ): forward ( c ) right ( 90 ) def base ( c ): carre ( c ) forward ( c / 2 ) right ( 45 ) def trace ( c ): if c < 5 : return None else : base ( c ) return trace ( c / ( 2 ** 0.5 )) trace ( 200 )", "title": "R\u00e9cursivit\u00e9"}, {"location": "term/recursivite.html#fonctions-recursives", "text": "", "title": "Fonctions r\u00e9cursives"}, {"location": "term/recursivite.html#un-exemple-comment-calculer-la-somme-des-n-premiers-entiers-consecutifs", "text": "Il s'agit de calculer la somme (dite de Gauss...) \\[ S = 1 + 2 + 3 + 4 + ... + n-1 + n \\] \u00c0 faire Copier et coller le code Python ci-dessous Testez pour plusieurs valeurs simples de \\(n\\) n = int ( input ( \"Donner un entier positif\" )) S = 0 for i in range ( n + 1 ): S = S + i print ( \"La somme des {} premiers entiers est {} \" . format ( n , S )) Le code ci-dessus est imp\u00e9ratif au sens o\u00f9 nous donnons des ordres que l'ordinateur ex\u00e9cute ligne par ligne. \u00c0 faire Transformer le code ci-dessus en une fonction somme_entier qui prend en param\u00e8tre le seul entier \\(n\\) et qui retourne la somme recherch\u00e9e. Ajouter des assertions \u00e0 la fonction. Effectuer des tests unitaires (voir le cours...) Posons la notation \\(S_n\\) pour indiquer la somme \\(1 + 2 + 3 + 4 + ... + n-1 + n\\) . Remarquons alors ceci: \\[S_n=1 + 2 + 3 + 4 + ... + n-1 + n =S_{n -1} + n\\] Autrement dit, le calcul de \\(S_n\\) est r\u00e9current et la traduction python de cette relation donne: somme_rect ( n ) = somme_rect ( n - 1 ) + n Mais attention! La relation pr\u00e9c\u00e9dente n'est valable que pour \\(n\\geq 1\\) et \u00e0 la condition qu'elle soit aussi initialis\u00e9e : si on d\u00e9clare que somme_rec(0) = 0 , on peut alors calculer somme_rec(1),somme_rec(2),... Au final, nous obtenons la version r\u00e9cursive de la fonction pr\u00e9c\u00e9dente: def somme_rec ( n ): if n == 0 : return 0 else : return somme_rec ( n - 1 ) + n", "title": "Un exemple: comment calculer la somme des n premiers entiers cons\u00e9cutifs?"}, {"location": "term/recursivite.html#visualiser-la-pile-dexecution-dun-appel-recursif", "text": "\u00c0 faire Allez sur le site python tutor et recopier le code de la fonction r\u00e9cursive dans la zone d'\u00e9dition. Ex\u00e9cutez somme_rec(5) et visualisez les diff\u00e9rents appels. M\u00eame consigne avec somme_rec(50) . Quel pourrait \u00eatre le probl\u00e8me des fonctions r\u00e9cursives? Il existe de nombreuses situations algorithmiques qui justifient l'appel d'une fonction r\u00e9cursive. Cependant le nombre d'appel dans la pile est souvent limit\u00e9e pour des raisons \u00e9videntes de s\u00e9curit\u00e9 puisque la zone m\u00e9moire qui stocke tous les appels peut tr\u00e8s vite augment\u00e9e... Dans Thonny, on peut conna\u00eetre le nombre maximum d'appel: import sys print ( sys . getrecursionlimit ()) \u00c0 retenir Lors de l\u2019ex\u00e9cution d\u2019un algorithme r\u00e9cursif, les appels successifs de la fonction sont stock\u00e9s dans une pile, c\u2019est la pile d\u2019ex\u00e9cution . Plus pr\u00e9cis\u00e9ment, la pile d\u2019ex\u00e9cution est un emplacement m\u00e9moire destin\u00e9 \u00e0 stocker les param\u00e8tres, les variables locales ainsi que les adresses m\u00e9moires de retour des fonctions en cours d\u2019ex\u00e9cution.", "title": "Visualiser la pile d'ex\u00e9cution d'un appel r\u00e9cursif"}, {"location": "term/recursivite.html#vocabulaire", "text": "\u00c0 savoir Une fonction r\u00e9cursive est une fonction qui s'appelle elle-m\u00eame dans son ex\u00e9cution. Elle pr\u00e9sente toujours: un cas d'arr\u00eat correspondant au cas de base, l'\u00e9quivalent de l'initialisation en math\u00e9matiques... un appel r\u00e9cursif d\u00e9cr\u00e9ment\u00e9 : ainsi apr\u00e8s plusieurs appels, on se ram\u00e8ne au cas de base!", "title": "Vocabulaire"}, {"location": "term/recursivite.html#exercices", "text": "\u00c0 faire La factorielle d'un entier n, not\u00e9e \\(n!\\) est \u00e9gale \u00e0 : \\(n!=1\\times 2 \\times 3 \\times...\\times (n-1) \\times n\\) si \\(n>0\\) et \u00e9gal \u00e0 1 si \\(n=0\\) . \u00c9crire la fonction facto_simple(n) qui prend en param\u00e8tre un entier \\(n\\) et qui renvoie la factorielle de \\(n\\) . \u00c9crire la fonction r\u00e9cursive facto_recu(n) qui prend en param\u00e8tre un entier \\(n\\) et qui renvoie la factorielle de \\(n\\) . On posera des assertions puis des tests dans ces fonctions pour v\u00e9rifier leur comportement. \u00c0 faire On rappelle que \\(x^n=x\\times x \\times x....\\times x\\) , \\(n\\) fois o\u00f9 \\(x\\) est un r\u00e9el quelconque et \\(n\\) un entier. \u00c9crire la fonction puissance_recu(n,x) qui prend en param\u00e8tres l'entier \\(n\\) et le r\u00e9el \\(x\\) . On peut am\u00e9liorer cette derni\u00e8re fonction en consid\u00e9rant la d\u00e9finition ci-dessous: \\[\\textrm{puissance}(x , n) = \\left\\{ \\begin{array}{c c} x & \\textrm{si } n = 1 \\\\ \\textrm{puissance}(x^2 , n/2) & \\textrm{si } n \\textrm{ est pair}\\\\ x \\times \\textrm{puissance}(x^2 , (n - 1)/2) & \\textrm{si } n \\textrm{ est impair}\\\\ \\end{array} \\right.\\] \u00c9crire la fonction puissance_mieux(n, x) avec cette d\u00e9finition et comparer le temps d'ex\u00e9cution de ces deux fonctions. On utilisera le module timeit pour cela... \u00c0 faire \u00c9crire une fonction nomm\u00e9e reverse(phrase) qui prend en param\u00e8tre la cha\u00eene de caract\u00e8re phrase et qui la renvoie \u00e0 l'envers... \u00c9crire la version r\u00e9cursive de cette fonction. \u00c0 faire Que dessine la fonction r\u00e9cursive suivante dans turtle (essayez de deviner au lieu de recopier le code....)? from turtle import * def carre ( c ): for k in range ( 4 ): forward ( c ) right ( 90 ) def base ( c ): carre ( c ) forward ( c / 2 ) right ( 45 ) def trace ( c ): if c < 5 : return None else : base ( c ) return trace ( c / ( 2 ** 0.5 )) trace ( 200 )", "title": "Exercices"}, {"location": "term/reseau_term.html", "text": "Rappel sur les r\u00e9seaux \u00b6 Les vid\u00e9os WhatsApp La taille maximale autoris\u00e9e pour les pi\u00e8ces jointes (photos, vid\u00e9os ou messages vocaux) que vous recevez ou envoyez via WhatsApp est de 16 Mo sur tous les appareils. Sur la plupart des t\u00e9l\u00e9phones, cette taille comprend entre 90 secondes et 3 minutes de vid\u00e9o. La dur\u00e9e maximale de la vid\u00e9o varie en fonction de la qualit\u00e9 de l'appareil photo de votre t\u00e9l\u00e9phone. C'est devenu une pratique quotidienne voire horaire: envoyer un texto, un e-mail, un message vocal, une vid\u00e9o... Mais comment \u00e7a marche? Un texto c'est quelques kilooctets alors qu'un message vocal d\u00e9passe largement le m\u00e9gaoctet et les vid\u00e9os c'est pire. Comment sont envoy\u00e9es les donn\u00e9es sur un r\u00e9seau? Comment \u00eatre s\u00fbr de les envoyer \u00e0 la bonne personne? Comment s'assurer que toutes les donn\u00e9es ont bien \u00e9t\u00e9 transmises? Autant de questions qui trouvent leur r\u00e9ponses dans le programme de premi\u00e8re mais avant de parler de routage (programme de terminale...), quelques rappels s'imposent! Un r\u00e9seau c'est d'abord physique \u00b6 Dans la notion de r\u00e9seau informatique, on doit dissocier le r\u00e9seau physique du r\u00e9seau logiciel . \u00c0 retenir! Internet est un r\u00e9seau mat\u00e9riel reliant tous les ordinateurs, smartphones, objets de l'internet(IoT),... entre eux. Cette interconnexion se r\u00e9alise par c\u00e2bles(RJ45, fibre optique,...) ou par ondes (wifi, bluetooth, GSM, ...). M\u00eame les continents sont r\u00e9li\u00e9s entre eux par d'\u00e9normes c\u00e2bles sous-marins.... Un exemple de r\u00e9seau physique \u00b6 Le r\u00e9seau Renater Connecteur de savoirs, RENATER, R\u00e9seau National de t\u00e9l\u00e9communications pour la Technologie l\u2019Enseignement et la Recherche, est l\u2019acteur de r\u00e9f\u00e9rence des infrastructures du num\u00e9rique de la communaut\u00e9 enseignement recherche. Constitu\u00e9 en 1993, RENATER est un groupement d\u2019int\u00e9r\u00eat public (GIP) qui assure la ma\u00eetrise d\u2019ouvrage du r\u00e9seau national de communications \u00e9lectroniques pour la technologie, l\u2019enseignement et la recherche. Les membres de RENATER sont le minist\u00e8re de l\u2019\u00c9ducation nationale et de la jeunesse, le minist\u00e8re de l\u2019Enseignement sup\u00e9rieur et de la Recherche, France Universit\u00e9s ainsi que des organismes de recherche, le CNRS, le CEA, Inria, le CNES, l\u2019Inrae, l\u2019Inserm, l\u2019Onera, le Cirad, l\u2019IRD et le BRGM. \u00c0 faire: Tapez windows + R puis cmd dans la fen\u00eatre qui s'ouvre. Tapez tracert www.ac-bordeaux.fr pour conna\u00eetre la route qui conduit de votre ordinateur \u00e0 celui qui h\u00e9berge le site du rectorat. Vous verrez appara\u00eetre le r\u00e9seau Renater. Choississez un autre site pour constater que les ordinateurs du lyc\u00e9e (Education Nationale...) sont tous reli\u00e9s (via le serveur) au r\u00e9seau RENATER. Attention, si vous effectuez la m\u00eame manipulation de chez vous, ce r\u00e9seau d\u00e9di\u00e9 n'appara\u00eetra \u00e9videmment pas! Les objets d'un r\u00e9seau \u00b6 Le Hub (concentrateur): Permet de relier plusieurs machines entre elles. Compl\u00e9tement d\u00e9suet car il ne g\u00e8re pas les transmissions et les collisions. Le Switch(commutateur): Permet de relier plusieurs machines entre elles avec canal d\u00e9di\u00e9 pour chaque destinataire choisi... La passerelle et le routeur: Votre box internet joue bien des r\u00f4les: en particulier celui de routeur et de passerelle, reliant votre r\u00e9seau priv\u00e9 au r\u00e9seau internet via les routeurs de votre FAI. 4. Les connectiques On ne saurait \u00e9voquer les r\u00e9seaux physiques sans parler des c\u00e2bles ou prises RJ45 omnipr\u00e9sents: il existe d'autres types de connectiques notamment pour la fibre ou le t\u00e9l\u00e9phone... \u00c0 retenir Les switch sont des hub intelligents qui g\u00e9rent les informations qu'ils recoivent: ils ne transmettent qu'\u00e0 la machine concern\u00e9e par le message contrairement aux hub qui diffusent largement. Les hub ne sont plus utilis\u00e9s de nos jours dans les r\u00e9seaux modernes. Un r\u00e9seau c'est ensuite logiciel et protocolaire \u00b6 Pour que deux ordinateurs puissent communiquer entre eux, il faut un ensemble de r\u00e8gles pr\u00e9-d\u00e9finies: comment d\u00e9buter le communication? comment envoyer au bon destinataire ? comment s'assurer que le message a \u00e9t\u00e9 bien envoy\u00e9? ... L'ensemble de ces r\u00e8gles est appel\u00e9 protocole . \u00c0 savoir: Un protocole d\u00e9finit de mani\u00e8re formelle et interop\u00e9rable l'\u00e9change des informations entre ordinateurs. Revenons \u00e0 notre questionnement initial: je prends une photo et je l'envoie \u00e0 mon ami. Que se passe t-il r\u00e9ellement? Le sch\u00e9ma suivant illustre les diff\u00e9rentes \u00e9tapes de la communication: Col Couche Son r\u00f4le La couche application Elle g\u00e9n\u00e8re des donn\u00e9es : ici une image et certainement des m\u00e9tadonn\u00e9es(qui envoie? \u00e0 quelle heure?,...) et les livre \u00e0 la couche suivante. La couche transport Elle d\u00e9coupe les donn\u00e9es en petits paquets(1500octets environ...), les taggent par le port de l'application \u00e0 l'origine de la communication puis les identifie par des informations chiffr\u00e9es permettant dans le cas de TCP de reconstituer les donn\u00e9es en bout de cha\u00eene d'une part et de savoir si il manque des paquets d'autre part(voire illustration suivante) La couche r\u00e9seau Elle re\u00e7oit les paquets de la couche transport et appose les adresses IP de la source et de la destination sans se pr\u00e9ocupper de leur contenu La couche liaison Elle re\u00e7oit les donn\u00e9es de la couche r\u00e9seau et appose les adresses MAC de la source et de la destination Col Le mod\u00e8le est con\u00e7u en couche: chaque couche a son propre r\u00f4le et fournit des donn\u00e9es \u00e0 la couche suivante. Je vous popose ici une version simplifi\u00e9e mais dans la r\u00e9alit\u00e9 c'est beaucoup plus \u00e9labor\u00e9... Le mod\u00e8le OSI(7 couches) et sa version simplifi\u00e9e(4 couches) Un protocole de la couche de liaison : ETHERNET Invent\u00e9 au d\u00e9but des ann\u00e9es 70 par Xerox puis sp\u00e9cifi\u00e9 dans les ann\u00e9es 80, il propose plusieurs variantes. C'est la premi\u00e8re technologie LAN grand public pour faire communiquer des ordinateurs rattach\u00e9s \u00e0 un m\u00eame \u00ab \u00e9ther \u00bb, c'est \u00e0 dire, un milieu passif capable de transf\u00e9rer des donn\u00e9es, comme un c\u00e2ble coaxial De la th\u00e9orie \u00e0 la pratique: observez la frame captur\u00e9e par Wireshark: On retrouve: le mod\u00e8le en couche la couche Ethernet avec les adresses MAC (maquill\u00e9es ici) la couche IP qui fournit les adresses IP la couche Transport qui donne le port source de l'application (64423) vers le port destination (80) avec des informations la couche Application (http) C'est mon ordinateur( automatiquement) qui fait une requ\u00eate http sur un serveur d' avast (anti-virus...) \u00c0 savoir Une adresse IP est une adresse logicielle attribu\u00e9e en g\u00e9n\u00e9ral automatiquement par un service DHCP. Une adresse MAC est une adresse physique , celle de la carte r\u00e9seau d'un ordinateur, d'un routeur. La correspondance entre les deux adresses se fait par le protocole ARP. Dans ce qui suit on se propose d'\u00e9tudier plus pr\u00e9cis\u00e9ment les deux protocoles populaires: TCP et IP. La couche Transport \u00b6 La couche Transport repose sur les protocoles TCP voire UDP: elle assure la communications de bout en bout entre les programmes. Les segments sont taggu\u00e9s avec de nombreuses informations dont le port de l'application qui a demand\u00e9 ses services( par exemple,le protocole https de la couche application utilise le port 443...). Le protocole TCP est dit en mode connect\u00e9 et fiable : avant toute transmission de segment, le protocle commence par une poign\u00e9e de main (acknowledgement) entre les deux acteurs de la communication( source(host1) et destination(host2)) les segments envoy\u00e9s sont num\u00e9rot\u00e9s de telle sorte que le destinataire sait si tous les segments ont \u00e9t\u00e9 envoy\u00e9s et redemandent la transmission le cas \u00e9ch\u00e9ant. Donc \u00e0 chaque envoie, il y a trois \u00e9tapes illustr\u00e9es par la figure ci-dessous. Le protocole UDP ne pr\u00e9sente pas ses avantages: il envoie les segments sans se soucier de leur destin... Par exemple, dans le cas de la transmission de la voix sur IP, la perte occasionnelle d'un paquet est tol\u00e9rable dans la mesure o\u00f9 il existe des m\u00e9canismes de substitution des donn\u00e9es manquantes, par contre la rapidit\u00e9 de transmission est un crit\u00e8re primordial pour la qualit\u00e9 d'\u00e9coute. \u00c0 retenir: Le protocole TCP est beaucoup plus fiable mais moins rapide que le protocole UDP Des outils d'analyses de r\u00e9seau comme Wireshark permet de visualiser dans le d\u00e9tails les \u00e9changes r\u00e9alis\u00e9s : Les croix rouges mettent en avant la poign\u00e9e de main entre la source(mon ordi) et la destination (le serveur qui h\u00e9berge le site www.lequipe.fr ) dans le protocole TCP . Remarquez en vert, la requ\u00eates DNS et sa r\u00e9ponse... La couche R\u00e9seau \u00b6 Cette couche repose sur le protocole IP qui assure la communication de bout en bout entre deux machines qui ne sont pas connect\u00e9s directement, c'est-\u00e0-dire situ\u00e9es dans des r\u00e9seaux diff\u00e9rents. Elle achemine les paquets (ou datagrammes) \u00e0 travers le r\u00e9seau Internet sans garantie (la garantie \u00e9tant asur\u00e9e par TCP...) mais avec robustesse(d\u00e9faillance d'un routeur). Le protocole repose sur un adressage logique des machines dans le r\u00e9seau ind\u00e9pendamment du r\u00e9seau physique( Ethernet par exemple...): c'est l'adresse IP . \u00c0 savoir: Il y a \\(2^{32}\\) adresses IP possibles, \u00e9puis\u00e9es d\u00e8s 2011! On se dirige petit \u00e0 petit vers les adresses IPv6(128bits) Il y a historiquement cinq classes d'adresse: certaines sont priv\u00e9es, d'autres publiques. Elles sont caract\u00e9ris\u00e9es par leur netId et leur hostId : plus le netId est petit plus le r\u00e9seau est grand! Classe NetId HostId Nombre de clients possibles A 8 24 \\(2^{24}-2\\) B 16 16 \\(2^{16}-2\\) C 24 8 \\(2^{8}-2\\) Cette notion est un peu d\u00e9suette mais m\u00e9rite d'\u00eatre connue... Il existe aussi les classe D et E peu utilis\u00e9es en ce qui nous concerne... !! warning \" Pourquoi -2?\" Deux adresses sont g\u00e9n\u00e9ralement r\u00e9serv\u00e9es: celle du r\u00e9seau dont le NetId est \u00e0 0 et celle du broadcast dont le NetId est \u00e0 255 Une adresse de broadcast sert \u00e0 diffuser \u00e0 l'ensemble des ordinateurs qui constituent le r\u00e9seau. Mais comment reconna\u00eetre netId et hostId ? C'est le r\u00f4le du masque de sous-r\u00e9seau Le masque de sous-r\u00e9seau est une adresse IP comme par exemple 255.255.255.0 qui en binaire donne l'horrible \u00e9criture : 11111111.11111111.11111111.00000000 ! Un ET logique entre le masque et une adresse IP permet de conna\u00eetre le netId donc le hostId de la machine: On utilise ici l'adresse d\u00e9cimale point\u00e9e (CIDR) indiquant le nombre de bits \u00e0 1 dans l'adresse du masque de sous r\u00e9seau. Example Si l'adresse d'une machine est 192.168.1.121/19 cela signifie que l'adresse du masque est, en binaire 11111111.11111111.11100000.00000000 ( 19 premiers bits \u00e0 1 et le reste \u00e0 0) soit en d\u00e9cimale, 255.255.224.0 . Certaines adresses sont vou\u00e9es \u00e0 des utilisations particuli\u00e8res: Example L'adresse 127.0.0.1 (ou simplement ::1 ) est la boucle locale ou simplement localhost . On l'utilise par exemple si sur la m\u00eame machine , vous installez un serveur Web et un client.", "title": "Rappel sur les r\u00e9seaux informatiques"}, {"location": "term/reseau_term.html#rappel-sur-les-reseaux", "text": "Les vid\u00e9os WhatsApp La taille maximale autoris\u00e9e pour les pi\u00e8ces jointes (photos, vid\u00e9os ou messages vocaux) que vous recevez ou envoyez via WhatsApp est de 16 Mo sur tous les appareils. Sur la plupart des t\u00e9l\u00e9phones, cette taille comprend entre 90 secondes et 3 minutes de vid\u00e9o. La dur\u00e9e maximale de la vid\u00e9o varie en fonction de la qualit\u00e9 de l'appareil photo de votre t\u00e9l\u00e9phone. C'est devenu une pratique quotidienne voire horaire: envoyer un texto, un e-mail, un message vocal, une vid\u00e9o... Mais comment \u00e7a marche? Un texto c'est quelques kilooctets alors qu'un message vocal d\u00e9passe largement le m\u00e9gaoctet et les vid\u00e9os c'est pire. Comment sont envoy\u00e9es les donn\u00e9es sur un r\u00e9seau? Comment \u00eatre s\u00fbr de les envoyer \u00e0 la bonne personne? Comment s'assurer que toutes les donn\u00e9es ont bien \u00e9t\u00e9 transmises? Autant de questions qui trouvent leur r\u00e9ponses dans le programme de premi\u00e8re mais avant de parler de routage (programme de terminale...), quelques rappels s'imposent!", "title": "Rappel sur les r\u00e9seaux"}, {"location": "term/reseau_term.html#un-reseau-cest-dabord-physique", "text": "Dans la notion de r\u00e9seau informatique, on doit dissocier le r\u00e9seau physique du r\u00e9seau logiciel . \u00c0 retenir! Internet est un r\u00e9seau mat\u00e9riel reliant tous les ordinateurs, smartphones, objets de l'internet(IoT),... entre eux. Cette interconnexion se r\u00e9alise par c\u00e2bles(RJ45, fibre optique,...) ou par ondes (wifi, bluetooth, GSM, ...). M\u00eame les continents sont r\u00e9li\u00e9s entre eux par d'\u00e9normes c\u00e2bles sous-marins....", "title": "Un r\u00e9seau c'est d'abord physique"}, {"location": "term/reseau_term.html#un-exemple-de-reseau-physique", "text": "Le r\u00e9seau Renater Connecteur de savoirs, RENATER, R\u00e9seau National de t\u00e9l\u00e9communications pour la Technologie l\u2019Enseignement et la Recherche, est l\u2019acteur de r\u00e9f\u00e9rence des infrastructures du num\u00e9rique de la communaut\u00e9 enseignement recherche. Constitu\u00e9 en 1993, RENATER est un groupement d\u2019int\u00e9r\u00eat public (GIP) qui assure la ma\u00eetrise d\u2019ouvrage du r\u00e9seau national de communications \u00e9lectroniques pour la technologie, l\u2019enseignement et la recherche. Les membres de RENATER sont le minist\u00e8re de l\u2019\u00c9ducation nationale et de la jeunesse, le minist\u00e8re de l\u2019Enseignement sup\u00e9rieur et de la Recherche, France Universit\u00e9s ainsi que des organismes de recherche, le CNRS, le CEA, Inria, le CNES, l\u2019Inrae, l\u2019Inserm, l\u2019Onera, le Cirad, l\u2019IRD et le BRGM. \u00c0 faire: Tapez windows + R puis cmd dans la fen\u00eatre qui s'ouvre. Tapez tracert www.ac-bordeaux.fr pour conna\u00eetre la route qui conduit de votre ordinateur \u00e0 celui qui h\u00e9berge le site du rectorat. Vous verrez appara\u00eetre le r\u00e9seau Renater. Choississez un autre site pour constater que les ordinateurs du lyc\u00e9e (Education Nationale...) sont tous reli\u00e9s (via le serveur) au r\u00e9seau RENATER. Attention, si vous effectuez la m\u00eame manipulation de chez vous, ce r\u00e9seau d\u00e9di\u00e9 n'appara\u00eetra \u00e9videmment pas!", "title": "Un exemple de r\u00e9seau physique"}, {"location": "term/reseau_term.html#les-objets-dun-reseau", "text": "Le Hub (concentrateur): Permet de relier plusieurs machines entre elles. Compl\u00e9tement d\u00e9suet car il ne g\u00e8re pas les transmissions et les collisions. Le Switch(commutateur): Permet de relier plusieurs machines entre elles avec canal d\u00e9di\u00e9 pour chaque destinataire choisi... La passerelle et le routeur: Votre box internet joue bien des r\u00f4les: en particulier celui de routeur et de passerelle, reliant votre r\u00e9seau priv\u00e9 au r\u00e9seau internet via les routeurs de votre FAI. 4. Les connectiques On ne saurait \u00e9voquer les r\u00e9seaux physiques sans parler des c\u00e2bles ou prises RJ45 omnipr\u00e9sents: il existe d'autres types de connectiques notamment pour la fibre ou le t\u00e9l\u00e9phone... \u00c0 retenir Les switch sont des hub intelligents qui g\u00e9rent les informations qu'ils recoivent: ils ne transmettent qu'\u00e0 la machine concern\u00e9e par le message contrairement aux hub qui diffusent largement. Les hub ne sont plus utilis\u00e9s de nos jours dans les r\u00e9seaux modernes.", "title": "Les objets d'un r\u00e9seau"}, {"location": "term/reseau_term.html#un-reseau-cest-ensuite-logiciel-et-protocolaire", "text": "Pour que deux ordinateurs puissent communiquer entre eux, il faut un ensemble de r\u00e8gles pr\u00e9-d\u00e9finies: comment d\u00e9buter le communication? comment envoyer au bon destinataire ? comment s'assurer que le message a \u00e9t\u00e9 bien envoy\u00e9? ... L'ensemble de ces r\u00e8gles est appel\u00e9 protocole . \u00c0 savoir: Un protocole d\u00e9finit de mani\u00e8re formelle et interop\u00e9rable l'\u00e9change des informations entre ordinateurs. Revenons \u00e0 notre questionnement initial: je prends une photo et je l'envoie \u00e0 mon ami. Que se passe t-il r\u00e9ellement? Le sch\u00e9ma suivant illustre les diff\u00e9rentes \u00e9tapes de la communication: Col Couche Son r\u00f4le La couche application Elle g\u00e9n\u00e8re des donn\u00e9es : ici une image et certainement des m\u00e9tadonn\u00e9es(qui envoie? \u00e0 quelle heure?,...) et les livre \u00e0 la couche suivante. La couche transport Elle d\u00e9coupe les donn\u00e9es en petits paquets(1500octets environ...), les taggent par le port de l'application \u00e0 l'origine de la communication puis les identifie par des informations chiffr\u00e9es permettant dans le cas de TCP de reconstituer les donn\u00e9es en bout de cha\u00eene d'une part et de savoir si il manque des paquets d'autre part(voire illustration suivante) La couche r\u00e9seau Elle re\u00e7oit les paquets de la couche transport et appose les adresses IP de la source et de la destination sans se pr\u00e9ocupper de leur contenu La couche liaison Elle re\u00e7oit les donn\u00e9es de la couche r\u00e9seau et appose les adresses MAC de la source et de la destination Col Le mod\u00e8le est con\u00e7u en couche: chaque couche a son propre r\u00f4le et fournit des donn\u00e9es \u00e0 la couche suivante. Je vous popose ici une version simplifi\u00e9e mais dans la r\u00e9alit\u00e9 c'est beaucoup plus \u00e9labor\u00e9... Le mod\u00e8le OSI(7 couches) et sa version simplifi\u00e9e(4 couches) Un protocole de la couche de liaison : ETHERNET Invent\u00e9 au d\u00e9but des ann\u00e9es 70 par Xerox puis sp\u00e9cifi\u00e9 dans les ann\u00e9es 80, il propose plusieurs variantes. C'est la premi\u00e8re technologie LAN grand public pour faire communiquer des ordinateurs rattach\u00e9s \u00e0 un m\u00eame \u00ab \u00e9ther \u00bb, c'est \u00e0 dire, un milieu passif capable de transf\u00e9rer des donn\u00e9es, comme un c\u00e2ble coaxial De la th\u00e9orie \u00e0 la pratique: observez la frame captur\u00e9e par Wireshark: On retrouve: le mod\u00e8le en couche la couche Ethernet avec les adresses MAC (maquill\u00e9es ici) la couche IP qui fournit les adresses IP la couche Transport qui donne le port source de l'application (64423) vers le port destination (80) avec des informations la couche Application (http) C'est mon ordinateur( automatiquement) qui fait une requ\u00eate http sur un serveur d' avast (anti-virus...) \u00c0 savoir Une adresse IP est une adresse logicielle attribu\u00e9e en g\u00e9n\u00e9ral automatiquement par un service DHCP. Une adresse MAC est une adresse physique , celle de la carte r\u00e9seau d'un ordinateur, d'un routeur. La correspondance entre les deux adresses se fait par le protocole ARP. Dans ce qui suit on se propose d'\u00e9tudier plus pr\u00e9cis\u00e9ment les deux protocoles populaires: TCP et IP.", "title": "Un r\u00e9seau c'est ensuite logiciel et protocolaire"}, {"location": "term/reseau_term.html#la-couche-transport", "text": "La couche Transport repose sur les protocoles TCP voire UDP: elle assure la communications de bout en bout entre les programmes. Les segments sont taggu\u00e9s avec de nombreuses informations dont le port de l'application qui a demand\u00e9 ses services( par exemple,le protocole https de la couche application utilise le port 443...). Le protocole TCP est dit en mode connect\u00e9 et fiable : avant toute transmission de segment, le protocle commence par une poign\u00e9e de main (acknowledgement) entre les deux acteurs de la communication( source(host1) et destination(host2)) les segments envoy\u00e9s sont num\u00e9rot\u00e9s de telle sorte que le destinataire sait si tous les segments ont \u00e9t\u00e9 envoy\u00e9s et redemandent la transmission le cas \u00e9ch\u00e9ant. Donc \u00e0 chaque envoie, il y a trois \u00e9tapes illustr\u00e9es par la figure ci-dessous. Le protocole UDP ne pr\u00e9sente pas ses avantages: il envoie les segments sans se soucier de leur destin... Par exemple, dans le cas de la transmission de la voix sur IP, la perte occasionnelle d'un paquet est tol\u00e9rable dans la mesure o\u00f9 il existe des m\u00e9canismes de substitution des donn\u00e9es manquantes, par contre la rapidit\u00e9 de transmission est un crit\u00e8re primordial pour la qualit\u00e9 d'\u00e9coute. \u00c0 retenir: Le protocole TCP est beaucoup plus fiable mais moins rapide que le protocole UDP Des outils d'analyses de r\u00e9seau comme Wireshark permet de visualiser dans le d\u00e9tails les \u00e9changes r\u00e9alis\u00e9s : Les croix rouges mettent en avant la poign\u00e9e de main entre la source(mon ordi) et la destination (le serveur qui h\u00e9berge le site www.lequipe.fr ) dans le protocole TCP . Remarquez en vert, la requ\u00eates DNS et sa r\u00e9ponse...", "title": "La couche Transport"}, {"location": "term/reseau_term.html#la-couche-reseau", "text": "Cette couche repose sur le protocole IP qui assure la communication de bout en bout entre deux machines qui ne sont pas connect\u00e9s directement, c'est-\u00e0-dire situ\u00e9es dans des r\u00e9seaux diff\u00e9rents. Elle achemine les paquets (ou datagrammes) \u00e0 travers le r\u00e9seau Internet sans garantie (la garantie \u00e9tant asur\u00e9e par TCP...) mais avec robustesse(d\u00e9faillance d'un routeur). Le protocole repose sur un adressage logique des machines dans le r\u00e9seau ind\u00e9pendamment du r\u00e9seau physique( Ethernet par exemple...): c'est l'adresse IP . \u00c0 savoir: Il y a \\(2^{32}\\) adresses IP possibles, \u00e9puis\u00e9es d\u00e8s 2011! On se dirige petit \u00e0 petit vers les adresses IPv6(128bits) Il y a historiquement cinq classes d'adresse: certaines sont priv\u00e9es, d'autres publiques. Elles sont caract\u00e9ris\u00e9es par leur netId et leur hostId : plus le netId est petit plus le r\u00e9seau est grand! Classe NetId HostId Nombre de clients possibles A 8 24 \\(2^{24}-2\\) B 16 16 \\(2^{16}-2\\) C 24 8 \\(2^{8}-2\\) Cette notion est un peu d\u00e9suette mais m\u00e9rite d'\u00eatre connue... Il existe aussi les classe D et E peu utilis\u00e9es en ce qui nous concerne... !! warning \" Pourquoi -2?\" Deux adresses sont g\u00e9n\u00e9ralement r\u00e9serv\u00e9es: celle du r\u00e9seau dont le NetId est \u00e0 0 et celle du broadcast dont le NetId est \u00e0 255 Une adresse de broadcast sert \u00e0 diffuser \u00e0 l'ensemble des ordinateurs qui constituent le r\u00e9seau. Mais comment reconna\u00eetre netId et hostId ? C'est le r\u00f4le du masque de sous-r\u00e9seau Le masque de sous-r\u00e9seau est une adresse IP comme par exemple 255.255.255.0 qui en binaire donne l'horrible \u00e9criture : 11111111.11111111.11111111.00000000 ! Un ET logique entre le masque et une adresse IP permet de conna\u00eetre le netId donc le hostId de la machine: On utilise ici l'adresse d\u00e9cimale point\u00e9e (CIDR) indiquant le nombre de bits \u00e0 1 dans l'adresse du masque de sous r\u00e9seau. Example Si l'adresse d'une machine est 192.168.1.121/19 cela signifie que l'adresse du masque est, en binaire 11111111.11111111.11100000.00000000 ( 19 premiers bits \u00e0 1 et le reste \u00e0 0) soit en d\u00e9cimale, 255.255.224.0 . Certaines adresses sont vou\u00e9es \u00e0 des utilisations particuli\u00e8res: Example L'adresse 127.0.0.1 (ou simplement ::1 ) est la boucle locale ou simplement localhost . On l'utilise par exemple si sur la m\u00eame machine , vous installez un serveur Web et un client.", "title": "La couche R\u00e9seau"}, {"location": "term/routage.html", "text": "Protocoles de routage \u00b6 Notions essentielles : Lorsqu'une machine A, d'adresse IP_A veut discuter avec une machine B, d'adresse IP_B : La machine A calcule (gr\u00e2ce au masque de sous-r\u00e9seau) si B est dans le m\u00eame sous-r\u00e9seau qu'elle, ou pas. Si oui, elle peut donc conna\u00eetre l'adresse MAC de la carte r\u00e9seau de la machine B (soit elle la poss\u00e8de d\u00e9j\u00e0 dans sa table ARP, soit elle la demande en envoyant un message de broadcast \u00e0 tout le sous-r\u00e9seau : \u00abqui poss\u00e8de cette adresse IP_B ?\u00bb). Elle envoie donc dans le sous-r\u00e9seau une trame ayant pour ent\u00eate l'adresse MAC de B : le switch lit cette trame, sait sur quel port est branch\u00e9 la machine B et lui envoie sp\u00e9cifiquement donc le message. Si B n'est pas dans le m\u00eame sous-r\u00e9seau que A, A mettra en ent\u00eate de sa trame l'adresse MAC de la carte r\u00e9seau du routeur, qui joue le r\u00f4le de passerelle. Le routeur va ouvrir la trame et va observer l'IP_B, \u00e0 qui il doit remettre ce message. C'est maintenant que vont intervenir les protocoles de routage : est-ce que B est dans le m\u00eame sous-r\u00e9seau que le routeur ? est-ce que B est dans un autre sous-r\u00e9seau connu du routeur ? est-ce que B est totalement inconnu du routeur ? Ces questions trouveront des r\u00e9ponses gr\u00e2ce \u00e0 table de routage du routeur. Tables de routage \u00b6 Les tables de routage sont des informations stock\u00e9es dans le routeur permettant d'aiguiller intelligemment les donn\u00e9es qui lui sont transmises. Dans le r\u00e9seau ci-dessus, si l'ordinateur d'adresse 192.168.0.5 veut interroger le serveur 10.7.3.8 : l'adresse 10.7.3.8 n'\u00e9tant pas dans le sous-r\u00e9seau F (d'adresse 192.168.0.0 / 24 ), la requ\u00eate est confi\u00e9e au routeur via son adresse passerelle dans le r\u00e9seau F (ici 192.168.0.254 ). le routeur observe si l'IP recherch\u00e9e appartient \u00e0 un autre des sous-r\u00e9seaux auquel il est connect\u00e9. Ici, l'IP recherch\u00e9e 10.7.3.8 n'appartient ni au sous-r\u00e9seau A ou E. le routeur va donc regarder dans sa table de routage l'adresse passerelle d'un autre routeur vers qui elle doit rediriger les donn\u00e9es. Si le sous-r\u00e9seau C fait partie de sa table de routage, le routeur R1 saura alors que le meilleur chemin est (par exemple) de confier les donn\u00e9es au routeur R3. si le sous-r\u00e9seau C ne fait pas partie de la table de routage, le routeur R1 va alors le rediriger vers une route \u00abpar d\u00e9faut\u00bb (que l'on peut assimiler au panneau \u00abtoutes directions\u00bb sur les panneaux de signalisation). Par exemple, la table de routage du routeur R1 pourrait \u00eatre : Destination Passerelle 192.168.0.0 /24 192.168.0.254 172.17.1.0 /24 172.17.1.254 10.0.5.0 /24 10.0.5.152 10.5.2.0 /24 172.17.1.254 10.7.3.0 /24 10.0.5.135 Comment sont construites les tables de routage ? \u00b6 Soit \u00e0 la main par l'administrateur r\u00e9seau, quand le r\u00e9seau est petit : on parle alors de table statique . Soit de mani\u00e8re dynamique : les r\u00e9seaux s'envoient eux-m\u00eames des informations permettant de mettre \u00e0 jour leurs tables de routages respectives. Des algorithmes de d\u00e9termination de meilleur chemin sont alors utilis\u00e9s : nous allons en d\u00e9couvrir deux, le protocole RIP et le protocole OSPF. Le protocole RIP \u00b6 Le Routing Information Protocol est bas\u00e9 sur l'\u00e9change (toutes les 30 secondes) des tables de routage de chaque routeur. Au d\u00e9but, chaque routeur ne conna\u00eet que les r\u00e9seaux auquel il est directement connect\u00e9, associ\u00e9 \u00e0 la distance 1. Ensuite, chaque routeur re\u00e7oit p\u00e9riodiquement la table des r\u00e9seaux auquel il est connect\u00e9, suivant les r\u00e8gles ci-dessous : les r\u00e8gles du protocole RIP s'il d\u00e9couvre une route vers un nouveau r\u00e9seau inconnu, il l'ajoute \u00e0 sa table en augmentant de 1 la distance annonc\u00e9e par le routeur qui lui a transmis sa table. s'il d\u00e9couvre une route vers un r\u00e9seau connu mais plus courte (en rajoutant 1) que celle qu'il poss\u00e8de dans sa table, il actualise sa table. s'il d\u00e9couvre une route vers un r\u00e9seau connu mais plus longue que celle qu'il poss\u00e8de dans sa table, il ignore cette route. s'il re\u00e7oit une route vers un r\u00e9seau connu en provenance d'un routeur d\u00e9j\u00e0 existant dans sa table, s'il met \u00e0 jour sa table car la topologie du r\u00e9seau a \u00e9t\u00e9 modifi\u00e9e. si le r\u00e9seau n'\u00e9volue pas (panne ou ajout de nouveau mat\u00e9riel), les tables de routage convergent vers une valeur stable. Elles n'\u00e9voluent plus. si un routeur ne re\u00e7oit pas pendant 3 minutes d'information de la part d'un routeur qui lui avait auparavant communiqu\u00e9 sa table de routage, ce routeur est consid\u00e9r\u00e9 comme en panne, et toutes les routes passant par lui sont affect\u00e9es de la distance infinie : 16. Remarques et inconv\u00e9nients: Le protocole RIP n'admet qu'une distance maximale \u00e9gale \u00e0 15 (ceci explique que 16 soit consid\u00e9r\u00e9 comme la distance infinie), ce qui le limite aux r\u00e9seaux de petite taille. Chaque routeur n'a jamais connaissance de la topologie du r\u00e9seau tout entier : il ne le conna\u00eet que par ce que les autres routeurs lui ont racont\u00e9. On dit que ce protocole de routage est du routing by rumor . La m\u00e9trique utilis\u00e9e (le nombre de sauts) ne tient pas compte de la qualit\u00e9 de la liaison, contrairement au protocole OSPF. Le protocole OSPF \u00b6 OSPF : Open Shortest Path First Un inconv\u00e9nient majeur du protocole pr\u00e9c\u00e9dent est la non-prise en compte de la bande passante reliant les routeurs. principe fondamental du protocole OSPF Le chemin le plus rapide n'est pas forc\u00e9ment le plus court. En gris, le chemin RIP. En bleu, l'OSPF. Dans le protocole OSPF, les tables de routage vont prendre en consid\u00e9ration la vitesse de communication entre les routeurs. Dans une premi\u00e8re phase d'initialisation, chaque routeur va acqu\u00e9rir (par succession de messages envoy\u00e9s et re\u00e7us) la connaissance totale du r\u00e9seau (diff\u00e9rence fondamentale avec RIP) et de la qualit\u00e9 technique de la liaison entre chaque routeur. 3.1 Les diff\u00e9rents types de liaison et leur co\u00fbt \u00b6 On peut, approximativement, classer les types de liaison suivant ce tableau de d\u00e9bits th\u00e9oriques : Technologie BP descendante BP montante Modem 56 kbit/s 48 kbit/s Bluetooth 3 Mbit/s 3 Mbit/s Ethernet 10 Mbit/s 10 Mbit/s Wi-Fi 10 Mbit/s ~ 10 Gbits/s 10 Mbit/s ~ 10 Gbits/s ADSL 13 Mbit/s 1 Mbit/s 4G 100 Mbit/s 50 Mbit/s Satellite 50 Mbit/s 1 Mbit/s Fast Ethernet 100 Mbit/s 100 Mbit/s FFTH (fibre) 10 Gbit/s 10 Gbit/s 5G 20 Gbit/s 10 Gbit/s L'id\u00e9e du protocole OSPF est de pond\u00e9rer chaque trajet entre routeurs (comptant simplement pour \u00ab1\u00bb dans le protocole RIP) par une valeur de co\u00fbt inversement proportionnelle au d\u00e9bit de transfert. Par exemple, si le d\u00e9bit \\(d\\) est exprim\u00e9 en bits/s, on peut calculer le co\u00fbt de chaque liaison par la formule : \\[ \\text{co\u00fbt} = \\frac{10^8}{d} \\] Cette formule de calcul peut \u00eatre diff\u00e9rente suivant les exercices, et sera syst\u00e9matiquement redonn\u00e9e. N\u00e9anmoins la valeur \\(d\\) sera toujours au d\u00e9nominateur, pour assurer la proportionnalit\u00e9 inverse du d\u00e9bit. Avec cette convention, un route entre deux routeurs reli\u00e9s en Fast Ethernet (100 Mbits/s) aura a un poids de 1, une liaison satellite de 20 Mbits/s aura un poids de 5, etc. Exemple \u00b6 Reprenons le r\u00e9seau suivant : et simplifions-le en ne gardant que les liens entre routeurs, en indiquant leur d\u00e9bit : Notre r\u00e9seau est devenu un graphe . Nous allons pond\u00e9rer ses ar\u00eates avec la fonction co\u00fbt introduite pr\u00e9c\u00e9demment. L'unit\u00e9 \u00e9tant le Mbit/s, l'ar\u00eate entre R1 et R3 aura un poids de \\(\\frac{100}{20}=5\\) . Le graphe pond\u00e9r\u00e9 est donc : Le chemin le plus rapide pour aller de l'ordinateur au serveur est donc R1-R2-R4, et non plus R1-R3 comme l'aurait indiqu\u00e9 le protocole RIP. Trouver le plus court chemin dans un graphe pond\u00e9r\u00e9 \u00b6 L'exemple pr\u00e9c\u00e9dent \u00e9tait tr\u00e8s simple et de solution intuitive. Dans le cas d'un graphe pond\u00e9r\u00e9 complexe, existe-t-il un algorithme de d\u00e9termination du plus court chemin d'un point \u00e0 un autre ? La r\u00e9ponse est oui , depuis la d\u00e9couverte en 1959 par Edsger Dijkstra de l'algorithme qui porte son nom, l'algorithme de Dijkstra . Pour le comprendre, vous pouvez regarder la vid\u00e9o suivante : Cet algorithme, ici ex\u00e9cut\u00e9 de mani\u00e8re manuelle, est bien s\u00fbr programmable. Et c'est donc gr\u00e2ce \u00e0 lui que chaque routeur calcule la route la plus rapide pour acheminer les donn\u00e9es qu'il re\u00e7oit. Exercice \u00b6 (extrait du sujet 0) On consid\u00e8re le r\u00e9seau suivant : On rappelle que le co\u00fbt d\u2019une liaison est donn\u00e9 par la formule suivante : \\[ \\text{co\u00fbt} = \\frac{10^8}{d} \\] Question 1 V\u00e9rifier que le co\u00fbt de la liaison entre les routeurs A et B est 0,01. La liaison entre le routeur B et D a un co\u00fbt de 5. Quel est le d\u00e9bit de cette liaison ? Question 2 Le routeur A doit transmettre un message au routeur G, en empruntant le chemin dont la somme des co\u00fbts sera la plus petite possible. D\u00e9terminer le chemin parcouru. On indiquera le raisonnement utilis\u00e9. Correction Q1 1. \\(\\text{co\u00fbt} = \\dfrac{10^8}{10 \\times 10^9}= \\dfrac{10^8}{10^{10}}= 10^{-2}=0,01\\) 2. \\(5=\\dfrac{10^8}{d}\\) donc \\(d=\\dfrac{10^8}{5}=20 \\times 10^6\\) = 20 Mb/s Q2 On peut y deviner le chemin de co\u00fbt minimal entre A et G, qui est A-D-E-G (co\u00fbt 1,011). Pour le justifier, on peut (non obligatoire) faire un algorithme de Dijkstra : Bibliographie Num\u00e9rique et Sciences Informatiques, Terminale, T. BALABONSKI, S. CONCHON, J.-C. FILLIATRE, K. NGUYEN, \u00e9ditions ELLIPSES. Pr\u00e9pabac NSI, Terminale, G. CONNAN, V. PETROV, G. ROZSAVOLGYI, L. SIGNAC, \u00e9ditions HATIER. Site d'Olivier L\u00e9cluse https://www.lecluse.fr/nsi/NSI_T/archi/routage/ Surtout \u00e0 Gilles Lassus pour son travail formidable...", "title": "Routage"}, {"location": "term/routage.html#protocoles-de-routage", "text": "Notions essentielles : Lorsqu'une machine A, d'adresse IP_A veut discuter avec une machine B, d'adresse IP_B : La machine A calcule (gr\u00e2ce au masque de sous-r\u00e9seau) si B est dans le m\u00eame sous-r\u00e9seau qu'elle, ou pas. Si oui, elle peut donc conna\u00eetre l'adresse MAC de la carte r\u00e9seau de la machine B (soit elle la poss\u00e8de d\u00e9j\u00e0 dans sa table ARP, soit elle la demande en envoyant un message de broadcast \u00e0 tout le sous-r\u00e9seau : \u00abqui poss\u00e8de cette adresse IP_B ?\u00bb). Elle envoie donc dans le sous-r\u00e9seau une trame ayant pour ent\u00eate l'adresse MAC de B : le switch lit cette trame, sait sur quel port est branch\u00e9 la machine B et lui envoie sp\u00e9cifiquement donc le message. Si B n'est pas dans le m\u00eame sous-r\u00e9seau que A, A mettra en ent\u00eate de sa trame l'adresse MAC de la carte r\u00e9seau du routeur, qui joue le r\u00f4le de passerelle. Le routeur va ouvrir la trame et va observer l'IP_B, \u00e0 qui il doit remettre ce message. C'est maintenant que vont intervenir les protocoles de routage : est-ce que B est dans le m\u00eame sous-r\u00e9seau que le routeur ? est-ce que B est dans un autre sous-r\u00e9seau connu du routeur ? est-ce que B est totalement inconnu du routeur ? Ces questions trouveront des r\u00e9ponses gr\u00e2ce \u00e0 table de routage du routeur.", "title": "Protocoles de routage"}, {"location": "term/routage.html#tables-de-routage", "text": "Les tables de routage sont des informations stock\u00e9es dans le routeur permettant d'aiguiller intelligemment les donn\u00e9es qui lui sont transmises. Dans le r\u00e9seau ci-dessus, si l'ordinateur d'adresse 192.168.0.5 veut interroger le serveur 10.7.3.8 : l'adresse 10.7.3.8 n'\u00e9tant pas dans le sous-r\u00e9seau F (d'adresse 192.168.0.0 / 24 ), la requ\u00eate est confi\u00e9e au routeur via son adresse passerelle dans le r\u00e9seau F (ici 192.168.0.254 ). le routeur observe si l'IP recherch\u00e9e appartient \u00e0 un autre des sous-r\u00e9seaux auquel il est connect\u00e9. Ici, l'IP recherch\u00e9e 10.7.3.8 n'appartient ni au sous-r\u00e9seau A ou E. le routeur va donc regarder dans sa table de routage l'adresse passerelle d'un autre routeur vers qui elle doit rediriger les donn\u00e9es. Si le sous-r\u00e9seau C fait partie de sa table de routage, le routeur R1 saura alors que le meilleur chemin est (par exemple) de confier les donn\u00e9es au routeur R3. si le sous-r\u00e9seau C ne fait pas partie de la table de routage, le routeur R1 va alors le rediriger vers une route \u00abpar d\u00e9faut\u00bb (que l'on peut assimiler au panneau \u00abtoutes directions\u00bb sur les panneaux de signalisation). Par exemple, la table de routage du routeur R1 pourrait \u00eatre : Destination Passerelle 192.168.0.0 /24 192.168.0.254 172.17.1.0 /24 172.17.1.254 10.0.5.0 /24 10.0.5.152 10.5.2.0 /24 172.17.1.254 10.7.3.0 /24 10.0.5.135", "title": "Tables de routage"}, {"location": "term/routage.html#comment-sont-construites-les-tables-de-routage", "text": "Soit \u00e0 la main par l'administrateur r\u00e9seau, quand le r\u00e9seau est petit : on parle alors de table statique . Soit de mani\u00e8re dynamique : les r\u00e9seaux s'envoient eux-m\u00eames des informations permettant de mettre \u00e0 jour leurs tables de routages respectives. Des algorithmes de d\u00e9termination de meilleur chemin sont alors utilis\u00e9s : nous allons en d\u00e9couvrir deux, le protocole RIP et le protocole OSPF.", "title": "Comment sont construites les tables de routage ?"}, {"location": "term/routage.html#le-protocole-rip", "text": "Le Routing Information Protocol est bas\u00e9 sur l'\u00e9change (toutes les 30 secondes) des tables de routage de chaque routeur. Au d\u00e9but, chaque routeur ne conna\u00eet que les r\u00e9seaux auquel il est directement connect\u00e9, associ\u00e9 \u00e0 la distance 1. Ensuite, chaque routeur re\u00e7oit p\u00e9riodiquement la table des r\u00e9seaux auquel il est connect\u00e9, suivant les r\u00e8gles ci-dessous : les r\u00e8gles du protocole RIP s'il d\u00e9couvre une route vers un nouveau r\u00e9seau inconnu, il l'ajoute \u00e0 sa table en augmentant de 1 la distance annonc\u00e9e par le routeur qui lui a transmis sa table. s'il d\u00e9couvre une route vers un r\u00e9seau connu mais plus courte (en rajoutant 1) que celle qu'il poss\u00e8de dans sa table, il actualise sa table. s'il d\u00e9couvre une route vers un r\u00e9seau connu mais plus longue que celle qu'il poss\u00e8de dans sa table, il ignore cette route. s'il re\u00e7oit une route vers un r\u00e9seau connu en provenance d'un routeur d\u00e9j\u00e0 existant dans sa table, s'il met \u00e0 jour sa table car la topologie du r\u00e9seau a \u00e9t\u00e9 modifi\u00e9e. si le r\u00e9seau n'\u00e9volue pas (panne ou ajout de nouveau mat\u00e9riel), les tables de routage convergent vers une valeur stable. Elles n'\u00e9voluent plus. si un routeur ne re\u00e7oit pas pendant 3 minutes d'information de la part d'un routeur qui lui avait auparavant communiqu\u00e9 sa table de routage, ce routeur est consid\u00e9r\u00e9 comme en panne, et toutes les routes passant par lui sont affect\u00e9es de la distance infinie : 16. Remarques et inconv\u00e9nients: Le protocole RIP n'admet qu'une distance maximale \u00e9gale \u00e0 15 (ceci explique que 16 soit consid\u00e9r\u00e9 comme la distance infinie), ce qui le limite aux r\u00e9seaux de petite taille. Chaque routeur n'a jamais connaissance de la topologie du r\u00e9seau tout entier : il ne le conna\u00eet que par ce que les autres routeurs lui ont racont\u00e9. On dit que ce protocole de routage est du routing by rumor . La m\u00e9trique utilis\u00e9e (le nombre de sauts) ne tient pas compte de la qualit\u00e9 de la liaison, contrairement au protocole OSPF.", "title": "Le protocole RIP"}, {"location": "term/routage.html#le-protocole-ospf", "text": "OSPF : Open Shortest Path First Un inconv\u00e9nient majeur du protocole pr\u00e9c\u00e9dent est la non-prise en compte de la bande passante reliant les routeurs. principe fondamental du protocole OSPF Le chemin le plus rapide n'est pas forc\u00e9ment le plus court. En gris, le chemin RIP. En bleu, l'OSPF. Dans le protocole OSPF, les tables de routage vont prendre en consid\u00e9ration la vitesse de communication entre les routeurs. Dans une premi\u00e8re phase d'initialisation, chaque routeur va acqu\u00e9rir (par succession de messages envoy\u00e9s et re\u00e7us) la connaissance totale du r\u00e9seau (diff\u00e9rence fondamentale avec RIP) et de la qualit\u00e9 technique de la liaison entre chaque routeur.", "title": "Le protocole OSPF"}, {"location": "term/routage.html#31-les-differents-types-de-liaison-et-leur-cout", "text": "On peut, approximativement, classer les types de liaison suivant ce tableau de d\u00e9bits th\u00e9oriques : Technologie BP descendante BP montante Modem 56 kbit/s 48 kbit/s Bluetooth 3 Mbit/s 3 Mbit/s Ethernet 10 Mbit/s 10 Mbit/s Wi-Fi 10 Mbit/s ~ 10 Gbits/s 10 Mbit/s ~ 10 Gbits/s ADSL 13 Mbit/s 1 Mbit/s 4G 100 Mbit/s 50 Mbit/s Satellite 50 Mbit/s 1 Mbit/s Fast Ethernet 100 Mbit/s 100 Mbit/s FFTH (fibre) 10 Gbit/s 10 Gbit/s 5G 20 Gbit/s 10 Gbit/s L'id\u00e9e du protocole OSPF est de pond\u00e9rer chaque trajet entre routeurs (comptant simplement pour \u00ab1\u00bb dans le protocole RIP) par une valeur de co\u00fbt inversement proportionnelle au d\u00e9bit de transfert. Par exemple, si le d\u00e9bit \\(d\\) est exprim\u00e9 en bits/s, on peut calculer le co\u00fbt de chaque liaison par la formule : \\[ \\text{co\u00fbt} = \\frac{10^8}{d} \\] Cette formule de calcul peut \u00eatre diff\u00e9rente suivant les exercices, et sera syst\u00e9matiquement redonn\u00e9e. N\u00e9anmoins la valeur \\(d\\) sera toujours au d\u00e9nominateur, pour assurer la proportionnalit\u00e9 inverse du d\u00e9bit. Avec cette convention, un route entre deux routeurs reli\u00e9s en Fast Ethernet (100 Mbits/s) aura a un poids de 1, une liaison satellite de 20 Mbits/s aura un poids de 5, etc.", "title": "3.1 Les diff\u00e9rents types de liaison et leur co\u00fbt"}, {"location": "term/routage.html#exemple", "text": "Reprenons le r\u00e9seau suivant : et simplifions-le en ne gardant que les liens entre routeurs, en indiquant leur d\u00e9bit : Notre r\u00e9seau est devenu un graphe . Nous allons pond\u00e9rer ses ar\u00eates avec la fonction co\u00fbt introduite pr\u00e9c\u00e9demment. L'unit\u00e9 \u00e9tant le Mbit/s, l'ar\u00eate entre R1 et R3 aura un poids de \\(\\frac{100}{20}=5\\) . Le graphe pond\u00e9r\u00e9 est donc : Le chemin le plus rapide pour aller de l'ordinateur au serveur est donc R1-R2-R4, et non plus R1-R3 comme l'aurait indiqu\u00e9 le protocole RIP.", "title": "Exemple"}, {"location": "term/routage.html#trouver-le-plus-court-chemin-dans-un-graphe-pondere", "text": "L'exemple pr\u00e9c\u00e9dent \u00e9tait tr\u00e8s simple et de solution intuitive. Dans le cas d'un graphe pond\u00e9r\u00e9 complexe, existe-t-il un algorithme de d\u00e9termination du plus court chemin d'un point \u00e0 un autre ? La r\u00e9ponse est oui , depuis la d\u00e9couverte en 1959 par Edsger Dijkstra de l'algorithme qui porte son nom, l'algorithme de Dijkstra . Pour le comprendre, vous pouvez regarder la vid\u00e9o suivante : Cet algorithme, ici ex\u00e9cut\u00e9 de mani\u00e8re manuelle, est bien s\u00fbr programmable. Et c'est donc gr\u00e2ce \u00e0 lui que chaque routeur calcule la route la plus rapide pour acheminer les donn\u00e9es qu'il re\u00e7oit.", "title": "Trouver le plus court chemin dans un graphe pond\u00e9r\u00e9"}, {"location": "term/routage.html#exercice", "text": "(extrait du sujet 0) On consid\u00e8re le r\u00e9seau suivant : On rappelle que le co\u00fbt d\u2019une liaison est donn\u00e9 par la formule suivante : \\[ \\text{co\u00fbt} = \\frac{10^8}{d} \\] Question 1 V\u00e9rifier que le co\u00fbt de la liaison entre les routeurs A et B est 0,01. La liaison entre le routeur B et D a un co\u00fbt de 5. Quel est le d\u00e9bit de cette liaison ? Question 2 Le routeur A doit transmettre un message au routeur G, en empruntant le chemin dont la somme des co\u00fbts sera la plus petite possible. D\u00e9terminer le chemin parcouru. On indiquera le raisonnement utilis\u00e9. Correction Q1 1. \\(\\text{co\u00fbt} = \\dfrac{10^8}{10 \\times 10^9}= \\dfrac{10^8}{10^{10}}= 10^{-2}=0,01\\) 2. \\(5=\\dfrac{10^8}{d}\\) donc \\(d=\\dfrac{10^8}{5}=20 \\times 10^6\\) = 20 Mb/s Q2 On peut y deviner le chemin de co\u00fbt minimal entre A et G, qui est A-D-E-G (co\u00fbt 1,011). Pour le justifier, on peut (non obligatoire) faire un algorithme de Dijkstra : Bibliographie Num\u00e9rique et Sciences Informatiques, Terminale, T. BALABONSKI, S. CONCHON, J.-C. FILLIATRE, K. NGUYEN, \u00e9ditions ELLIPSES. Pr\u00e9pabac NSI, Terminale, G. CONNAN, V. PETROV, G. ROZSAVOLGYI, L. SIGNAC, \u00e9ditions HATIER. Site d'Olivier L\u00e9cluse https://www.lecluse.fr/nsi/NSI_T/archi/routage/ Surtout \u00e0 Gilles Lassus pour son travail formidable...", "title": "Exercice"}, {"location": "term/stalin.html", "text": "Structures de donn\u00e9es lin\u00e9aires \u00b6 Introduction \u00b6 Le programme Python poss\u00e8de un ensemble de types de base et de types structur\u00e9s rencontr\u00e9s en classe de premi\u00e8re: entier ( int ), flottants ( float ), cha\u00eene de caract\u00e8res, tuple, liste ou encore dictionnaires... Nous allons dans ce chapitre d\u00e9finir de nouveaux types abstraits , \u00e0 partir de son interface , qui rassemble l'ensemble des op\u00e9rations qui permettent de d\u00e9finir, de lire ou de modifier ces nouveaux objets. Dans la plus part des cas, on distinguera: les constructeurs qui cr\u00e9e la donn\u00e9e les getters qui permettent d'obtenir des informations sur la structure les setters qui permettent de modifier les caract\u00e9ristiques de ces donn\u00e9es On fera bien la distinction entre interface et impl\u00e9mentation : la premi\u00e8re d\u00e9finit une op\u00e9ration, la seconde la code! Pour une m\u00eame interface, il peut exister plusieurs impl\u00e9mentations comme nous allons le d\u00e9couvrir dans ce chapitre! Les listes \u00b6 Pr\u00e9sentation ! \u00b6 Le type abstrait Liste Une liste est une s\u00e9quence ordonn\u00e9e d'\u00e9l\u00e9ments. La liste suivante (\ud83e\udd23) donne une interface minimale de ce type: Primitives de l'interface Commentaires creer_liste() cr\u00e9e une liste vide est_vide(L) retourne un bool\u00e9en indiquant si la liste est vide inserer(L, e) ins\u00e9rer l'\u00e9l\u00e9ment e dans la liste L affiche_tete(L) affiche le premier \u00e9l\u00e9ment de la liste L Remarquez qu'on ne pr\u00e9cise pas dans la derni\u00e8re instruction o\u00f9 est ins\u00e9r\u00e9 l'\u00e9l\u00e9ment: \u00e0 la fin? au d\u00e9but? On peut enrichir cette interface par de nouvelles primitives comme supprimer(L,e) , afficher_premier_elt(L) ou simplement une op\u00e9rations qui retourne le nombre d'\u00e9l\u00e9ments de cette liste... Pour information, les interfaces Python sont en g\u00e9n\u00e9ral tr\u00e8s riches , ce qui fait aussi sa popularit\u00e9! Comment impl\u00e9menter une liste? \u00b6 Deux choix principaux pour l'impl\u00e9mentation d'une liste: soit par un tableau ( array ) o\u00f9 les \u00e9l\u00e9ments sont cons\u00e9cutifs en m\u00e9moire: dans le langage C, la taille des tableaux est d\u00e9finie pr\u00e9alablement pour allouer la place en m\u00e9moire et faire en sorte que les \u00e9l\u00e9ments soient \u00e0 des adresses voisines. soit par une liste cha\u00een\u00e9e: une liste est alors compos\u00e9e d'une t\u00eate et d'une queue! Les \u00e9l\u00e9ments d'une m\u00eame liste peuvent \u00eatre stock\u00e9s n'importe o\u00f9 dans la m\u00e9moire... Une diff\u00e9rence importante entre ces deux choix : dans un tableau, l\u2019 acc\u00e8s \u00e0 un \u00e9l\u00e9ment par son indice est rapide mais l\u2019 insertion est co\u00fbteuse et c\u2019est le contraire pour les listes cha\u00een\u00e9es ! La cellule (tete, queue) permet de cr\u00e9er ces derni\u00e8res listes! Une premi\u00e8re tentative... \u00b6 Allez soyons fous! Faisons le choix d'impl\u00e9menter une liste cha\u00een\u00e9e par des listes (pr\u00e9cis\u00e9ment par des listes python...)!\ud83e\udd14 Reprenons le tableau enrichi de l'interface sur les listes: Interface Impl\u00e9mentation Primitives de l'interface Commentaires creer_liste_vide() cr\u00e9e une liste vide est_vide(L) retourne un bool\u00e9en indiquant si la liste est vide inserer(L, e) ins\u00e9rer l'\u00e9l\u00e9ment e \u00e0 la t\u00eate de la liste L affiche_tete(L) affiche la t\u00eate de la liste L affiche_queue(L) affiche la queue de la liste L affiche_liste(L) affiche tous les \u00e9l\u00e9ments de la liste def creer_liste_vide (): return [] def est_vide ( L ): return L == [] def inserer ( L , e ): return [ e , L ] def affiche_tete ( L ): if not est_vide ( L ): return L [ 0 ] def affiche_queue ( L ): if not est_vide ( L ): return L [ 1 ] def affiche_liste ( L ): aff = [] while not est_vide ( L ): aff . append ( L [ 0 ]) L = L [ 1 ] return aff On peut alors cr\u00e9er des listes avec les interfaces pr\u00e9c\u00e9dentes: Le code suivant... ... produit la liste cha\u00een\u00e9e suivante! l1 = creer_liste_vide () for i in range ( 4 ): l1 = inserer ( l1 , i ) [3, [2, [1, [0, []]]]] Remarquez que la construction d'une liste cha\u00een\u00e9e est r\u00e9cursive ! Comprenez que Python a sa propre interface pour les listes, celle que vous connaissez habituellement. Une deuxi\u00e8me tentative! \u00b6 Puisque nous cr\u00e9eons de nouveaux objets d\u00e9finis par leur propri\u00e9t\u00e9 et leur m\u00e9thode, la programmation orient\u00e9e objet semble prendre toute sa place ici. L'objet n\u00e9cessaire \u00e0 la construcion de telles listes est d\u00e9finie par la classe Cellule propos\u00e9e ci-dessous: \"\"\" Implantation de la classe \u201cCellule\u201d Elle sera utilis\u00e9e pour les listes, les piles et les files. \"\"\" class Cellule () : def __init__ ( self , valeur = None , suivant = None ) : \"\"\" Param\u00e8tres ---------- valeur : type quelconque Description : Une valeur stock\u00e9e dans la cellule suivant : Un autre objet de type \u201cCellule\u201d Description : La cellule qui \u201csuit\u201d cette cellule selon l\u2019ordre d\u00e9fini par la structure. ---------- Cr\u00e9e une cellule avec une valeur et l\u2019adresse de la cellule qui la suit. \"\"\" self . valeur = valeur self . suivant = suivant Les attributs sont optionnels par d\u00e9faut. Voici maintenant une impl\u00e9mentation possible de listes cha\u00een\u00e9es avec ce constructeur: from Cellule import Cellule class Liste () : def __init__ ( self ) : \"\"\" Cr\u00e9e une liste vide. L\u2019attribut \u201chead\u201d est un objet Cellule qui d\u00e9finit la cellule en t\u00eate de la liste (premier \u00e9l\u00e9ment de la liste) \"\"\" self . head = None def estVide ( self ) : \"\"\" Renvoie True si la liste est vide et False sinon. \"\"\" return self . head == None def insererEnTete ( self , element ) : \"\"\" Param\u00e8tres ---------- element : N\u2019importe quel type Description : L\u2019\u00e9l\u00e9ment \u00e0 ajouter en t\u00eate de la liste ------- Ajoute un \u00e9l\u00e9ment en t\u00eate de liste. \"\"\" nouvelle_cellule = Cellule ( element , self . head ) self . head = nouvelle_cellule def tete ( self ) : \"\"\" Renvoie la valeur de l\u2019\u00e9l\u00e9ment en t\u00eate de liste. \"\"\" if not ( self . estVide ()) : return self . head . valeur def queue ( self ) : \"\"\" Renvoie la liste priv\u00e9e de son premier \u00e9l\u00e9ment (queue de la liste) \"\"\" subList = None if not ( self . estVide ()) : subList = Liste () subList . head = self . head . suivant return subList def __str__ ( self ): l = \"|\" c = self . head while c != None : l = l + str ( c . valeur ) + \"|\" c = c . suivant return l On peut alors cr\u00e9er de nouvelles listes avec cette nouvelle impl\u00e9mentation. \u00c0 faire Cr\u00e9er la liste ordonn\u00e9e 3,2,1,0 avec la classe pr\u00e9c\u00e9dente. Cr\u00e9er une liste de 20 nombres al\u00e9atoires compris entre 0 et 100. Afficher sa t\u00eate puis sa queue. On veut enrichir la structure par de nouvelles m\u00e9thodes. \u00c0 faire D\u00e9finir la m\u00e9thode __len__(self) qui retourne la longueur de la liste. D\u00e9finir la m\u00e9thode __getitem__(self, position) qui permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment situ\u00e9 \u00e0 la position position de la liste si celui-ci existe! D\u00e9finir la m\u00e9thode __ajouter_fin__(self, elt) qui permet d'ajouter un \u00e9l\u00e9ment \u00e0 la liste... On peut envisager une multitude d'impl\u00e9mentation selon le choix du d\u00e9veloppeur m\u00eame si les primitives de l'interface liste ne changent pas vraiment... Nous retrouverons cette id\u00e9e dans la partie exercice... \u00c0 faire Impl\u00e9menter la fonction qui permet d'ins\u00e9rer dans la liste cha\u00een\u00e9e ci-dessus, un \u00e9l\u00e9ment \u00e0 une position quelconque... Les piles \u00b6 Pr\u00e9sentation \u00b6 La pile, comme la liste, permet de stocker des donn\u00e9es et y acc\u00e9der. La diff\u00e9rence se situe au niveau de l'ajout et de la suppression d'un \u00e9l\u00e9ment! On parle de mode LIFO (Last In, First Out, donc, dernier arriv\u00e9, premier sorti), c\u2019est- \u00e0-dire que le dernier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la structure sera le prochain \u00e9l\u00e9ment auquel on acc\u00e8dera. Les premiers \u00e9l\u00e9ments ayant \u00e9t\u00e9 ajout\u00e9s devront \u00ab attendre \u00bb que tous les \u00e9l\u00e9ments qui ont \u00e9t\u00e9 ajout\u00e9s apr\u00e8s eux soient sortis de la pile. Contrairement aux listes, on ne peut donc pas acc\u00e9der \u00e0 n\u2019importe quelle valeur de la structure (pas d\u2019index). Pour g\u00e9rer cette contrainte, on d\u00e9finit alors le sommet de la pile qui caract\u00e9rise l\u2019emplacement pour ajouter ou retirer des \u00e9l\u00e9ments. On peut s\u2019imaginer une pile d\u2019assiettes pour mieux se repr\u00e9senter mentalement cette structure. On ajoute des nouvelles assiettes au sommet de la pile, et quand on veut en retirer une, on est oblig\u00e9 de prendre celle situ\u00e9e au sommet. Interface d'une pile \u00b6 On peut d\u00e9finir au moins 6 primitives de cette struture de donn\u00e9es: Primitives de l'interface Commentaires creer_pile_vide() cr\u00e9e une pile vide est_vide(P) retourne un bool\u00e9en indiquant si la pile P est vide taille_pile(P) retourne la taille de la pile P empiler(P, e) ajoute l'\u00e9l\u00e9ment e au sommet de la pile depiler(P) retire l'\u00e9l\u00e9m\u00e9nt situ\u00e9 au sommet de la pile P affiche_sommet(P) affiche le sommet de la pile P sans le retirer Attention aux effets de bords! Les m\u00e9thodes d'affichage en particulier ne doivent pas modifier l'\u00e9tat de la pile. En effet, pour afficher tous les \u00e9l\u00e9ments de la liste, l'id\u00e9e naturelle serait de la d\u00e9piler enti\u00e8rement et d'afficher chaque \u00e9l\u00e9ment. Mais \u00e0 la fin, la pile serait vide! On appelle cela un effet de bord ! Les fonctions javascript en particulier cr\u00e9ent de nombreux effet de bords de par leur nature mais c'est voulu! ce que dit Wikip\u00e9dia... En informatique, une fonction est dite \u00e0 effet de bord (traduction mot \u00e0 mot de l'anglais side effect, dont le sens est plus proche d'effet secondaire) si elle modifie un \u00e9tat en dehors de son environnement local, c'est-\u00e0-dire a une interaction observable avec le monde ext\u00e9rieur autre que retourner une valeur. La struture Pile est utilis\u00e9e pour: conserver l'historique de navigation stocker des actions et les annuler ( Ctrl + Z et Ctrl + Y ) programmer une calculatrice en notation polonaise invers\u00e9e ... Impl\u00e9menter une pile \u00b6 On peut \u00e0 peu pr\u00e8s tout imaginer pour impl\u00e9menter la struture de pile... je vous en propose deux ici! paradigme fonctionnel paradigme orient\u00e9 objet def creer_pile_vide () : \"\"\" Cr\u00e9e une pile vide en s\u2019appuyant sur les listes Python \"\"\" return [] def taille_pile ( pile ): \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile dont on veut conna\u00eetre le nombre d\u2019\u00e9l\u00e9ments ------- Renvoie le nombre d\u2019\u00e9l\u00e9ments contenus dans la pile. \"\"\" return len ( pile ) def est_vide ( pile ) : \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile dont on souhaite d\u00e9terminer si elle est vide. ------- Renvoie ``True`` si la pile est vide, et ``False`` sinon \"\"\" return taille_pile ( pile ) == 0 def empiler ( pile , element ) : \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile sur laquelle on souhaite empiler un \u00e9l\u00e9ment element : N\u2019importe quel type de donn\u00e9es. Description : L\u2019\u00e9l\u00e9ment \u00e0 empiler dans la pile. ------- Empile un \u00e9l\u00e9ment dans la pile pass\u00e9e en param\u00e8tres. \"\"\" pile . append ( element ) def depiler ( pile ) : \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile sur laquelle on souhaite d\u00e9piler un \u00e9l\u00e9ment ------- D\u00e9pile (supprime de la pile) l\u2019\u00e9l\u00e9ment au sommet de la pile et le renvoie. \"\"\" if est_vide ( pile ) : return None else : return pile . pop () def affiche_sommet ( pile ) : \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile dont on veut conna\u00eetre le sommet. ------- Renvoie le sommet de la pile (mais ne le d\u00e9pile pas). \"\"\" if est_vide ( pile ) : return None else : return pile [ len ( pile ) - 1 ] from Cellule import Cellule class Pile : def __init__ ( self ) : \"\"\" Cr\u00e9e une pile vide. L\u2019attribut \u201ctop\u201d est un objet Cellule qui d\u00e9finit la cellule constituant le \u201csommet\u201d de la pile. \"\"\" self . top = None def estVide ( self ) : \"\"\" Renvoie True si la pile est vide et False sinon. \"\"\" return self . top == None def sommet ( self ) : \"\"\" Renvoie la valeur de l\u2019\u00e9l\u00e9ment au sommet de la pile. \"\"\" if not ( self . estVide ()) : return self . top . valeur else : return None def empiler ( self , element ) : \"\"\" Param\u00e8tres ---------- element : est de n\u2019importe quel type Description : L\u2019\u00e9l\u00e9ment \u00e0 empiler sur la pile. ------- Ajoute un \u00e9l\u00e9ment au sommet de la pile. \"\"\" nouvelleCellule = Cellule ( element , self . top ) self . top = nouvelleCellule def depiler ( self ) : \"\"\" D\u00e9pile et renvoie l\u2019\u00e9l\u00e9ment situ\u00e9 au sommet de la pile. \"\"\" if not ( self . estVide ()) : valeur = self . top . valeur self . top = self . top . suivant return valeur else : return None def __len__ ( self ) : \"\"\" Renvoie le nombre d\u2019\u00e9l\u00e9ments de la pile. \"\"\" taille = 0 celluleCourante = self . top while ( celluleCourante != None ) : celluleCourante = celluleCourante . suivant taille += 1 return taille Les files \u00b6 Pr\u00e9sentation \u00b6 La file, comme la pile ou la liste, permet de stocker des donn\u00e9es et d\u2019y acc\u00e9der. La diff\u00e9rence se situe au niveau de l\u2019ajout et du retrait d\u2019\u00e9l\u00e9ments. On parle de mode FIFO (First in, First out, donc, premier arriv\u00e9, premier sorti), c\u2019est-\u00e0- dire que le premier \u00e9l\u00e9ment ayant \u00e9t\u00e9 ajout\u00e9 \u00e0 la structure sera le prochain \u00e9l\u00e9ment auquel on acc\u00e8dera. Les derniers \u00e9l\u00e9ments ajout\u00e9s devront \u00ab attendre \u00bb que tous les \u00e9l\u00e9ments ayant \u00e9t\u00e9 ajout\u00e9s avant eux soient sortis de la file. Contrairement aux listes, on ne peut donc pas acc\u00e9der \u00e0 n\u2019importe quelle valeur de la structure (pas d\u2019index). Pour g\u00e9rer cette contrainte, la pile est caract\u00e9ris\u00e9e par deux \u00ab emplacements \u00bb : la t\u00eate de file, sortie de la file (d\u00e9but de la structure), o\u00f9 les \u00e9l\u00e9ments sont retir\u00e9s ; le bout de file, entr\u00e9e de la file (fin de la structure), o\u00f9 les \u00e9l\u00e9ments sont ajout\u00e9s. On peut s\u2019imaginer une file d\u2019attente, dans un cin\u00e9ma par exemple. Les premi\u00e8res personnes \u00e0 pouvoir acheter leur place sont les premi\u00e8res arriv\u00e9es, et les nouveaux arrivants se placent au bout de la file. Interface d'une pile \u00b6 Une file est une collection de donn\u00e9es. On appelle t\u00eate de file le premier \u00e9l\u00e9ment de la structure et queue de la file le dernier \u00e9l\u00e9ment. Quand un \u00e9l\u00e9ment est ajout\u00e9 \u00e0 la file, on l\u2019ajoute en queue de file et il devient la nouvelle queue de la file. Quand un \u00e9l\u00e9ment est retir\u00e9 de la file, on le s\u00e9lectionne \u00e0 la t\u00eate de la file et la nouvelle t\u00eate est l\u2019\u00e9l\u00e9ment qui suivait l\u2019ancienne t\u00eate. Lorsqu\u2019on ajoute un \u00e9l\u00e9ment \u00e0 une file vide, celui-ci est donc \u00e0 la fois la t\u00eate et le bout de la file. On peut d\u00e9finir au moins 6 primitives de cette struture de donn\u00e9es: Primitives de l'interface Commentaires creer_file_vide() cr\u00e9e une file vide est_vide(F) retourne un bool\u00e9en indiquant si la file F est vide taille_file(F) retourne la taille de la file F enfiler(F, e) ajoute l'\u00e9l\u00e9ment e \u00e0 la queue de F defiler(F) retire l'\u00e9l\u00e9m\u00e9nt situ\u00e9 \u00e0 la t\u00eate de la file F affiche_tete(F) affiche la t\u00eate de la file F sans la retirer La struture File est utilis\u00e9e pour: une imprimante dans sa gestion des documents \u00e0 imprimer mod\u00e9liser un jeu de bataille mod\u00e9liser une file d'attente dan sun cas plus g\u00e9n\u00e9ral... Impl\u00e9menter une file \u00b6 Toujours deux impl\u00e9mentations possibles m\u00eame si on en d\u00e9couvrira bien d'autres... La classe File... class Cellule : def __init__ ( self , element , succ ): self . element = element self . succ = succ def get_element ( self ): return self . element def get_succ ( self ): return self . succ def set_succ ( self , cell ): self . succ = cell def __repr__ ( self ): return str ( self . element ) + '|' class File : def __init__ ( self ): self . tete = None self . dernier = None def est_vide ( self ): return self . tete == None def enfiler ( self , element ): if not self . est_vide (): self . dernier . set_succ ( Cellule ( element , None )) self . dernier = self . dernier . get_succ () else : self . dernier = Cellule ( element , None ) self . tete = self . dernier def premier ( self ): assert not self . est_vide () return self . tete . get_element () def defiler ( self ): assert not self . est_vide () self . tete = self . tete . get_succ () def __repr__ ( self ): c = self . tete s = '' while not c is None : s = s + c . __repr__ () c = c . get_succ () return 'entree|' + s [:] + 'sortie' \u00c0 faire En vous inspirant de l'impl\u00e9mentation des piles, proposez une impl\u00e9mentation des files en fonctionnelle avec des listes python.", "title": "Structure de donn\u00e9es lin\u00e9aires"}, {"location": "term/stalin.html#structures-de-donnees-lineaires", "text": "", "title": "Structures de donn\u00e9es lin\u00e9aires"}, {"location": "term/stalin.html#introduction", "text": "Le programme Python poss\u00e8de un ensemble de types de base et de types structur\u00e9s rencontr\u00e9s en classe de premi\u00e8re: entier ( int ), flottants ( float ), cha\u00eene de caract\u00e8res, tuple, liste ou encore dictionnaires... Nous allons dans ce chapitre d\u00e9finir de nouveaux types abstraits , \u00e0 partir de son interface , qui rassemble l'ensemble des op\u00e9rations qui permettent de d\u00e9finir, de lire ou de modifier ces nouveaux objets. Dans la plus part des cas, on distinguera: les constructeurs qui cr\u00e9e la donn\u00e9e les getters qui permettent d'obtenir des informations sur la structure les setters qui permettent de modifier les caract\u00e9ristiques de ces donn\u00e9es On fera bien la distinction entre interface et impl\u00e9mentation : la premi\u00e8re d\u00e9finit une op\u00e9ration, la seconde la code! Pour une m\u00eame interface, il peut exister plusieurs impl\u00e9mentations comme nous allons le d\u00e9couvrir dans ce chapitre!", "title": "Introduction"}, {"location": "term/stalin.html#les-listes", "text": "", "title": "Les listes"}, {"location": "term/stalin.html#presentation", "text": "Le type abstrait Liste Une liste est une s\u00e9quence ordonn\u00e9e d'\u00e9l\u00e9ments. La liste suivante (\ud83e\udd23) donne une interface minimale de ce type: Primitives de l'interface Commentaires creer_liste() cr\u00e9e une liste vide est_vide(L) retourne un bool\u00e9en indiquant si la liste est vide inserer(L, e) ins\u00e9rer l'\u00e9l\u00e9ment e dans la liste L affiche_tete(L) affiche le premier \u00e9l\u00e9ment de la liste L Remarquez qu'on ne pr\u00e9cise pas dans la derni\u00e8re instruction o\u00f9 est ins\u00e9r\u00e9 l'\u00e9l\u00e9ment: \u00e0 la fin? au d\u00e9but? On peut enrichir cette interface par de nouvelles primitives comme supprimer(L,e) , afficher_premier_elt(L) ou simplement une op\u00e9rations qui retourne le nombre d'\u00e9l\u00e9ments de cette liste... Pour information, les interfaces Python sont en g\u00e9n\u00e9ral tr\u00e8s riches , ce qui fait aussi sa popularit\u00e9!", "title": "Pr\u00e9sentation !"}, {"location": "term/stalin.html#comment-implementer-une-liste", "text": "Deux choix principaux pour l'impl\u00e9mentation d'une liste: soit par un tableau ( array ) o\u00f9 les \u00e9l\u00e9ments sont cons\u00e9cutifs en m\u00e9moire: dans le langage C, la taille des tableaux est d\u00e9finie pr\u00e9alablement pour allouer la place en m\u00e9moire et faire en sorte que les \u00e9l\u00e9ments soient \u00e0 des adresses voisines. soit par une liste cha\u00een\u00e9e: une liste est alors compos\u00e9e d'une t\u00eate et d'une queue! Les \u00e9l\u00e9ments d'une m\u00eame liste peuvent \u00eatre stock\u00e9s n'importe o\u00f9 dans la m\u00e9moire... Une diff\u00e9rence importante entre ces deux choix : dans un tableau, l\u2019 acc\u00e8s \u00e0 un \u00e9l\u00e9ment par son indice est rapide mais l\u2019 insertion est co\u00fbteuse et c\u2019est le contraire pour les listes cha\u00een\u00e9es ! La cellule (tete, queue) permet de cr\u00e9er ces derni\u00e8res listes!", "title": "Comment impl\u00e9menter une liste?"}, {"location": "term/stalin.html#une-premiere-tentative", "text": "Allez soyons fous! Faisons le choix d'impl\u00e9menter une liste cha\u00een\u00e9e par des listes (pr\u00e9cis\u00e9ment par des listes python...)!\ud83e\udd14 Reprenons le tableau enrichi de l'interface sur les listes: Interface Impl\u00e9mentation Primitives de l'interface Commentaires creer_liste_vide() cr\u00e9e une liste vide est_vide(L) retourne un bool\u00e9en indiquant si la liste est vide inserer(L, e) ins\u00e9rer l'\u00e9l\u00e9ment e \u00e0 la t\u00eate de la liste L affiche_tete(L) affiche la t\u00eate de la liste L affiche_queue(L) affiche la queue de la liste L affiche_liste(L) affiche tous les \u00e9l\u00e9ments de la liste def creer_liste_vide (): return [] def est_vide ( L ): return L == [] def inserer ( L , e ): return [ e , L ] def affiche_tete ( L ): if not est_vide ( L ): return L [ 0 ] def affiche_queue ( L ): if not est_vide ( L ): return L [ 1 ] def affiche_liste ( L ): aff = [] while not est_vide ( L ): aff . append ( L [ 0 ]) L = L [ 1 ] return aff On peut alors cr\u00e9er des listes avec les interfaces pr\u00e9c\u00e9dentes: Le code suivant... ... produit la liste cha\u00een\u00e9e suivante! l1 = creer_liste_vide () for i in range ( 4 ): l1 = inserer ( l1 , i ) [3, [2, [1, [0, []]]]] Remarquez que la construction d'une liste cha\u00een\u00e9e est r\u00e9cursive ! Comprenez que Python a sa propre interface pour les listes, celle que vous connaissez habituellement.", "title": "Une premi\u00e8re tentative..."}, {"location": "term/stalin.html#une-deuxieme-tentative", "text": "Puisque nous cr\u00e9eons de nouveaux objets d\u00e9finis par leur propri\u00e9t\u00e9 et leur m\u00e9thode, la programmation orient\u00e9e objet semble prendre toute sa place ici. L'objet n\u00e9cessaire \u00e0 la construcion de telles listes est d\u00e9finie par la classe Cellule propos\u00e9e ci-dessous: \"\"\" Implantation de la classe \u201cCellule\u201d Elle sera utilis\u00e9e pour les listes, les piles et les files. \"\"\" class Cellule () : def __init__ ( self , valeur = None , suivant = None ) : \"\"\" Param\u00e8tres ---------- valeur : type quelconque Description : Une valeur stock\u00e9e dans la cellule suivant : Un autre objet de type \u201cCellule\u201d Description : La cellule qui \u201csuit\u201d cette cellule selon l\u2019ordre d\u00e9fini par la structure. ---------- Cr\u00e9e une cellule avec une valeur et l\u2019adresse de la cellule qui la suit. \"\"\" self . valeur = valeur self . suivant = suivant Les attributs sont optionnels par d\u00e9faut. Voici maintenant une impl\u00e9mentation possible de listes cha\u00een\u00e9es avec ce constructeur: from Cellule import Cellule class Liste () : def __init__ ( self ) : \"\"\" Cr\u00e9e une liste vide. L\u2019attribut \u201chead\u201d est un objet Cellule qui d\u00e9finit la cellule en t\u00eate de la liste (premier \u00e9l\u00e9ment de la liste) \"\"\" self . head = None def estVide ( self ) : \"\"\" Renvoie True si la liste est vide et False sinon. \"\"\" return self . head == None def insererEnTete ( self , element ) : \"\"\" Param\u00e8tres ---------- element : N\u2019importe quel type Description : L\u2019\u00e9l\u00e9ment \u00e0 ajouter en t\u00eate de la liste ------- Ajoute un \u00e9l\u00e9ment en t\u00eate de liste. \"\"\" nouvelle_cellule = Cellule ( element , self . head ) self . head = nouvelle_cellule def tete ( self ) : \"\"\" Renvoie la valeur de l\u2019\u00e9l\u00e9ment en t\u00eate de liste. \"\"\" if not ( self . estVide ()) : return self . head . valeur def queue ( self ) : \"\"\" Renvoie la liste priv\u00e9e de son premier \u00e9l\u00e9ment (queue de la liste) \"\"\" subList = None if not ( self . estVide ()) : subList = Liste () subList . head = self . head . suivant return subList def __str__ ( self ): l = \"|\" c = self . head while c != None : l = l + str ( c . valeur ) + \"|\" c = c . suivant return l On peut alors cr\u00e9er de nouvelles listes avec cette nouvelle impl\u00e9mentation. \u00c0 faire Cr\u00e9er la liste ordonn\u00e9e 3,2,1,0 avec la classe pr\u00e9c\u00e9dente. Cr\u00e9er une liste de 20 nombres al\u00e9atoires compris entre 0 et 100. Afficher sa t\u00eate puis sa queue. On veut enrichir la structure par de nouvelles m\u00e9thodes. \u00c0 faire D\u00e9finir la m\u00e9thode __len__(self) qui retourne la longueur de la liste. D\u00e9finir la m\u00e9thode __getitem__(self, position) qui permet d'acc\u00e9der \u00e0 l'\u00e9l\u00e9ment situ\u00e9 \u00e0 la position position de la liste si celui-ci existe! D\u00e9finir la m\u00e9thode __ajouter_fin__(self, elt) qui permet d'ajouter un \u00e9l\u00e9ment \u00e0 la liste... On peut envisager une multitude d'impl\u00e9mentation selon le choix du d\u00e9veloppeur m\u00eame si les primitives de l'interface liste ne changent pas vraiment... Nous retrouverons cette id\u00e9e dans la partie exercice... \u00c0 faire Impl\u00e9menter la fonction qui permet d'ins\u00e9rer dans la liste cha\u00een\u00e9e ci-dessus, un \u00e9l\u00e9ment \u00e0 une position quelconque...", "title": "Une deuxi\u00e8me tentative!"}, {"location": "term/stalin.html#les-piles", "text": "", "title": "Les piles"}, {"location": "term/stalin.html#presentation_1", "text": "La pile, comme la liste, permet de stocker des donn\u00e9es et y acc\u00e9der. La diff\u00e9rence se situe au niveau de l'ajout et de la suppression d'un \u00e9l\u00e9ment! On parle de mode LIFO (Last In, First Out, donc, dernier arriv\u00e9, premier sorti), c\u2019est- \u00e0-dire que le dernier \u00e9l\u00e9ment ajout\u00e9 \u00e0 la structure sera le prochain \u00e9l\u00e9ment auquel on acc\u00e8dera. Les premiers \u00e9l\u00e9ments ayant \u00e9t\u00e9 ajout\u00e9s devront \u00ab attendre \u00bb que tous les \u00e9l\u00e9ments qui ont \u00e9t\u00e9 ajout\u00e9s apr\u00e8s eux soient sortis de la pile. Contrairement aux listes, on ne peut donc pas acc\u00e9der \u00e0 n\u2019importe quelle valeur de la structure (pas d\u2019index). Pour g\u00e9rer cette contrainte, on d\u00e9finit alors le sommet de la pile qui caract\u00e9rise l\u2019emplacement pour ajouter ou retirer des \u00e9l\u00e9ments. On peut s\u2019imaginer une pile d\u2019assiettes pour mieux se repr\u00e9senter mentalement cette structure. On ajoute des nouvelles assiettes au sommet de la pile, et quand on veut en retirer une, on est oblig\u00e9 de prendre celle situ\u00e9e au sommet.", "title": "Pr\u00e9sentation"}, {"location": "term/stalin.html#interface-dune-pile", "text": "On peut d\u00e9finir au moins 6 primitives de cette struture de donn\u00e9es: Primitives de l'interface Commentaires creer_pile_vide() cr\u00e9e une pile vide est_vide(P) retourne un bool\u00e9en indiquant si la pile P est vide taille_pile(P) retourne la taille de la pile P empiler(P, e) ajoute l'\u00e9l\u00e9ment e au sommet de la pile depiler(P) retire l'\u00e9l\u00e9m\u00e9nt situ\u00e9 au sommet de la pile P affiche_sommet(P) affiche le sommet de la pile P sans le retirer Attention aux effets de bords! Les m\u00e9thodes d'affichage en particulier ne doivent pas modifier l'\u00e9tat de la pile. En effet, pour afficher tous les \u00e9l\u00e9ments de la liste, l'id\u00e9e naturelle serait de la d\u00e9piler enti\u00e8rement et d'afficher chaque \u00e9l\u00e9ment. Mais \u00e0 la fin, la pile serait vide! On appelle cela un effet de bord ! Les fonctions javascript en particulier cr\u00e9ent de nombreux effet de bords de par leur nature mais c'est voulu! ce que dit Wikip\u00e9dia... En informatique, une fonction est dite \u00e0 effet de bord (traduction mot \u00e0 mot de l'anglais side effect, dont le sens est plus proche d'effet secondaire) si elle modifie un \u00e9tat en dehors de son environnement local, c'est-\u00e0-dire a une interaction observable avec le monde ext\u00e9rieur autre que retourner une valeur. La struture Pile est utilis\u00e9e pour: conserver l'historique de navigation stocker des actions et les annuler ( Ctrl + Z et Ctrl + Y ) programmer une calculatrice en notation polonaise invers\u00e9e ...", "title": "Interface d'une pile"}, {"location": "term/stalin.html#implementer-une-pile", "text": "On peut \u00e0 peu pr\u00e8s tout imaginer pour impl\u00e9menter la struture de pile... je vous en propose deux ici! paradigme fonctionnel paradigme orient\u00e9 objet def creer_pile_vide () : \"\"\" Cr\u00e9e une pile vide en s\u2019appuyant sur les listes Python \"\"\" return [] def taille_pile ( pile ): \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile dont on veut conna\u00eetre le nombre d\u2019\u00e9l\u00e9ments ------- Renvoie le nombre d\u2019\u00e9l\u00e9ments contenus dans la pile. \"\"\" return len ( pile ) def est_vide ( pile ) : \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile dont on souhaite d\u00e9terminer si elle est vide. ------- Renvoie ``True`` si la pile est vide, et ``False`` sinon \"\"\" return taille_pile ( pile ) == 0 def empiler ( pile , element ) : \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile sur laquelle on souhaite empiler un \u00e9l\u00e9ment element : N\u2019importe quel type de donn\u00e9es. Description : L\u2019\u00e9l\u00e9ment \u00e0 empiler dans la pile. ------- Empile un \u00e9l\u00e9ment dans la pile pass\u00e9e en param\u00e8tres. \"\"\" pile . append ( element ) def depiler ( pile ) : \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile sur laquelle on souhaite d\u00e9piler un \u00e9l\u00e9ment ------- D\u00e9pile (supprime de la pile) l\u2019\u00e9l\u00e9ment au sommet de la pile et le renvoie. \"\"\" if est_vide ( pile ) : return None else : return pile . pop () def affiche_sommet ( pile ) : \"\"\" Param\u00e8tres ---------- pile : Une pile, telle que cr\u00e9\u00e9e dans ce module (utilisant une list Python) Description : La pile dont on veut conna\u00eetre le sommet. ------- Renvoie le sommet de la pile (mais ne le d\u00e9pile pas). \"\"\" if est_vide ( pile ) : return None else : return pile [ len ( pile ) - 1 ] from Cellule import Cellule class Pile : def __init__ ( self ) : \"\"\" Cr\u00e9e une pile vide. L\u2019attribut \u201ctop\u201d est un objet Cellule qui d\u00e9finit la cellule constituant le \u201csommet\u201d de la pile. \"\"\" self . top = None def estVide ( self ) : \"\"\" Renvoie True si la pile est vide et False sinon. \"\"\" return self . top == None def sommet ( self ) : \"\"\" Renvoie la valeur de l\u2019\u00e9l\u00e9ment au sommet de la pile. \"\"\" if not ( self . estVide ()) : return self . top . valeur else : return None def empiler ( self , element ) : \"\"\" Param\u00e8tres ---------- element : est de n\u2019importe quel type Description : L\u2019\u00e9l\u00e9ment \u00e0 empiler sur la pile. ------- Ajoute un \u00e9l\u00e9ment au sommet de la pile. \"\"\" nouvelleCellule = Cellule ( element , self . top ) self . top = nouvelleCellule def depiler ( self ) : \"\"\" D\u00e9pile et renvoie l\u2019\u00e9l\u00e9ment situ\u00e9 au sommet de la pile. \"\"\" if not ( self . estVide ()) : valeur = self . top . valeur self . top = self . top . suivant return valeur else : return None def __len__ ( self ) : \"\"\" Renvoie le nombre d\u2019\u00e9l\u00e9ments de la pile. \"\"\" taille = 0 celluleCourante = self . top while ( celluleCourante != None ) : celluleCourante = celluleCourante . suivant taille += 1 return taille", "title": "Impl\u00e9menter une pile"}, {"location": "term/stalin.html#les-files", "text": "", "title": "Les files"}, {"location": "term/stalin.html#presentation_2", "text": "La file, comme la pile ou la liste, permet de stocker des donn\u00e9es et d\u2019y acc\u00e9der. La diff\u00e9rence se situe au niveau de l\u2019ajout et du retrait d\u2019\u00e9l\u00e9ments. On parle de mode FIFO (First in, First out, donc, premier arriv\u00e9, premier sorti), c\u2019est-\u00e0- dire que le premier \u00e9l\u00e9ment ayant \u00e9t\u00e9 ajout\u00e9 \u00e0 la structure sera le prochain \u00e9l\u00e9ment auquel on acc\u00e8dera. Les derniers \u00e9l\u00e9ments ajout\u00e9s devront \u00ab attendre \u00bb que tous les \u00e9l\u00e9ments ayant \u00e9t\u00e9 ajout\u00e9s avant eux soient sortis de la file. Contrairement aux listes, on ne peut donc pas acc\u00e9der \u00e0 n\u2019importe quelle valeur de la structure (pas d\u2019index). Pour g\u00e9rer cette contrainte, la pile est caract\u00e9ris\u00e9e par deux \u00ab emplacements \u00bb : la t\u00eate de file, sortie de la file (d\u00e9but de la structure), o\u00f9 les \u00e9l\u00e9ments sont retir\u00e9s ; le bout de file, entr\u00e9e de la file (fin de la structure), o\u00f9 les \u00e9l\u00e9ments sont ajout\u00e9s. On peut s\u2019imaginer une file d\u2019attente, dans un cin\u00e9ma par exemple. Les premi\u00e8res personnes \u00e0 pouvoir acheter leur place sont les premi\u00e8res arriv\u00e9es, et les nouveaux arrivants se placent au bout de la file.", "title": "Pr\u00e9sentation"}, {"location": "term/stalin.html#interface-dune-pile_1", "text": "Une file est une collection de donn\u00e9es. On appelle t\u00eate de file le premier \u00e9l\u00e9ment de la structure et queue de la file le dernier \u00e9l\u00e9ment. Quand un \u00e9l\u00e9ment est ajout\u00e9 \u00e0 la file, on l\u2019ajoute en queue de file et il devient la nouvelle queue de la file. Quand un \u00e9l\u00e9ment est retir\u00e9 de la file, on le s\u00e9lectionne \u00e0 la t\u00eate de la file et la nouvelle t\u00eate est l\u2019\u00e9l\u00e9ment qui suivait l\u2019ancienne t\u00eate. Lorsqu\u2019on ajoute un \u00e9l\u00e9ment \u00e0 une file vide, celui-ci est donc \u00e0 la fois la t\u00eate et le bout de la file. On peut d\u00e9finir au moins 6 primitives de cette struture de donn\u00e9es: Primitives de l'interface Commentaires creer_file_vide() cr\u00e9e une file vide est_vide(F) retourne un bool\u00e9en indiquant si la file F est vide taille_file(F) retourne la taille de la file F enfiler(F, e) ajoute l'\u00e9l\u00e9ment e \u00e0 la queue de F defiler(F) retire l'\u00e9l\u00e9m\u00e9nt situ\u00e9 \u00e0 la t\u00eate de la file F affiche_tete(F) affiche la t\u00eate de la file F sans la retirer La struture File est utilis\u00e9e pour: une imprimante dans sa gestion des documents \u00e0 imprimer mod\u00e9liser un jeu de bataille mod\u00e9liser une file d'attente dan sun cas plus g\u00e9n\u00e9ral...", "title": "Interface d'une pile"}, {"location": "term/stalin.html#implementer-une-file", "text": "Toujours deux impl\u00e9mentations possibles m\u00eame si on en d\u00e9couvrira bien d'autres... La classe File... class Cellule : def __init__ ( self , element , succ ): self . element = element self . succ = succ def get_element ( self ): return self . element def get_succ ( self ): return self . succ def set_succ ( self , cell ): self . succ = cell def __repr__ ( self ): return str ( self . element ) + '|' class File : def __init__ ( self ): self . tete = None self . dernier = None def est_vide ( self ): return self . tete == None def enfiler ( self , element ): if not self . est_vide (): self . dernier . set_succ ( Cellule ( element , None )) self . dernier = self . dernier . get_succ () else : self . dernier = Cellule ( element , None ) self . tete = self . dernier def premier ( self ): assert not self . est_vide () return self . tete . get_element () def defiler ( self ): assert not self . est_vide () self . tete = self . tete . get_succ () def __repr__ ( self ): c = self . tete s = '' while not c is None : s = s + c . __repr__ () c = c . get_succ () return 'entree|' + s [:] + 'sortie' \u00c0 faire En vous inspirant de l'impl\u00e9mentation des piles, proposez une impl\u00e9mentation des files en fonctionnelle avec des listes python.", "title": "Impl\u00e9menter une file"}, {"location": "term/termnsi.html", "text": "Terminale NSI \u00b6 Programme de la classe \u00b6 Le programme de la sp\u00e9cialit\u00e9 NSI en classe de terminale ici Les documents d'accompagnement l\u00e0", "title": "Accueil"}, {"location": "term/termnsi.html#terminale-nsi", "text": "", "title": "Terminale NSI"}, {"location": "term/termnsi.html#programme-de-la-classe", "text": "Le programme de la sp\u00e9cialit\u00e9 NSI en classe de terminale ici Les documents d'accompagnement l\u00e0", "title": "Programme de la classe"}, {"location": "tp/jeu_mastermind.html", "text": "Mon projet sur le mastermind Introduction Le mastermind est un jeu de soci\u00e9t\u00e9 fort connu notamment des plus anciens...(et oui ! il fallait s'occuper...) Le principe est simple: un joueur1 choisit une combinaison de quatre couleurs qu'il garde secret et son camarade, le joueur2, a 10 coups pour la retrouver. \u00c0 chaque proposition, le joueur1 indique au joueur 2 le nombre de: boules pr\u00e9sentes dans sa combinaison (par la pr\u00e9sence de petits pions blancs) boules plac\u00e9es au bont endroit sans indiquer lesquelles!(par la pr\u00e9sence de petits pions noirs) On se propose de fabriquer une \u00e9mulation du jeu afin de pouvoir jouer avec un ordinateur. Programmation du jeu Poser des conditions: \u00b6 On va faire en sorte pour simplifier que le joueur1 doit proposer une combinaison de couleurs diff\u00e9rentes: le joueur2 pourra n\u00e9amoins proposer n'importe quelle proposition... En revanche, il ne pourra proposer que 10 coups! Jouer en console: \u00b6", "title": "Jeu mastermind"}, {"location": "tp/jeu_mastermind.html#poser-des-conditions", "text": "On va faire en sorte pour simplifier que le joueur1 doit proposer une combinaison de couleurs diff\u00e9rentes: le joueur2 pourra n\u00e9amoins proposer n'importe quelle proposition... En revanche, il ne pourra proposer que 10 coups!", "title": "Poser des conditions:"}, {"location": "tp/jeu_mastermind.html#jouer-en-console", "text": "", "title": "Jouer en console:"}]}